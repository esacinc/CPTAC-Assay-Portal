{"version":1,"windowDimensions":{"x":108,"y":23,"width":1584,"height":805,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/kristennice/Desktop/cptac_assays/code"],"buffers":[{"id":"5f7e8c251eed8932397338423c3ee394","text":"","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","preserveFolds":true,"autoscroll":false,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","preferredLineEnding":"\n","nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"a9d31d89868d6242758fc56098041fbf","text":"<?php\nfunction show_assay_details() {\n  $app = \\Slim\\Slim::getInstance();\n  $env = $app->environment();\n  global $final_global_template_vars;\n  require_once $final_global_template_vars[\"absolute_path_to_this_module\"] . \"/models/assays.class.php\";\n  require_once $_SERVER[\"PATH_TO_CORE\"] . \"slim_framework/SWPG/models/XML2Array.php\";\n  require_once($_SERVER['DOCUMENT_ROOT'].'/cms/wp-load.php' );\n  $xml2array = new \\swpg\\models\\XML2Array();\n  $db_conn = new \\swpg\\models\\db( $final_global_template_vars[\"db_connection\"] );\n  $db_resource = $db_conn->get_resource();\n\n  // Local Portal Data\n  $assay = new Assay(\n    $db_resource\n    ,$final_global_template_vars[\"session_key\"]\n  );\n  \n  // Query by gene symbol, uniprot id, or assay id\n  $path_parts = explode('/', $env[\"PATH_INFO\"]);\n  array_shift($path_parts);\n  $gene_symbol = ($path_parts[0] == 'gene') ? $path_parts[1] : false;\n  $uniprot_id = ($path_parts[0] == 'uniprot') ? $path_parts[1] : false;\n  $assay_id = (!$gene_symbol && !$uniprot_id) ? $path_parts[0] : false;\n\n  \n\n  // Extract just the id from the \"CPTAC-\" appended GET variable\n  if($assay_id) {\n    preg_match('!\\d+!', $assay_id, $matches);\n    $assay_id = $matches[0];\n  }\n\n\n  // Next and Previous\n  $nextPrev['prevNext'] = $assay->getPrevNextAssay($assay_id);\n\n  // Get details\n  $data = $assay->get_details( $assay_id, $gene_symbol, $uniprot_id );\n\n  $data[\"preview_header\"] = false;\n\n  // If get_details() returns false, throw a 404\n  if(!$data) $app->notFound();\n\n  // If the record is not approved and there no authenticated session, throw a 404\n  if( ($data[\"approval_status\"] != 1) && (!isset($_SESSION[$final_global_template_vars[\"session_key\"]])) ) $app->notFound();\n\n  // If the record is not approved and there is an authenticated session, set the preview_header variable to true. Otherwise, set it to false.\n  $data[\"preview_header\"] = ( ($data[\"approval_status\"] != 1) && isset($_SESSION[$final_global_template_vars[\"session_key\"]]) ) ? true : false;\n\n  // Get the menu data from Wordpress\n  $data[\"menu\"] = wp_get_nav_menu_items('top-menu');\n\n  // Reformat data from UniProt to match the array heiarchy from when it was an API call\n  $data[\"uniprot_api\"] = array(\n    \"uniprot_ac\" => $data[\"uniprot_ac\"]\n    ,\"gene_synonym\" => $data[\"uniprot_gene_synonym\"]\n    ,\"gene_symbol\" => $data[\"gene\"]\n    ,\"hgnc_gene_id\" => $data[\"uniprot_hgnc_gene_id\"]\n    ,\"uniprot_kb\" => $data[\"uniprot_kb\"]\n    ,\"source_taxon_id\" => $data[\"uniprot_source_taxon_id\"]\n    ,\"sequence\" => $data[\"uniprot_sequence\"]\n    ,\"sequence_raw\" => $data[\"uniprot_sequence_raw\"]\n    ,\"sequence_length\" => $data[\"uniprot_sequence_length\"]\n  );\n\n  // Get uniprot_splice_junctions\n  $data[\"uniprot_api\"][\"splice_junctions\"] = $assay->get_uniprot_splice_junctions( $data[\"uniprot\"] );\n  // Get uniprot_snps\n  $data[\"uniprot_api\"][\"snps\"] = $assay->get_uniprot_snps( $data[\"uniprot\"] );\n  // Get uniprot_isoforms\n  $data[\"uniprot_api\"][\"isoforms\"] = $assay->get_uniprot_isoforms( $data[\"uniprot\"] );\n\n\n  // Get data from Entrez\n  $data[\"entrez_api\"] = $assay->get_entrez_gene_data(\n    $data[\"gene\"]\n    ,$final_global_template_vars[\"entrez_api_url\"]\n    ,$xml2array\n  );\n\n\n\n  // Get all genes\n  $genes['genes'] = $assay->getAllGenes($data['gene']);\n\n  $peptide_sequence_array = array();\n\n  // Create an array of peptide starts and ends to send to the $assay->formatSequenceHTML() method (without 'duplicates')\n  foreach($genes['genes'] as $gene_key => $gene_value) {\n    $peptide_sequence_array[] = array('id' => $gene_value['manage'], 'peptide_sequence' => $gene_value['peptide_sequence'], 'peptide_modified_sequence' => $gene_value['peptide_modified_sequence'], 'start' => $gene_value['peptide_start'], 'end' => $gene_value['peptide_end']);\n  }\n  // Remove duplicate arrays\n  $peptide['sequence_array'] = array_map('unserialize', array_unique(array_map('serialize', $peptide_sequence_array)));\n  // Reindex the array\n  $peptide['sequence_array'] = array_values($peptide['sequence_array']);\n\n  // Create an array of peptide data including laboratory data (with 'duplicates')\n  $peptide['sequence_labs_array'] = $assay->getAllPeptideSequences( $data['gene']);\n\n\n  // Return only unique peptide sequences (TEMPORARY???)\n  $input = $genes[\"genes\"];\n  $temp  = array();\n  $keys  = array();\n  $i = 0;\n  foreach ( $input as $gene_key => $gene_data ) {\n    if ( !in_array($gene_data['peptide_sequence'], $temp) ) {\n      $temp[] = $gene_data['peptide_sequence'];\n      $keys[$gene_key] = true;\n    }\n    $i++;\n  }\n  $genes_result = array_intersect_key($input, $keys);\n  $genes['genes_distinct'] = array_values($genes_result);\n\n  // Format the sequence with highlighted peptide starts and ends\n  $data[\"uniprot_api\"]['formatted_sequence'] = $assay->formatSequenceHTML($data[\"uniprot_api\"]['sequence'],$peptide['sequence_array'],$data);\n\n  // Scrape the PhosphoSitePlus site for the the embedded SWF\n  $phosphosites_graph = false;\n  $genes['phosphosites_graph'] = false;\n  $phosphosites_page = $assay->curl(\"http://www.phosphosite.org/uniprotAccAction.do?id=\".$data[\"uniprot_api\"][\"uniprot_ac\"]);\n  $phosphosites_graph = $assay->scrape_between($phosphosites_page, '<object width=\"970\" height=\"300\">', '</object>');\n\n  if(!$phosphosites_graph) {\n    $phosphosites_graph = $assay->scrape_between($phosphosites_page, '<object width=\"970\" height=\"200\">', '</object>');\n    $phosphosites_graph = str_replace('ProteinViewer200.swf', '/assays/library/ProteinViewer200.swf', $phosphosites_graph);\n  }\n\n  if($phosphosites_graph) {\n    $phosphosites_graph_mod = str_replace('ProteinViewer300.swf', '/assays/library/ProteinViewer300.swf', $phosphosites_graph);\n    $genes['phosphosites_graph'] = str_replace('width=\"970\"', 'wmode=\"transparent\" width=\"855\"', $phosphosites_graph_mod);\n  }\n\n  // Chromatogram images\n  $i = 0;\n  foreach($genes['genes'] as $gene) {\n    $genes['genes'][$i]['chromatogram_images'] = false;\n    $chromatogram_images = $assay->get_chromatogram_images( $gene['analyte_peptide_id'], $gene['laboratories_id'] );\n    foreach($chromatogram_images as $chromatogram_image ) {\n      $genes['genes'][$i]['chromatogram_images'][] = $final_global_template_vars['panorama_images_path'].$chromatogram_image['file_name'];\n    }\n    $i++;\n  }\n  // Response curve images\n  $i = 0;\n  foreach($genes['genes'] as $gene) {\n    $genes['genes'][$i]['response_curve_images'] = false;\n    $response_curve_images = $assay->get_response_curve_images( $gene['peptide_modified_sequence'], $gene['analyte_peptide_id'], $gene['laboratories_id'] );\n    foreach($response_curve_images as $response_curve_image ) {\n      $genes['genes'][$i]['response_curve_images'][] = $final_global_template_vars['panorama_images_path'].$response_curve_image['file_name'];\n    }\n    $i++;\n  }  \n  // Validation sample curve images (Repeatability)\n  $i = 0;\n\n  foreach($genes['genes'] as $gene) {\n    $genes['genes'][$i]['validation_sample_image'] = false;\n    $validation_sample_image = $assay->get_validation_sample_image( $gene['peptide_modified_sequence'], $gene['analyte_peptide_id'], $gene['laboratories_id'] );\n    if(!empty($validation_sample_image)) {\n      $genes['genes'][$i]['validation_sample_image'] = $final_global_template_vars['panorama_images_path'].$validation_sample_image['file_name'];\n    }\n    $i++;\n  }\n  \n  // Validation sample tabular data\n  $i = 0;\n  $validation_ignored_keys = array('fragment_ion','low_count','med_count','high_count');\n  foreach($genes['genes'] as $gene) {\n\n    $genes['genes'][$i]['validation_sample_images_data'] = false;\n    $validation_sample_data_array = $assay->get_validation_sample_images_data(\n      $gene['peptide_modified_sequence']\n      ,$gene['analyte_peptide_id']\n      ,$gene['laboratories_id']\n      ,$gene['import_log_id']\n      ,$assay_id\n    );\n\n    foreach($validation_sample_data_array as $validation_sample_data ) {\n      \n      $manage_id = $validation_sample_data['manage_id'];\n      unset($validation_sample_data['manage_id']);\n\n      foreach($validation_sample_data as $key => $value) {\n        // Color values above 20% in red\n        if( ($value > 20) && !in_array($key, $validation_ignored_keys) ) {\n          $new_validation_sample_data[$key] = '<span class=red>'.$value.'</span>';\n        } else {\n          $new_validation_sample_data[$key] = $value;\n        }\n      }\n      $genes['genes'][$i]['validation_sample_images_data'][$manage_id][] = $new_validation_sample_data;\n    }\n    $i++;\n  }\n\n\n\n  $i = 0;\n  foreach($genes['genes'] as $gene) {\n    $genes['genes'][$i]['sop_files'] = $assay->get_sop_files( $gene['import_log_id'] );\n    $i++;\n  }\n\n  // IE disclaimer var\n  $IE6 = (stristr('MSIE 6',$_SERVER['HTTP_USER_AGENT'])) ? true : false;\n  $IE7 = (stristr('MSIE 7',$_SERVER['HTTP_USER_AGENT'])) ? true : false;\n  $IE8 = (stristr('MSIE 8',$_SERVER['HTTP_USER_AGENT'])) ? true : false;\n  $data['show_disclaimer'] = ( $IE6 || $IE7 || $IE8 ) ? true : false;\n\n  $render_array = array();\n  foreach($data as $key => $value) $render_array[$key] = $value;\n\n  $default_render_array =  array(\n    \"page_title\" => $data['gene'].\", CPTAC-\".$data['manage'].\" - CPTAC Assay Portal\"\n    ,\"hide_side_nav\" => true\n  );\n\n\n\n  // define data for peptide_sequence\n  $gene_peptide_sequence = array();\n  foreach($genes['genes'] as $key => $value)\n  {\n    $gene_peptide_sequence['gene_peptide_sequence'][$key] = array(\n        \"peptide_sequence\" => $value['peptide_sequence']\n        ,\"peptide_modified_sequence\" => $value['peptide_modified_sequence']\n        ,\"laboratory_abbreviation\" => $value['laboratory_abbreviation']\n        ,\"celllysate_path\" => $value['celllysate_path']\n        ,\"laboratories_id\" => $value['laboratories_id']\n        ,\"import_log_id\" => $value['import_log_id']\n        ,\"peptide_standard_purity_types_id\" => $value['peptide_standard_purity_types_id']\n        ,\"manage_id\" => $value['manage']\n      );\n  }\n\n\n  // define data for peptide_sequence\n  $distinct_gene_peptide_sequence = array();\n\n  foreach($genes['genes'] as $key => $value)\n  {\n    $distinct_gene_peptide_sequence['distinct_gene_peptide_sequence'][$key] = array(\"peptide_sequence\" => $value['peptide_sequence'],\"manage\" => $value['manage']);\n  }\n\n  $render_array = array_merge( $render_array, $default_render_array, $genes, $peptide, $gene_peptide_sequence,$distinct_gene_peptide_sequence, $nextPrev );\n\n  $app->render(\n    'show_assay_details.php'\n    ,$render_array\n  );\n}\n?>","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":82,"column":0},"end":{"row":82,"column":0}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":13,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/controllers/assay_details.php","digestWhenLastPersisted":"84a03c8a590d531e9605a3455628eda6f71e6b39","preferredLineEnding":null,"nextMarkerId":253,"deserializer":"TextBuffer","version":5},{"id":"a1a9deadf1837d7ace2d1833cef6b80a","text":"<?php\nclass Assay\n{\n  private $session_key = \"\";\n  public $db;\n\n  public function __construct($db_connection=false,$session_key=false) {\n    if($db_connection && is_object($db_connection)) {\n      $this->db = $db_connection;\n    }\n    global $final_global_template_vars;\n    $this->final_global_template_vars = $final_global_template_vars;\n    $this->session_key = $session_key;\n  }\n\n\n  public function browse_assays(\n    $sort_field = false\n    ,$sort_order = 'DESC'\n    ,$start_record = 0\n    ,$stop_record = 20\n    ,$search = false\n    ,$sortable_fields = false\n    ,$side_bar_filter = array())\n  {\n\n    $sort = \"\";\n    $search_sql = \" WHERE 1 = 1 \";\n    $pdo_params = array();\n    $limit_sql = \" LIMIT {$start_record}, {$stop_record} \";\n    $protein_interactions_select = '';\n    $protein_interactions_join = '';\n\n    if($sort_field){\n      switch($sort_field) {\n        case 'last_modified':\n          $sort = \" ORDER BY group.last_modified, analyte_peptide.peptide_sequence {$sort_order} \";\n          break;\n        default:\n          $sort = \" ORDER BY {$sort_field}, analyte_peptide.peptide_sequence {$sort_order} \";\n      }\n    }\n\n    if( $search ) {\n      $seach_stmt = array();\n      foreach($this->final_global_template_vars['datatables'][0]['search_fields'] as $key => $value) {\n        $pdo_params[] = '%'.$search.'%';\n        $seach_stmt[] = $value.\" LIKE ?\"; // '%\".$search.\"%'\n      }\n      $search_sql = \" WHERE (\" . implode(\" \\nOR \",$seach_stmt).\")\";\n    }\n\n    $side_bar_filter_where_sql = \"\";\n    $side_bar_filter_where_array = array();\n    if(!empty($side_bar_filter)){\n      foreach($side_bar_filter as $sidebar_key => $single_sidebar_filter){\n        if(!empty($single_sidebar_filter)){\n          switch($sidebar_key){\n            case \"species_filter\":\n              $placeholder = array();\n              foreach($single_sidebar_filter as $single_filter_value){\n                $placeholder[] = \"?\";\n                $pdo_params[] = $single_filter_value;\n              }\n              $side_bar_filter_where_array[\"species_filter\"] = \" AND protein_species.protein_species_id IN (\" . implode(\",\",$placeholder) . \") \";\n            break;\n            // case \"gene_ontology_filter\":\n            //   $placeholder = array();\n            //   foreach($single_sidebar_filter as $single_filter_value){\n            //     $placeholder[] = \"?\";\n            //     $pdo_params[] = $single_filter_value;\n            //   }\n            //   $side_bar_filter_where_array[\"gene_ontology_filter\"] = \" AND protein.gene_ontology_id IN (\" . implode(\",\",$placeholder) . \") \";\n            // break;\n\n            case \"kegg_pathways_filter\":\n              $placeholder = array();\n              if($single_sidebar_filter[0] != NULL) {\n                foreach($single_sidebar_filter as $single_filter_value) {\n                  foreach($single_filter_value as $single_filter_val) {\n                    $kegg_uniprot_ids = $this->get_uniprot_ids_from_kegg( (int)$single_filter_val );\n                    if($kegg_uniprot_ids) {\n                      foreach($kegg_uniprot_ids as $kegg_uniprot_id) {\n                        $placeholder[] = \"?\";\n                        $pdo_params[] = $kegg_uniprot_id[\"uniprot_accession_id\"];\n                      }\n                    }\n                  }\n                }\n                $side_bar_filter_having_array[\"kegg_pathways_filter\"] = \" AND protein.uniprot_accession_id IN (\" . implode(\",\",$placeholder) . \") \";\n              }\n            break;\n\n            case \"protein_interactions_filter\":\n              $placeholder = array();\n              foreach($single_sidebar_filter as $single_filter_value){\n                $genes = $this->get_protein_interactions( $single_filter_value );\n                foreach($genes as $gene) {\n                  $placeholder[] = \"?\";\n                  $pdo_params[] = $gene;\n                }\n              }\n              $side_bar_filter_having_array[\"protein_interactions_filter\"] = \" AND protein.gene_symbol IN (\" . implode(\",\",$placeholder) . \") \";\n              $protein_interactions_select = ' , external_data.protein_interactions_biogrid.official_symbol_interactor_a ';\n              $protein_interactions_join = ' LEFT JOIN external_data.protein_interactions_biogrid ON external_data.protein_interactions_biogrid.official_symbol_interactor_a = protein.gene_symbol ';\n            break;\n            case \"cromosome_filter\":\n              $placeholder = array();\n              foreach($single_sidebar_filter as $single_filter_value){\n                $placeholder[] = \"?\";\n                $pdo_params[] = (int)$single_filter_value;\n              }\n              $side_bar_filter_having_array[\"cromosome_filter\"] = \" AND protein.chromosome_number IN (\" . implode(\",\",$placeholder) . \") \";\n            break;\n            case \"cromosomal_location_start_filter\":\n                $single_sidebar_filter_int = (int)$single_sidebar_filter;\n                $side_bar_filter_having_array[\"cromosomal_location_start_filter\"] = \" AND ( protein.chromosome_start <= {$single_sidebar_filter_int} )\";\n            break;\n            break;\n            case \"cromosomal_location_stop_filter\":\n                $single_sidebar_filter_int = (int)$single_sidebar_filter;\n                $side_bar_filter_having_array[\"cromosomal_location_stop_filter\"] = \" AND ( protein.chromosome_stop >= {$single_sidebar_filter_int} ) \";\n            break;\n            case \"assay_type_filter\":\n              $placeholder = array();\n              foreach($single_sidebar_filter as $single_filter_value){\n                $placeholder[] = \"?\";\n                $pdo_params[] = $single_filter_value;\n              }\n              $side_bar_filter_having_array[\"assay_type_filter\"] = \" AND assay_parameters_new.assay_type IN (\" . implode(\",\",$placeholder) . \") \";\n            break;\n            // case \"reagent_type_filter\":\n            //   $placeholder = array();\n            //   foreach($single_sidebar_filter as $single_filter_value){\n            //     $placeholder[] = \"?\";\n            //     $pdo_params[] = $single_filter_value;\n            //   }\n            //   $side_bar_filter_where_array[\"reagent_type_filter\"] = \" AND assay_parameters_new.assay_type IN (\" . implode(\",\",$placeholder) . \") \";\n            // break;\n          }\n        }\n      }\n    }\n\n\n    if(!empty($side_bar_filter_where_array)){\n      $side_bar_filter_where_sql = implode(\"\", $side_bar_filter_where_array);\n    }\n    $side_bar_filter_having_sql = \"\";\n    if(!empty($side_bar_filter_having_array)){\n      $side_bar_filter_having_sql = implode(\"\", $side_bar_filter_having_array);\n    }\n\n\n    $comparison_array = array(\n      \"gt\" => \" > \"\n      ,\"gt_or_eq\" => \" >= \"\n      ,\"lt\" => \"<\"\n      ,\"lt_or_eq\" => \" <= \"\n      ,\"equals\" => \" = \"\n      ,\"contains\" => \"contains\"\n      ,\"not_contain\" => \"not_contain\"\n      ,\"start_with\" => \"start_with\"\n      ,\"end_with\" => \"end_with\"\n    );\n\n    $class_icon_plus_sign = '\"icon-collapse-alt\"';\n\n    $sql = \"SELECT SQL_CALC_FOUND_ROWS\n      protein.protein_id as manage\n      {$protein_interactions_select}\n      , kegg_uniprot_map.uniprot_accession_id as kegg_uniprot_accession_id\n      , protein.protein_id\n      , protein.cptac_id\n      , protein.gene_symbol as gene_symbol\n      , CONCAT('<i class=', {$class_icon_plus_sign}, '></i> ', protein.gene_symbol,' - UniProt Accession ID: ',protein.uniprot_accession_id) as gene\n      , protein.chromosome_number\n      , protein.chromosome_start\n      , protein.chromosome_stop\n      , protein.uniprot_accession_id as uniprot\n      , protein.uniprot_protein_name\n      , protein.protein_molecular_weight as protein_molecular_weight\n      , protein.homology\n      , assay_parameters_new.protein_species_label as protein_species_label\n      , analyte_peptide.peptide_sequence as peptide_sequence\n      , analyte_peptide.peptide_start as peptide_start\n      , analyte_peptide.peptide_end as peptide_end\n      , analyte_peptide.modification_type as modification\n      , (CASE WHEN analyte_peptide.site_of_modification_protein IS NULL THEN CONCAT('N/A') END) AS site_of_modification_protein\n      , assay_types.label as assay_type\n      , peptide_standard_purity_types.type as peptide_standard_purity\n      , peptide_standard_purity_types.peptide_standard_purity_types_id\n      , assay_parameters_new.instrument\n      , (CASE WHEN assay_parameters_new.endogenous_detected = '0' THEN CONCAT('no') ELSE CONCAT('yes') END) AS endogenous_detected\n      , assay_parameters_new.matrix\n      , analyte_peptide.hydrophobicity as hydrophobicity\n      -- , CONCAT(FORMAT( lod_loq_comparison.LOD,2 )) as lod\n      -- , CONCAT(FORMAT( lod_loq_comparison.LLOQ,2 )) as lloq\n      , group.name as laboratory_name\n      , panorama_validation_sample_data.med_total_CV\n      , analyte_peptide.analyte_peptide_id AS DT_RowId\n      FROM analyte_peptide\n      LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id\n      LEFT JOIN import_log ON import_log.import_log_id = protein.import_log_id\n      LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n      LEFT JOIN peptide_standard_purity_types ON peptide_standard_purity_types.peptide_standard_purity_types_id = assay_parameters_new.peptide_standard_purity_types_id\n      LEFT JOIN assay_types on assay_types.assay_types_id = assay_parameters_new.assay_types_id\n      {$protein_interactions_join}\n      LEFT JOIN kegg_uniprot_map on kegg_uniprot_map.uniprot_accession_id = protein.uniprot_accession_id\n      -- LEFT JOIN lod_loq_comparison on lod_loq_comparison.analyte_peptide_id = analyte_peptide.analyte_peptide_id\n      LEFT JOIN `group` ON import_log.laboratory_id = group.group_id\n      LEFT JOIN panorama_validation_sample_data on panorama_validation_sample_data.analyte_peptide_id = analyte_peptide.analyte_peptide_id\n      {$search_sql}\n      {$side_bar_filter_where_sql}\n      AND protein.approval_status = 1\n      GROUP BY analyte_peptide.analyte_peptide_id\n      HAVING 1 = 1\n      {$side_bar_filter_having_sql}\n      {$sort}\n      {$limit_sql}\";\n    $statement = $this->db->prepare( $sql );\n    $statement->execute( $pdo_params );\n\n   \n    $data[\"aaData\"] = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    $statement = $this->db->prepare(\"SELECT FOUND_ROWS()\");\n    $statement->execute();\n    $count = $statement->fetch(PDO::FETCH_ASSOC);\n    $data[\"iTotalRecords\"] = $count[\"FOUND_ROWS()\"];\n    $data[\"iTotalDisplayRecords\"] = $count[\"FOUND_ROWS()\"];\n    return $data;\n  }\n\n  /*\n   * to be a successful api call, it requires the following values to be present:\n   * HGNC gene ID\n   * primary gene symbol\n   * uniprot ac\n   * source_taxon_id\n   * protein name\n   */\n  public function get_assay_by_uniprot_api($import_log_id = false,$uniprot_id = false,$uniprot_api_url,$xml2array,$uniprot_regions_array,$peptide_sequence = false,$PeptideGroupId_Description = false,$PeptideGroupId_Label = false)\n  {\n\n    $data = false;\n\n    // If the UniProt ID is missing, send an email to the super admin and kill the import.\n    if(!$uniprot_id) {\n\n      // // Send an email to the super admin.\n      // $email_body = 'Date: '.date('F j, Y h:i:s A').\"\\n\\n\".\n      //   'UniProt ID Missing'.\"\\n\\n\".\n      //   'Sequence: '.$peptide_sequence.\"\\n\\n\".\n      //   'PeptideGroupId/Description: '.$PeptideGroupId_Description.\"\\n\\n\".\n      //   'PeptideGroupId/Label: '.$PeptideGroupId_Label.\"\\n\\n\".\n      //   'Go look at preg_match() functions in: /assays_import/controllers/import_panorama_protein_peptide.php'.\"\\n\\n\".\n      //   'Labeled with the comment: \"// Get the UniProt ID\"';\n      // mail($this->final_global_template_vars[\"superadmin_email_address\"],'CPTAC Import: UniProt ID Missing - '.date('F j, Y h:i:s A'),$email_body);\n      // // Kill the import.\n      // die();\n\n      // If the UniProt ID is missing, log it in the database.\n      $this->log_missing_uniprot_ids(\n         $import_log_id\n        ,$peptide_sequence\n        ,$PeptideGroupId_Description\n        ,$PeptideGroupId_Label\n      );\n\n    } else {\n\n      // Check to see if UniProt is responding with \"HTTP/1.1 200 OK\" or \"HTTP/1.1 301 Moved Permanently\".\n      $uniprot_response = $this->checkUrl( $uniprot_api_url . $uniprot_id . \".xml\" );\n\n      if(($uniprot_response[\"headers\"][0] != \"HTTP/1.1 200 OK\") && ($uniprot_response[\"headers\"][0] != \"HTTP/1.1 301 Moved Permanently\")) {\n        // Send an email to the super admin.\n        mail(\n            $this->final_global_template_vars[\"superadmin_email_address\"]\n          , \"CPTAC Import: UniProt not responding, \".date('F j, Y h:i:s A')\n          , \"Date: \".date('l F jS, Y h:i:s A').\"\\n\\nURL: \".$uniprot_api_url.$uniprot_id.\".xml\".\"\\n\\ncURL Error Message: \".$uniprot_response[\"curl_error\"]\n          , 'From: CPTAC Assay Portal <noreply@'.$_SERVER['SERVER_NAME'].'>' . \"\\r\\n\"\n        );\n        // Kill the import script.\n        //die(\"UniProt is not responding.\");\n      }\n\n      if(!empty($uniprot_response[\"content\"])){\n\n        $uniprot_array = $xml2array->createArray( $uniprot_response[\"content\"] );\n\n        if(!empty($uniprot_array)\n        && !empty($uniprot_array[\"uniprot\"])\n        && !empty($uniprot_array[\"uniprot\"][\"entry\"])) {\n\n          $index = isset($uniprot_array[\"uniprot\"][\"entry\"][\"feature\"]) \n            ? $uniprot_array[\"uniprot\"][\"entry\"][\"feature\"] \n            : $uniprot_array[\"uniprot\"][\"entry\"];\n\n            // Get the Splice Junctions data\n            $data[\"splice_junctions\"] = false;\n            for($i = 0; $i < count($index); $i++) {\n              if ( isset($index[$i][\"@attributes\"][\"type\"]) \n                    && in_array($index[$i][\"@attributes\"][\"type\"], $uniprot_regions_array) ) {\n                $data[\"splice_junctions\"][$i][\"start\"] = $index[$i][\"location\"][\"begin\"][\"@attributes\"][\"position\"];\n                $data[\"splice_junctions\"][$i][\"stop\"] = $index[$i][\"location\"][\"end\"][\"@attributes\"][\"position\"];\n                $data[\"splice_junctions\"][$i][\"type\"] = $index[$i][\"@attributes\"][\"type\"];\n                $data[\"splice_junctions\"][$i][\"description\"] = isset($index[$i][\"@attributes\"][\"description\"])\n                  ? $index[$i][\"@attributes\"][\"description\"] : false;\n                $data[\"splice_junctions\"][$i][\"status\"] = isset($index[$i][\"@attributes\"][\"status\"])\n                  ? $index[$i][\"@attributes\"][\"status\"] : false;\n              }\n            }\n            // Reindex the array\n            if($data[\"splice_junctions\"]) {\n              $data[\"splice_junctions\"] = array_values($data[\"splice_junctions\"]);\n            }\n\n            // Get the SNPs data\n            $data[\"snps\"] = false;\n            for($i = 0; $i < count($index); $i++) {\n              if ( isset($index[$i][\"location\"][\"position\"][\"@attributes\"][\"position\"]) ) {\n                if($index[$i][\"@attributes\"][\"type\"] == \"sequence variant\") {\n                  $data[\"snps\"][$i][\"position\"] = $index[$i][\"location\"][\"position\"][\"@attributes\"][\"position\"];\n                  $data[\"snps\"][$i][\"original\"] = isset($index[$i][\"original\"]) ? $index[$i][\"original\"] : \"\";\n                  $data[\"snps\"][$i][\"variation\"] = isset($index[$i][\"variation\"]) ? $index[$i][\"variation\"] : \"\";\n                }\n              }\n            }\n            // Reindex the array\n            if($data[\"snps\"]) {\n              $data[\"snps\"] = array_values($data[\"snps\"]);\n            }\n\n\n            // Get the isoforms data\n            $data['isoforms'] = false;\n            if( isset($uniprot_array[\"uniprot\"][\"entry\"][\"comment\"]) ) {\n              for($i = 0; $i < count($uniprot_array[\"uniprot\"][\"entry\"][\"comment\"]); $i++) {\n                if ( isset($uniprot_array[\"uniprot\"][\"entry\"][\"comment\"][$i]['isoform']) ) {\n                  $data['isoforms'] = $uniprot_array[\"uniprot\"][\"entry\"][\"comment\"][$i]['isoform'];\n                }\n              }\n            }\n            // Get and parse each fasta file and then get the sequence and length of each isoform sequence\n            if( $data['isoforms'] && !empty($data['isoforms']) ) {\n              $i = 0;\n              foreach($data['isoforms'] as $isoform) {\n                if( $isoform['id'] && !empty($isoform['id']) && !is_array($isoform['id']) ) {\n\n                  // Create a stream\n                  $opts = array(\n                    'http'=>array(\n                      'method'=>\"GET\",\n                      'header' => \"User-Agent:assays.cancer.gov/1.0\\r\\n\",\n                      'timeout' => 10\n                    )\n                  );\n                  $context = stream_context_create($opts);\n\n                  $isoform_file = @file_get_contents($uniprot_api_url . $isoform['id'] . \".fasta\", false, $context);\n\n                    ##############\n                   \n                    ###############\n\n\n\n\n\n                  $isoform_parts = explode(\"\\n\",$isoform_file);\n                  array_shift($isoform_parts);\n                  $isoform_sequence = implode('',$isoform_parts);\n                  $isoform_sequence = preg_replace(\"/[[:cntrl:]]/\", \"\", $isoform_sequence);\n                  $data['isoforms'][$i]['sequence'] = $isoform_sequence;\n                  $data['isoforms'][$i]['sequence_length'] = strlen($isoform_sequence);\n                }\n                $i++;\n              }\n              // Remove the first 'canonical' isoform\n              array_shift($data['isoforms']);\n            }\n\n            // Parse out the gene symbol\n            $gene_name_data = !empty($uniprot_array[\"uniprot\"][\"entry\"][\"gene\"][\"name\"]) \n              ? $uniprot_array[\"uniprot\"][\"entry\"][\"gene\"][\"name\"] \n              : false;\n            if(is_array($gene_name_data) && empty($gene_name_data[0])){\n              $gene_name_data = array($gene_name_data); //freakin uniprot returning differently formatted data\n            }\n\n            $data[\"gene_synonym\"] = array();\n            if($gene_name_data) {\n              foreach($gene_name_data as $single_gene_data){\n                if(!empty($single_gene_data[\"@attributes\"]) && !empty($single_gene_data[\"@attributes\"][\"type\"]) && !empty($single_gene_data[\"@value\"])){\n                  if($single_gene_data[\"@attributes\"][\"type\"] == \"primary\"){\n                    $data[\"gene_symbol\"] = $single_gene_data[\"@value\"];\n                  }elseif($single_gene_data[\"@attributes\"][\"type\"] == \"synonym\"){\n                    $data[\"gene_synonym\"][] = $single_gene_data[\"@value\"];\n                  }\n                }\n              }\n            }\n\n            if(empty($data[\"gene_symbol\"])) {\n              $data[\"gene_symbol\"] = false;\n            }\n\n            // Parse out gene id\n            foreach($uniprot_array[\"uniprot\"][\"entry\"][\"dbReference\"] as $single_property){\n              if(!empty($single_property[\"@attributes\"]) && !empty($single_property[\"@attributes\"][\"type\"]) && !empty($single_property[\"@attributes\"][\"id\"])){\n                if($single_property[\"@attributes\"][\"type\"] == \"HGNC\"){\n                  $gene_id_array = explode(\":\",$single_property[\"@attributes\"][\"id\"]);\n                  $data[\"hgnc_gene_id\"] = (!empty($gene_id_array[1])) ? $gene_id_array[1] : false;\n                }\n              }\n            }\n            if(empty($data[\"hgnc_gene_id\"])){\n              //return false;\n            }\n\n            $data[\"uniprot_ac\"] = $uniprot_id;\n            $data[\"uniprot_kb\"] = isset($uniprot_array[\"uniprot\"][\"entry\"][\"name\"])\n              ? $uniprot_array[\"uniprot\"][\"entry\"][\"name\"] : \"\";\n\n            // So many ways UniProt returns the protein's full name, will we ever get to the bottom of it?\n            if(isset($uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"recommendedName\"][\"fullName\"])) {\n              $data[\"protein_name\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"recommendedName\"][\"fullName\"];\n            }\n            if(isset($uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"submittedName\"][\"fullName\"]) &&\n              !is_array($uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"submittedName\"][\"fullName\"])) {\n              $data[\"protein_name\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"submittedName\"][\"fullName\"];\n            }\n            if(isset($uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"submittedName\"][\"fullName\"]) &&\n               is_array($uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"submittedName\"][\"fullName\"])) {\n              $data[\"protein_name\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"protein\"][\"submittedName\"][\"fullName\"][\"@value\"];\n            }\n\n            if($uniprot_array[\"uniprot\"][\"entry\"][\"organism\"][\"dbReference\"][\"@attributes\"][\"type\"] == \"NCBI Taxonomy\"){\n              $data[\"source_taxon_id\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"organism\"][\"dbReference\"][\"@attributes\"][\"id\"];\n            }\n            if(empty($data[\"source_taxon_id\"])){\n              //return false;\n            }\n\n            if(!empty($uniprot_array[\"uniprot\"][\"entry\"][\"sequence\"]) && !empty($uniprot_array[\"uniprot\"][\"entry\"][\"sequence\"][\"@value\"])){\n              $data[\"sequence\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"sequence\"][\"@value\"];\n              $data[\"sequence_raw\"] = preg_replace(array(\"/\\r\\n/\", \"/\\n/\"),\"\",$data['sequence']);\n              $data[\"sequence_length\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"sequence\"][\"@attributes\"][\"length\"];\n              $data[\"mass\"] = $uniprot_array[\"uniprot\"][\"entry\"][\"sequence\"][\"@attributes\"][\"mass\"];\n              $data[\"peptide_sequence\"] = $peptide_sequence;\n              // In case Panorama data returned no peptide_start and peptide_end,\n              // calculate the start and end of the peptide sequence in relation to the full sequence.\n              if($peptide_sequence) {\n                $peptide_start = strpos($data[\"sequence_raw\"], $peptide_sequence);\n                $data[\"peptide_start\"] = ($peptide_start + 1);\n                $data[\"peptide_end\"] = $peptide_start + strlen($peptide_sequence);\n              }\n            }\n\n        }\n      }\n\n    }\n\n    return $data;\n  }\n\n\n  public function log_missing_uniprot_ids(\n     $import_log_id\n    ,$sequence\n    ,$PeptideGroupId_Description\n    ,$PeptideGroupId_Label\n  ) {\n    $statement = $this->db->prepare(\"\n      INSERT INTO missing_uniprot_ids\n        (import_log_id, sequence, PeptideGroupId_Description, PeptideGroupId_Label, created_date )\n      VALUES ( :import_log_id, :sequence, :PeptideGroupId_Description, :PeptideGroupId_Label, NOW() )\");\n    $statement->bindValue(\":import_log_id\", $import_log_id, PDO::PARAM_INT);\n    $statement->bindValue(\":sequence\", $sequence, PDO::PARAM_STR);\n    $statement->bindValue(\":PeptideGroupId_Description\", $PeptideGroupId_Description, PDO::PARAM_STR);\n    $statement->bindValue(\":PeptideGroupId_Label\", $PeptideGroupId_Label, PDO::PARAM_STR);\n    $statement->execute();\n\n  }\n\n\n  public function checkUrl( $url ) {\n\n    /* \n     * 2014-12-04\n     * file_get_contents sucks for http requests.\n     * Do it the right way, and use cURL.\n     * $content = file_get_contents($url, false, $context);\n     */\n\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($ch, CURLOPT_VERBOSE, 1);\n    curl_setopt($ch, CURLOPT_HEADER, 1);\n    $response = curl_exec($ch);\n    $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    $http_response_header = http_parse_headers($header);\n\n    if($response === FALSE) {\n      return array(\n        'headers' => false,\n        'content' => false,\n        'curl_error' => curl_error($ch)\n      );\n    } else {\n      return array(\n        'headers' => $http_response_header,\n        'content' => $body,\n        'curl_error' => false\n      );\n    }\n    \n  }\n\n\n  public function get_entrez_gene_data( $gene_symbol, $entrez_api_url, $xml2array ) {\n\n    // References\n    // http://www.ncbi.nlm.nih.gov/gene/2064\n    // http://www.ncbi.nlm.nih.gov/books/NBK25500/#chapter1.ESearch\n\n    // Get the gene record\n    // http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=gene&term=ERBB2[gene]+AND+Homo+sapiens[Organism]\n\n    // Use the returned id to query for the full info of the target gene\n    // http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=gene&id=2064&retmode=xml\n\n    $data = false;\n    $entrez_gene_id = false;\n\n    $entrez_gene_query = @file_get_contents($entrez_api_url.'esearch.fcgi?db=gene&term='.$gene_symbol.'[gene]+AND+Homo+sapiens[Organism]');\n\n    if( !empty($entrez_gene_query) ) {\n      $entrez_gene_query_array = $xml2array->createArray($entrez_gene_query);\n      // If an array of \"Id\"s is returned, match the returned gene name with the intended local target gene name\n      if( !isset($entrez_gene_query_array[\"eSearchResult\"][\"IdList\"][\"Id\"])) return;\n      \n      if( is_array($entrez_gene_query_array[\"eSearchResult\"][\"IdList\"][\"Id\"]) ) {\n        foreach($entrez_gene_query_array[\"eSearchResult\"][\"IdList\"][\"Id\"] as $entrez_gene_id) {\n          $gene_data = @file_get_contents($entrez_api_url.'esummary.fcgi?db=gene&id='.$entrez_gene_id.'&retmode=xml');\n          if( !empty($gene_data) ) {\n            $gene_data_array = $xml2array->createArray( $gene_data );\n            if( $gene_data_array ) {\n              $returned_gene_symbol = $gene_data_array[\"eSummaryResult\"][\"DocSum\"][\"Item\"][0][\"@value\"];\n              if( $returned_gene_symbol == $gene_symbol ) {\n                $entrez_gene_id = $gene_data_array[\"eSummaryResult\"][\"DocSum\"][\"Id\"];\n              }\n            }\n          }\n        }\n      } else {\n        // If an array of IDs is not returned, then just use the \"Id\"\n        $entrez_gene_id = $entrez_gene_query_array[\"eSearchResult\"][\"IdList\"][\"Id\"];\n      }\n\n      $all_gene_data = @file_get_contents($entrez_api_url.'esummary.fcgi?db=gene&id='.$entrez_gene_id.'&retmode=xml');\n\n      if(!empty($all_gene_data)){\n        $gene_data_array = $xml2array->createArray( $all_gene_data );\n        if(!empty($gene_data_array[\"eSummaryResult\"][\"DocSum\"][\"Item\"])) {\n          foreach($gene_data_array[\"eSummaryResult\"][\"DocSum\"][\"Item\"] as $item) {\n            // Get gene aliases\n            if($item[\"@attributes\"][\"Name\"] == \"OtherAliases\") {\n              $data[\"gene_synonyms\"] = $item[\"@value\"];\n              $data[\"entrez_gene_id\"] = $entrez_gene_id;\n            }\n          }\n        }\n      }\n\n    }\n\n    return $data;\n  }\n\n\n  public function formatSequenceHTML( $sequence = false, $peptide_sequence_array = false, $assay_data = array() )\n  {\n    if(empty($sequence)){\n      return false;\n    }\n    $increment = 10;\n    $columns = 5; // dynamic?\n    $char_count = 0;\n    $sequence_chunk = array();\n    $chunk = array();\n    $sequence = chop($sequence);\n    $sequence = preg_replace(array(\"/\\r\\n/\", \"/\\n/\",\"/\\s\\s+/\"),\"\",$sequence);\n    $sequence = str_split($sequence);\n\n    // 20150715 lossm\n    // create a pop-up menu to support multiple/duplicate sequences\n    $seq_array = array();\n    foreach($peptide_sequence_array as $seq) $seq_array[] = $seq['peptide_sequence'];\n    $sequence_counts = array_count_values($seq_array);\n\n    \n\n    $pop_up_menu_output = array();\n    $close_div = '<button type=\"button\" rel=\"tooltip\" title=\"Close&nbsp;Details\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>';\n    \n    foreach($peptide_sequence_array as $start_end) {\n\n\n      // HACK! ($start_end['start']-1) and ($start_end['end']-1) HACK!\n      // Had to do this after CPTAC Working Group noticed that the start and end values were 1 off (less), so...\n      // data was modified in the database (increased every value by 1), then red sequences were off\n      \n\n      $pop_up_menu = false;\n      for( $i = ($start_end['start']-1); $i <= ($start_end['end']-1); $i++ ) {\n\n        // create a pop-up menu to support multiple/duplicate sequences\n        if($sequence_counts[$start_end['peptide_sequence']] > 1)\n        {\n            \n         \n\n            $pop_up_menu = array();\n            foreach($peptide_sequence_array as $pop_up_data)\n            {\n              if($pop_up_data['peptide_sequence'] == $start_end['peptide_sequence'])\n              {\n                $pop_up_menu[] = 'CPTAC-'.$pop_up_data['id'].': View additional <span class=\"peptide_detail_link '.$pop_up_data['peptide_sequence'].'-'.$pop_up_data['id'].'\">'.$pop_up_data['peptide_modified_sequence'].'</span> data<br/>';\n              }\n            }\n            $pop_up_menu_output[$start_end['peptide_sequence']] = '<div style=\"display:none;\" class=\"sequence_table_shadow detail-modal all-details-'.$start_end['peptide_sequence'].'\">'.$close_div.implode(\"\\n\",$pop_up_menu).'</div>';\n        }\n        else\n        {\n          $pop_up_menu_output[$start_end['peptide_sequence']] = '<div style=\"display:none;\" class=\"sequence_table_shadow detail-modal all-details-'.$start_end['peptide_sequence'].'\">'.$close_div.'CPTAC-'.$start_end['id'].': View additional <span class=\"peptide_detail_link '.$start_end['peptide_sequence'].'-'.$start_end['id'].'\">'.$start_end['peptide_modified_sequence'].'</span> data</div>';\n        }\n\n        // class=\"'.$start_end['peptide_sequence'].'-'.$start_end['id'].'\" rel=\"tooltip\" title=\"\"\n        $sequence[$i] = '<span class=\"peptide_highlight seq-'.$start_end['peptide_sequence'].'\">'.$sequence[$i].'</span>';\n      }\n    }\n\n    $pop_up_menu_output = implode(\"\\n\",$pop_up_menu_output);\n\n    ////////////////////////////\n    \n\n    $sequence = array_chunk($sequence,$increment);\n\n    foreach($sequence as &$a_single_chunk){\n      $a_single_chunk = implode('',$a_single_chunk);\n    }\n\n    $sequence = array_chunk($sequence, $columns);\n\n    $table[] = '<table class=\"sequence\">';\n    $total = 0;\n    $total_count = 0;\n\n    foreach($sequence as $key => $columns)\n    {\n      $table[] = '<tr>';\n\n      foreach($columns as $c => $count)\n      {\n        $char_count = strlen(strip_tags($count));\n        $total_count = ($total_count + $char_count);\n        $table[] = '<td class=\"sequence_char_count\">'.$total_count.'</td>';\n      }\n\n      $table[] = '</tr>';\n      $table[] = '<tr>';\n\n      foreach($columns as $k => $value)\n      {\n        $char = str_split($value);\n        $total = $total + count($char);\n        $table[] = '<td>'.$value.'</td>';\n      }\n      $table[] = '</tr>';\n    }\n\n    $table[] = '</table>';\n    $table = implode(\"\\n\",$table);\n\n    return $pop_up_menu_output.\"\\n\".$table;\n  }\n\n  public function get_details( $assay_id = false, $gene_symbol = false, $uniprot_id = false ) {\n\n    $pdo_params = array();\n    $assay_id_sql = \"\";\n    $gene_symbol_sql = \"\";\n    $uniprot_id_sql = \"\";\n\n    // Query by assay id\n    if( $assay_id ) {\n      $assay_id_sql = \" AND analyte_peptide.analyte_peptide_id = ? \";\n      $pdo_params[] = $assay_id;\n    }\n    // Query by gene symbol\n    if( $gene_symbol ) {\n      $assay_id_sql = \" AND protein.gene_symbol = ? \";\n      $pdo_params[] = $gene_symbol;\n    }\n    // Query by uniprot id\n    if( $uniprot_id ) {\n      $assay_id_sql = \" AND protein.uniprot_accession_id = ? \";\n      $pdo_params[] = $uniprot_id;\n    }\n\n    $statement = $this->db->prepare(\"SELECT\n      protein.protein_id as manage\n      , protein.gene_symbol as gene\n      , protein.uniprot_accession_id as uniprot\n      , protein.uniprot_accession_id as uniprot_ac\n      , CONCAT('http://www.uniprot.org/uniprot/',protein.uniprot_accession_id ) as uniprot_link\n      , protein.chromosome_number\n      , protein.chromosome_start\n      , protein.chromosome_stop\n      , protein.uniprot_gene_synonym\n      , protein.uniprot_hgnc_gene_id\n      , protein.uniprot_kb\n      , protein.uniprot_source_taxon_id\n      , protein.uniprot_sequence\n      , protein.uniprot_sequence_raw\n      , protein.uniprot_sequence_length\n      , protein.uniprot_protein_name\n      , protein.protein_molecular_weight as protein_molecular_weight\n      , protein.approval_status \n      , @status_display := IF(protein.approval_status = 1,'Approved',protein.approval_status) as status_display\n      , @status_display := IF(protein.approval_status = 2,'Pending',@status_display) as status_display\n      , @status_display := IF(protein.approval_status = 0,'Disapproved',@status_display) as status_display\n      , @status_display := IF(protein.approval_status = 3,'Hidden',@status_display) as status_display\n      , analyte_peptide.peptide_sequence as peptide_sequence\n      , analyte_peptide.peptide_modified_sequence as peptide_modified_sequence\n      , analyte_peptide.peptide_start as peptide_start\n      , analyte_peptide.peptide_end as peptide_end\n      , analyte_peptide.peptide_molecular_weight as peptide_molecular_weight\n      , analyte_peptide.modification_type as modification\n      , analyte_peptide.cptc_catalog_id as cptc_catalog_id\n      , assay_parameters_new.matrix\n      , assay_parameters_new.data_type\n      , assay_parameters_new.enrichment_method\n      , assay_parameters_new.fractionation_approach\n      , assay_types.label as assay_type\n      FROM analyte_peptide\n      LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id \n      LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n      LEFT JOIN assay_types on assay_types.assay_types_id = assay_parameters_new.assay_types_id\n      WHERE 1=1\n      AND protein.approval_status <> 3\n      {$assay_id_sql}\");\n      $statement->execute($pdo_params);\n \n      return $statement->fetch(PDO::FETCH_ASSOC);\n  }\n\n  public function getAllGenes( $gene_symbol ) {\n\n    $sql = \"SELECT\n        protein.protein_id as manage\n      , protein.gene_symbol as gene\n      , protein.uniprot_accession_id as uniprot\n      , analyte_peptide.analyte_peptide_id\n      , analyte_peptide.peptide_sequence\n      , analyte_peptide.peptide_modified_sequence\n      , analyte_peptide.peptide_start\n      , analyte_peptide.peptide_end\n      , analyte_peptide.peptide_molecular_weight\n      , analyte_peptide.modification_type as modification\n      , analyte_peptide.site_of_modification_peptide\n      , analyte_peptide.panorama_peptide_url\n      , analyte_peptide.panorama_protein_url\n      , analyte_peptide.peptide_standard_label_type\n      , analyte_peptide.cptc_catalog_id as cptc_catalog_id\n      , assay_parameters_new.instrument\n      , assay_parameters_new.internal_standard     \n      , peptide_standard_purity_types.type as peptide_standard_purity\n      , peptide_standard_purity_types.peptide_standard_purity_types_id\n      , assay_parameters_new.lc\n      , assay_parameters_new.column_packing\n      , assay_parameters_new.column_dimensions\n      , assay_parameters_new.flow_rate\n      , assay_parameters_new.matrix\n      , assay_parameters_new.protein_species_label as species\n      , assay_parameters_new.celllysate_path\n      , assay_types.label as assay_type\n      , group.group_id as laboratories_id\n      , group.name as laboratory_name\n      , group.abbreviation as laboratory_abbreviation\n      , group.primary_contact_name\n      , group.primary_contact_email_address\n      , group.disclaimer\n      , publications.publication_citation\n      , publications.publication_url\n      , import_log.import_log_id\n      FROM analyte_peptide\n      LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id AND protein.approval_status NOT IN (0)\n      LEFT JOIN import_log ON import_log.import_log_id = protein.import_log_id\n      LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n      LEFT JOIN peptide_standard_purity_types ON peptide_standard_purity_types.peptide_standard_purity_types_id = assay_parameters_new.peptide_standard_purity_types_id\n      LEFT JOIN `group` ON import_log.laboratory_id = group.group_id\n      LEFT JOIN assay_types on assay_types.assay_types_id = assay_parameters_new.assay_types_id\n      LEFT JOIN publications ON publications.import_log_id = import_log.import_log_id\n      WHERE protein.gene_symbol = :gene_symbol\n\n      ORDER BY group.name, analyte_peptide.peptide_sequence ASC\";\n      $statement = $this->db->prepare($sql);\n      $statement->bindValue(\":gene_symbol\", $gene_symbol, PDO::PARAM_STR);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n      return $data;\n  }\n\n  public function getAllPeptideSequences( $gene_symbol = false ) {\n\n    $all_data = array();\n\n    $statement = $this->db->prepare(\"\n      SELECT group_closure_table.descendant as laboratories_id\n      FROM group_closure_table\n      LEFT JOIN `group` ON group.group_id = group_closure_table.descendant\n      WHERE group_closure_table.ancestor = 6\n      AND group_closure_table.pathlength = 1\n    \");\n    $statement->execute();\n    $laboratories = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach($laboratories as $laboratory) {\n        $statement = $this->db->prepare(\"SELECT\n          protein.protein_id\n          ,analyte_peptide.peptide_modified_sequence as peptide_sequence\n          ,analyte_peptide.peptide_sequence as orig_peptide_sequence\n          ,analyte_peptide.peptide_start\n          ,analyte_peptide.peptide_end\n          ,group.name as submitting_laboratory\n          FROM analyte_peptide\n          LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id AND protein.approval_status NOT IN (0)\n          LEFT JOIN import_log ON import_log.import_log_id = protein.import_log_id\n          LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n          LEFT JOIN `group` ON import_log.laboratory_id = group.group_id\n          WHERE protein.gene_symbol = :gene_symbol\n          AND group.group_id = :laboratory_id\n        \");\n        $statement->bindValue(\":gene_symbol\", $gene_symbol, PDO::PARAM_STR);\n        $statement->bindValue(\":laboratory_id\", $laboratory['laboratories_id'], PDO::PARAM_STR);\n        $statement->execute();\n        $data[] = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    $results = array();\n    foreach($data as $key => $value)\n    {\n      if(!empty($value))\n      {\n        foreach($value as $k => $v)\n        {\n          $results[$v['orig_peptide_sequence']][] = $v['peptide_sequence'];\n        }\n      }\n    }\n\n    $data['total_sequences'] = count($results);\n\n    return $data;\n  }\n\n  public function getProteinSpecies() {\n    $statement = $this->db->prepare(\"\n      SELECT DISTINCT protein_species_label\n      FROM assay_parameters_new\n      LIMIT 1\n    \");\n    $statement->execute();\n    return $statement->fetchAll(PDO::FETCH_ASSOC);\n  }\n\n  public function getAssayTypes() {\n    $statement = $this->db->prepare(\"\n      SELECT DISTINCT(assay_type)\n      FROM assay_parameters\n    \");\n    $statement->execute();\n    return $statement->fetchAll(PDO::FETCH_ASSOC);\n  }\n\n  public function get_all_genes() {\n    $statement = $this->db->prepare(\"\n      SELECT DISTINCT(gene_symbol), uniprot_accession_id\n      FROM protein\n    \");\n    $statement->execute();\n    return $statement->fetchAll(PDO::FETCH_ASSOC);\n  }\n\n  public function get_uniprot_ids_from_kegg( $kegg_id = false ) {\n    $data = false;\n    $statement = $this->db->prepare(\"\n      SELECT real_kegg_id\n      FROM kegg\n      WHERE kegg_id = :kegg_id\n    \");\n    $statement->bindValue(\":kegg_id\", $kegg_id, PDO::PARAM_INT);\n    $statement->execute();\n    $kegg_data = $statement->fetch(PDO::FETCH_ASSOC);\n\n    if($kegg_data[\"real_kegg_id\"] != NULL) {\n      $statement = $this->db->prepare(\"\n        SELECT uniprot_accession_id\n        FROM kegg_uniprot_map\n        WHERE kegg_id = :real_kegg_id\n      \");\n      $statement->bindValue(\":real_kegg_id\", $kegg_data[\"real_kegg_id\"], PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n    return $data;\n  }\n\n  public function get_protein_interactions( $gene_symbol = false ) {\n    $data = array();\n    if($gene_symbol) {\n      $statement = $this->db->prepare(\"\n        SELECT DISTINCT(official_symbol_interactor_b)\n        FROM external_data.protein_interactions_biogrid\n        WHERE official_symbol_interactor_a = :gene_symbol\n      \");\n      $statement->bindValue(\":gene_symbol\", $gene_symbol, PDO::PARAM_STR);\n      $statement->execute();\n      $genes = $statement->fetchAll(PDO::FETCH_ASSOC);\n      foreach($genes as $gene) {\n        $data[] = $gene['official_symbol_interactor_b'];\n      }\n    }\n    return $data;\n  }\n\n  public function getChromosomeNumbers() {\n    return range(1, 22);\n  }\n\n  public function curl( $url ) {\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n    $data = curl_exec($ch);\n    curl_close($ch);\n    return $data;\n  }\n\n  public function scrape_between( $data, $start, $end ) {\n    $data = stristr($data, $start); // Stripping all data from before $start\n    $data = substr($data, strlen($start));  // Stripping $start\n    $stop = stripos($data, $end);   // Getting the position of the $end of the data to scrape\n    $data = substr($data, 0, $stop);    // Stripping all data from after and including the $end of the data to scrape\n    return $data;   // Returning the scraped data from the function\n  }\n\n  public function insert_google_analytics( $total_visits ) {\n    $statement = $this->db->prepare(\"\n      INSERT INTO google_analytics_data\n        (total_visits)\n      VALUES ( :total_visits )\");\n    $statement->bindValue(\":total_visits\", $total_visits, PDO::PARAM_INT);\n    $statement->execute();\n  }\n\n  public function getDistinctPeptideSequences() {\n\n    $statement = $this->db->prepare(\"\n      SELECT DISTINCT(peptide_sequence)\n      FROM analyte_peptide\n    \");\n    $statement->execute();\n    return $statement->fetchAll(PDO::FETCH_ASSOC);\n\n  }\n\n  /*\n   * For panorama imports. Break-out into an import-based class?\n   *\n   */\n\n  public function getPeptideSequences( $import_log_id = false ) {\n\n    //  -- ,analyte_peptide.peptide_sequence\n\n    $statement = $this->db->prepare(\"\n      SELECT \n         protein.cptac_id\n        ,analyte_peptide.analyte_peptide_id       \n        ,analyte_peptide.peptide_modified_sequence AS peptide_sequence\n        ,analyte_peptide.peptide_modified_sequence\n        ,group.group_id as laboratories_id\n        ,group.name as laboratory_name\n        ,group.abbreviation as laboratory_abbreviation\n        ,assay_parameters_new.celllysate_path\n        ,import_log.import_log_id\n      FROM analyte_peptide\n      LEFT JOIN protein ON protein.protein_id = analyte_peptide.protein_id\n      LEFT JOIN import_log ON import_log.import_log_id = protein.import_log_id\n      LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n      LEFT JOIN `group` ON import_log.laboratory_id = group.group_id\n      WHERE import_log.import_log_id = :import_log_id\n      GROUP BY analyte_peptide.analyte_peptide_id\n    \");\n    $statement->bindValue(\":import_log_id\", $import_log_id, PDO::PARAM_INT);\n    $statement->execute();\n    return $statement->fetchAll(PDO::FETCH_ASSOC);\n\n  }\n\n  public function getPeptideSequenceBySequence( $peptide_sequence = false ) {\n\n    $statement = $this->db->prepare(\"\n      SELECT \n        analyte_peptide.analyte_peptide_id\n        ,analyte_peptide.peptide_modified_sequence AS peptide_sequence\n        ,analyte_peptide.peptide_modified_sequence\n        ,group.group_id as laboratories_id\n        ,group.name as laboratory_name\n        ,group.abbreviation as laboratory_abbreviation\n        ,assay_parameters_new.celllysate_path\n      FROM analyte_peptide\n      LEFT JOIN protein ON protein.protein_id = analyte_peptide.protein_id\n      LEFT JOIN import_log ON import_log.import_log_id = protein.import_log_id\n      LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n      LEFT JOIN `group` ON import_log.laboratory_id = group.group_id\n      WHERE analyte_peptide.peptide_sequence = :peptide_sequence\n    \");\n    $statement->bindValue(\":peptide_modified_sequence\", $peptide_sequence, PDO::PARAM_STR);\n    $statement->execute();\n    return $statement->fetchAll(PDO::FETCH_ASSOC);\n\n  }\n\n  /*\n   * For panorama imports ends.\n   *\n   */\n\n  public function get_lod_loq_comparison_data( $peptide, $laboratory_id,$manage_id = false) {\n    $statement = $this->db->prepare(\"\n      SELECT\n        blank_low_conc_LOD\n        ,blank_low_conc_LOQ\n        ,blank_only_LOD\n        ,blank_only_LOQ\n        ,rsd_limit_LOD\n        ,rsd_limit_LOQ\n        ,peptide\n        ,transition\n        ,transition_id\n        ,lod_loq_units\n      FROM lod_loq_comparison\n      LEFT JOIN analyte_peptide ON analyte_peptide.analyte_peptide_id = lod_loq_comparison.analyte_peptide_id\n      RIGHT JOIN protein ON protein.protein_id = analyte_peptide.protein_id AND protein.approval_status NOT IN (0)\n      WHERE lod_loq_comparison.peptide = :peptide\n      AND lod_loq_comparison.laboratory_id = :laboratory_id\n      AND protein.protein_id = :manage_id\n      \n      ORDER BY transition ASC\n    \");\n    $statement->bindValue(\":peptide\", $peptide, PDO::PARAM_STR);\n    $statement->bindValue(\":laboratory_id\", $laboratory_id, PDO::PARAM_INT);\n    $statement->bindValue(\":manage_id\", $manage_id, PDO::PARAM_INT);\n    $statement->execute();\n    $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    \n    return $data;\n  }\n\n\n\n  public function get_response_curves_data( $peptide, $laboratory_id, $manage_id = false) {\n    $statement = $this->db->prepare(\"\n      SELECT\n        peptide\n        ,transition_id\n        ,ROUND(Slope, 2) as Slope\n        ,ROUND(Intercept, 2) as Intercept\n        ,ROUND(RSquare, 2) as RSquare\n      FROM response_curves_data\n      LEFT JOIN analyte_peptide ON analyte_peptide.analyte_peptide_id = response_curves_data.analyte_peptide_id\n      WHERE response_curves_data.peptide = :peptide\n      AND response_curves_data.laboratory_id = :laboratory_id\n      AND analyte_peptide.protein_id = :manage_id\n      ORDER BY transition DESC\n    \");\n    $statement->bindValue(\":peptide\", $peptide, PDO::PARAM_STR);\n    $statement->bindValue(\":laboratory_id\", $laboratory_id, PDO::PARAM_INT);\n    $statement->bindValue(\":manage_id\", $manage_id, PDO::PARAM_INT);\n    $statement->execute();\n    $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    return $data;\n  }\n\n  public function get_chromatogram_images( $analyte_peptide_id = false, $laboratory_id = false ) {\n\n    $data = false;\n\n    if( $analyte_peptide_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT sequence, file_name\n        FROM panorama_chromatogram_images\n        WHERE analyte_peptide_id = :analyte_peptide_id\n        AND laboratory_id = :laboratory_id\");\n      $statement->bindValue(\":analyte_peptide_id\", $analyte_peptide_id, PDO::PARAM_INT);\n      $statement->bindValue(\":laboratory_id\", $laboratory_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    return $data;\n  }\n\n  public function get_response_curve_images( $sequence = false, $analyte_peptide_id = false, $laboratory_id = false ) {\n\n    $data = false;\n\n    if( $sequence && $analyte_peptide_id && $laboratory_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT sequence, file_name\n        FROM panorama_response_curve_images\n        WHERE sequence = :sequence\n        AND analyte_peptide_id = :analyte_peptide_id\n        AND laboratory_id = :laboratory_id\");\n      $statement->bindValue(\":sequence\", $sequence, PDO::PARAM_STR);\n      $statement->bindValue(\":analyte_peptide_id\", $analyte_peptide_id, PDO::PARAM_INT);\n      $statement->bindValue(\":laboratory_id\", $laboratory_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    return $data;\n  }\n\n  public function get_validation_sample_image( $sequence = false, $analyte_peptide_id = false, $laboratory_id = false ) {\n\n    $data = false;\n\n    if( $sequence ) {\n      $statement = $this->db->prepare(\"\n        SELECT sequence, file_name\n        FROM panorama_validation_sample_images\n        WHERE sequence = :sequence\n        AND analyte_peptide_id = :analyte_peptide_id\n        AND laboratory_id = :laboratory_id\");\n      $statement->bindValue(\":sequence\", $sequence, PDO::PARAM_STR);\n      $statement->bindValue(\":analyte_peptide_id\", $analyte_peptide_id, PDO::PARAM_INT);\n      $statement->bindValue(\":laboratory_id\", $laboratory_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetch(PDO::FETCH_ASSOC);\n    }\n    \n    return $data;\n  }\n\n  public function get_validation_sample_images_data( $sequence = false, $analyte_peptide_id = false, $laboratory_id = false, $import_log_id = false, $manage_id = false ) {\n    $data = false;\n\n    if( $sequence ) {\n      $statement = $this->db->prepare(\"\n        SELECT \n          fragment_ion\n          ,low_intra_CV\n          ,med_intra_CV\n          ,high_intra_CV\n          ,low_inter_CV\n          ,med_inter_CV\n          ,high_inter_CV\n          ,low_total_CV\n          ,med_total_CV\n          ,high_total_CV\n          ,low_count\n          ,med_count\n          ,high_count\n          ,protein.protein_id as manage_id\n        FROM panorama_validation_sample_data\n        LEFT JOIN analyte_peptide ON analyte_peptide.analyte_peptide_id = panorama_validation_sample_data.analyte_peptide_id\n        LEFT JOIN protein ON protein.protein_id = analyte_peptide.protein_id\n        WHERE panorama_validation_sample_data.sequence = :sequence\n        AND panorama_validation_sample_data.analyte_peptide_id = :analyte_peptide_id\n        AND panorama_validation_sample_data.laboratory_id = :laboratory_id\n        AND panorama_validation_sample_data.import_log_id = :import_log_id\");\n\n      $statement->bindValue(\":sequence\", $sequence, PDO::PARAM_STR);\n      $statement->bindValue(\":analyte_peptide_id\", $analyte_peptide_id, PDO::PARAM_INT);\n      $statement->bindValue(\":laboratory_id\", $laboratory_id, PDO::PARAM_INT);\n      $statement->bindValue(\":import_log_id\", $import_log_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    }\n\n    return $data;\n  }\n\n  public function get_uniprot_splice_junctions( $uniprot_accession_id = false ) {\n\n    $data = false;\n\n    if( $uniprot_accession_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT *\n        FROM uniprot_splice_junctions\n        WHERE uniprot_accession_id = :uniprot_accession_id\");\n      $statement->bindValue(\":uniprot_accession_id\", $uniprot_accession_id, PDO::PARAM_STR);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    return $data;\n  }\n\n  public function get_uniprot_snps( $uniprot_accession_id = false ) {\n\n    $data = false;\n\n    if( $uniprot_accession_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT *\n        FROM uniprot_snps\n        WHERE uniprot_accession_id = :uniprot_accession_id\");\n      $statement->bindValue(\":uniprot_accession_id\", $uniprot_accession_id, PDO::PARAM_STR);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n    \n    return $data;\n  }\n\n  public function get_uniprot_isoforms( $uniprot_accession_id = false ) {\n\n    $data = false;\n\n    if( $uniprot_accession_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT id, sequence, note, sequence_length\n        FROM uniprot_isoforms\n        WHERE uniprot_accession_id = :uniprot_accession_id\");\n      $statement->bindValue(\":uniprot_accession_id\", $uniprot_accession_id, PDO::PARAM_STR);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    }\n    \n    return $data;\n  }\n\n  public function get_sop_files( $import_log_id = false ) {\n\n    $data = false;\n    if( $import_log_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT sop_files.sop_files_id, sop_files.file_name, sop_files.internal_file_name, sop_files.file_type, sop_files.file_size\n        FROM sop_files\n        LEFT JOIN sop_files_join on sop_files_join.sop_files_id = sop_files.sop_files_id\n        WHERE sop_files_join.import_log_id = :import_log_id\n        AND sop_files.is_deleted = 0\");\n      $statement->bindValue(\":import_log_id\", $import_log_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n      \n      // Replace the file extension so the file name extension returns as \n      // the same file name extension it will be converted to.\n      if($data) {\n        $i=0;\n        foreach($data as $single_data) {\n          //$file_name_without_extension = preg_replace('/\\\\.[^.\\\\s]{3,4}$/', '', $single_data[\"file_name\"]);\n          $data[$i][\"file_name\"] = $single_data[\"file_name\"]; //$file_name_without_extension.\".pdf\";\n          $i++;\n        }\n      }\n\n    }\n    return $data;\n  }\n\n  public function download_file( $sop_files_id = false )\n  {\n    $data = false;\n\n    if( $sop_files_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT\n        file_name,\n        internal_file_name,\n        file_type,\n        file_size\n        FROM sop_files\n        WHERE sop_files_id = :sop_files_id\n      \");\n      $statement->bindValue(\":sop_files_id\", $sop_files_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetch(PDO::FETCH_ASSOC);\n    }\n\n    return $data;\n  }\n\n  public function get_laboratories( $laboratories_id = false ) {\n\n    $data = false;\n    $and = '';\n\n    if($laboratories_id) {\n      $and = \"AND group.group_id = \".(int)$laboratories_id;\n    }\n\n    $statement = $this->db->prepare(\"\n      SELECT group_closure_table.descendant as laboratories_id\n      FROM group_closure_table\n      LEFT JOIN `group` ON group.group_id = group_closure_table.descendant\n      WHERE group_closure_table.ancestor = 6\n      AND group_closure_table.pathlength = 1\n      {$and}\n    \");\n    $statement->execute();\n    $data = $laboratories_id ? $statement->fetch(PDO::FETCH_ASSOC) : $statement->fetchAll(PDO::FETCH_ASSOC);\n    \n    return $data;\n  }\n\n  public function get_laboratory_id_by_abbreviation( $laboratory_abbreviation = false ) {\n    $data = false;\n    if( $laboratory_abbreviation ) {\n      $statement = $this->db->prepare(\"\n        SELECT group_closure_table.descendant as laboratories_id\n        FROM group_closure_table\n        LEFT JOIN `group` ON group.group_id = group_closure_table.descendant\n        WHERE group.abbreviation = :laboratory_abbreviation\");\n      $statement->bindValue(\":laboratory_abbreviation\", $laboratory_abbreviation, PDO::PARAM_STR);\n      $statement->execute();\n      $result = $statement->fetch(PDO::FETCH_ASSOC);\n      $data = $result['laboratories_id'];\n    }\n    return $data;\n  }\n\n  public function get_laboratory_by_import_log_id( $import_log_id = false ) {\n    $data = false;\n    if( $import_log_id ) {\n      $statement = $this->db->prepare(\"\n        SELECT\n            import_log.import_log_id\n          , group.group_id as laboratory_id\n          , group.name as laboratory_name\n          , group.abbreviation as laboratory_abbreviation\n          , assay_parameters_new.celllysate_path\n          , assay_parameters_new.quantification_units\n        FROM import_log\n        LEFT JOIN `group` ON group.group_id = import_log.laboratory_id\n        LEFT JOIN assay_parameters_new ON assay_parameters_new.import_log_id = import_log.import_log_id\n        WHERE import_log.import_log_id = :import_log_id\n      \");\n      $statement->bindValue(\":import_log_id\", $import_log_id, PDO::PARAM_INT);\n      $statement->execute();\n      $data = $statement->fetch(PDO::FETCH_ASSOC);\n    }\n    return $data;\n  }\n\n  public function get_directory_listing_of_directories( $base_directory = false, $add_to_blacklist = '' ) {\n    $data = false;\n    if( $base_directory ) {\n      // Loop through the directory\n      if($handle = opendir($base_directory)) {\n        $directories = array();\n        $blacklist = array('.', '..', '_test', $add_to_blacklist);\n        while (false !== ($file = readdir($handle))) {\n          if (!in_array($file, $blacklist)) {\n            $data[] = $file;\n          }\n        }\n        closedir($handle);\n      }\n    }\n    return $data;\n  }\n\n  public function get_hutch_interlab_sequences( $base_directory = false, $lod_loq_comparisons_directory_name = false) {\n\n    $data = false;\n\n    if( $base_directory ) {\n      // Loop through the directory\n      if($handle = opendir($base_directory)) {\n        $directories = array();\n        $blacklist = array('.', '..', '_test', 'Broad_Carr', 'SNU_KIST_Kim');\n        while (false !== ($file = readdir($handle))) {\n          if (!in_array($file, $blacklist)) {\n            $file_data[] = $file;\n          }\n        }\n        closedir($handle);\n      }\n    }\n    $csv_laboratories_directory = $file_data[0];\n\n    // Get the laboratory_id by the abbreviation (directory)\n    $laboratory_id = $this->get_laboratory_id_by_abbreviation( $csv_laboratories_directory );\n\n    $csv_files = $this->get_directory_listing_of_interlab_files( $base_directory.'/'.$csv_laboratories_directory.'/'.$lod_loq_comparisons_directory_name );\n\n    foreach( $csv_files as $csv_file ) {\n      $rows = new SplFileObject( $base_directory.'/'.$csv_laboratories_directory.'/'.$lod_loq_comparisons_directory_name.'/'.$csv_file );\n      $rows->setFlags(SplFileObject::READ_CSV);\n\n      $i=0;\n      foreach( $rows as $row )\n      {\n        // Skip the first line, which are the column names\n        if($i > 0) {\n\n          // Skip empty lines\n          if($row[0] != NULL) {\n\n            // Strip the modified sequence of the string --> [+57]\n            $replacements = array();\n            $patterns = array();\n            $replacements[0] = '';\n            $patterns[0] = '/[\\[\\+\\d+\\]]/';\n            $data[] = preg_replace($patterns, $replacements, $row[1]);\n\n          }\n        }\n        $i++;\n        // if($i > 4) break;\n      }\n    }\n\n    return $data;\n  }\n\n  public function get_directory_listing_of_files( $directory = false ) {\n    $data = false;\n    if( $directory ) {\n      // Loop through the directory\n      if ($handle = opendir($directory)) {\n        $entries = array();\n        while (false !== ($file = readdir($handle))) {\n          if(($file != '.') && ($file != '..')) {\n            $data[] = $file;\n          }\n        }\n        closedir($handle);\n      }\n    }\n    return $data;\n  }\n\n  public function get_directory_listing_of_interlab_files( $directory = false ) {\n    $data = false;\n    if( $directory ) {\n      // Loop through the directory\n      if ($handle = opendir($directory)) {\n        $entries = array();\n        while (false !== ($file = readdir($handle))) {\n          if(($file != '.') && ($file != '..') ) {\n            if(stristr($file, 'Interlab') !== FALSE) {\n              $data[] = $file;\n            }\n            \n          }\n        }\n        closedir($handle);\n      }\n    }\n    return $data;\n  }\n\n  public function delete_data_from_tables( $table_name = false, $field_name = false, $id = false ) {\n\n    // Make sure all variables are true before deleting crap\n    if( $table_name && $field_name && $id ) {\n\n      $statement = $this->db->prepare(\"SET foreign_key_checks = 0\");\n      $statement->execute();\n\n      $statement = $this->db->prepare(\"\n        SET foreign_key_checks = 0;\n        DELETE FROM `{$table_name}`\n        WHERE `{$field_name}` = :id;\n        SET foreign_key_checks = 1;\");\n      $statement->bindValue(\":id\", $id, PDO::PARAM_INT);\n      $statement->execute();\n\n      $statement = $this->db->prepare(\"SET foreign_key_checks = 1\");\n      $statement->execute();\n\n    } else {\n      die('!!!!!!!!!!!!!!!!!!!!! SOMETHING RETURNED FALSE !!!!!!!!!!!!!!!!!!!!!');\n    }\n\n  }\n\n  public function backup_database( $number ) {\n    $user = $this->final_global_template_vars[\"db_connection\"][\"user\"];\n    $pass = $this->final_global_template_vars[\"db_connection\"][\"password\"];\n    $host = $this->final_global_template_vars[\"db_connection\"][\"host\"];\n    $database = $this->final_global_template_vars[\"db_connection\"][\"name\"];\n    $path_and_file_name = $this->final_global_template_vars[\"database_backup_path\"].date('Ymd_his').\"_\".$database.\"_\".$number.\".sql\";\n    $mysql_dump = \"mysqldump --user={$user} --password={$pass} --host={$host} {$database} > {$path_and_file_name}\";\n    $var = shell_exec($mysql_dump);\n  }\n\n  public function set_status_to_do_not_display( $file_name ) {\n\n    $not_found = array();\n    $rows = new SplFileObject('/mnt/webrepo/fr-s-swpg-cpt-d/'.$file_name);\n    $rows->setFlags(SplFileObject::READ_CSV);\n\n    $i=0;\n    foreach( $rows as $row ) {\n      // Skip the first line, which are the column names\n      if($i > 0) {\n        // Skip empty lines\n        if($row[0] != NULL) {\n\n          if($row[0]) {\n            \n            $statement = $this->db->prepare(\"\n              SELECT analyte_peptide.protein_id\n              FROM analyte_peptide\n              LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id\n              LEFT JOIN import_log ON import_log.import_log_id = protein.import_log_id\n              LEFT JOIN assay_parameters_new on assay_parameters_new.import_log_id = protein.import_log_id\n              LEFT JOIN `group` ON import_log.laboratory_id = group.group_id\n              WHERE analyte_peptide.peptide_sequence = :peptide_sequence\n              -- AND import_log.laboratory_id = :laboratory_id\n            \");\n            $statement->bindValue(\":peptide_sequence\", $row[0], PDO::PARAM_STR);\n            $statement->bindValue(\":laboratory_id\", $row[2], PDO::PARAM_INT);\n            $statement->execute();\n            $data = $statement->fetch(PDO::FETCH_ASSOC);\n\n            if($data) {\n              // Set the approval_status to 3 in the protein table\n              $statement = $this->db->prepare(\"\n                UPDATE protein\n                SET approval_status = 3\n                WHERE protein.protein_id = \".(int)$data['protein_id']);\n              $statement->execute();\n            } else {\n              // Collect all of the records not found\n              $not_found[] = $row;\n            }\n            \n          }\n\n        }\n      }\n      $i++;\n    }\n\n    // Create a CSV of all assays not found in the database, therefore approval_status not set to 3\n    $fp = fopen('/mnt/webrepo/fr-s-swpg-cpt-d/assays_not_found_'.date('Ymd_his').'.csv', 'w');\n    fputcsv($fp, array('cptac_id','peptide_sequence','gene_symbol','laboratory_id','redo'));\n    foreach ($not_found as $fields) {\n      fputcsv($fp, $fields);\n    }\n    fclose($fp);\n\n  }\n\n  public function get_all_sequences_on_dev() {\n    $statement = $this->db->prepare(\"SELECT \n          protein_id\n        , peptide_sequence \n      FROM analyte_peptide \n      GROUP BY peptide_sequence ASC\");\n    $statement->execute();\n    $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    foreach($data as $single) {\n      $data_array[] = $single[\"peptide_sequence\"];\n    }\n    return $data_array;\n  }\n\n  public function get_all_sequences_on_prod() {\n    $statement = $this->db->prepare(\"SELECT \n          cptac.analyte_peptide.protein_id\n        , cptac.analyte_peptide.peptide_sequence \n      FROM cptac.analyte_peptide \n      GROUP BY cptac.analyte_peptide.peptide_sequence ASC\");\n    $statement->execute();\n    $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    foreach($data as $single) {\n      $data_array[] = $single[\"peptide_sequence\"];\n    }\n    return $data_array;\n  }\n\n  public function get_protein_ids_for_records_not_in_prod( $peptide_sequences = false ) {\n    $statement = $this->db->prepare(\"SELECT \n          protein_id\n      FROM analyte_peptide \n      WHERE peptide_sequence IN(\".$peptide_sequences.\")\");\n    $statement->execute();\n    $data = $statement->fetchAll(PDO::FETCH_ASSOC);\n    foreach($data as $single) {\n      $data_array[] = $single[\"protein_id\"];\n    }\n    return $data_array;\n  }\n\n  // For Jeff's CSV\n  public function get_fields_for_jeffs_csv() {\n    $sql_with_cvs = \"SELECT SQL_CALC_FOUND_ROWS\n        protein.cptac_id\n        , protein.gene_symbol\n        , analyte_peptide.peptide_sequence\n        , protein.approval_status\n        , group.abbreviation as laboratory_abbreviation\n        , panorama_validation_sample_data.low_intra_CV\n        , panorama_validation_sample_data.med_intra_CV\n        , panorama_validation_sample_data.high_intra_CV\n        , panorama_validation_sample_data.low_inter_CV\n        , panorama_validation_sample_data.med_inter_CV\n        , panorama_validation_sample_data.high_inter_CV\n        , panorama_validation_sample_data.low_total_CV\n        , panorama_validation_sample_data.med_total_CV\n        , panorama_validation_sample_data.high_total_CV\n        FROM analyte_peptide\n        LEFT JOIN assay_parameters on assay_parameters.analyte_peptide_id = analyte_peptide.analyte_peptide_id\n        LEFT JOIN `group` ON assay_parameters.laboratories_id = group.group_id\n        LEFT JOIN panorama_validation_sample_data on panorama_validation_sample_data.analyte_peptide_id = analyte_peptide.analyte_peptide_id\n        LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id\";\n\n    $sql_without_cvs = \"SELECT SQL_CALC_FOUND_ROWS\n        protein.cptac_id\n        , protein.gene_symbol\n        , analyte_peptide.peptide_sequence\n        , protein.approval_status\n        , group.abbreviation as laboratory_abbreviation\n        FROM analyte_peptide\n        LEFT JOIN assay_parameters on assay_parameters.analyte_peptide_id = analyte_peptide.analyte_peptide_id\n        LEFT JOIN `group` ON assay_parameters.laboratories_id = group.group_id\n        LEFT JOIN protein on analyte_peptide.protein_id = protein.protein_id\";\n  }\n\n\n  public function getPrevNextAssay($current_assay = false)\n  {\n    $data = array();\n\n    $sql = \"SELECT analyte_peptide.protein_id \n            FROM analyte_peptide\n            RIGHT JOIN protein on analyte_peptide.protein_id = protein.protein_id -- AND protein.approval_status = 1\n            WHERE analyte_peptide.protein_id < :current_assay \n            ORDER BY analyte_peptide.protein_id DESC\n            LIMIT 1\";\n    \n    $statement = $this->db->prepare($sql);\n    $statement->bindValue(\":current_assay\", $current_assay, PDO::PARAM_INT);\n    $statement->execute();\n    $previous = $statement->fetch(PDO::FETCH_ASSOC);\n    $data[\"previous\"] = !empty($previous['protein_id']) ? 'CPTAC-'.$previous['protein_id'] : false;\n\n    $sql = \"SELECT analyte_peptide.protein_id \n        FROM analyte_peptide\n        RIGHT JOIN protein on analyte_peptide.protein_id = protein.protein_id -- AND protein.approval_status = 1\n        WHERE analyte_peptide.protein_id > :current_assay \n        ORDER BY analyte_peptide.protein_id ASC\n        LIMIT 1\";\n\n    $statement = $this->db->prepare($sql);\n    $statement->bindValue(\":current_assay\", $current_assay, PDO::PARAM_INT);\n    $statement->execute();\n    $next = $statement->fetch(PDO::FETCH_ASSOC);\n    $data[\"next\"] = !empty($next['protein_id']) ? 'CPTAC-'.$next['protein_id'] : false;\n\n    // go to first record\n    if(!$data['next'])\n    {\n      $sql = \"SELECT analyte_peptide.protein_id \n            FROM analyte_peptide\n            RIGHT JOIN protein on analyte_peptide.protein_id = protein.protein_id -- AND protein.approval_status = 1\n            WHERE analyte_peptide.protein_id < :current_assay \n            ORDER BY analyte_peptide.protein_id ASC\n            LIMIT 1\";\n    \n      $statement = $this->db->prepare($sql);\n      $statement->bindValue(\":current_assay\", $current_assay, PDO::PARAM_INT);\n      $statement->execute();\n      $next = $statement->fetch(PDO::FETCH_ASSOC);\n      $data[\"next\"] = !empty($next['protein_id']) ? 'CPTAC-'.$next['protein_id'] : false;\n    }\n\n     // go to last record\n    if(!$data['previous'])\n    {\n      $sql = \"SELECT analyte_peptide.protein_id \n        FROM analyte_peptide\n        RIGHT JOIN protein on analyte_peptide.protein_id = protein.protein_id -- AND protein.approval_status = 1\n        WHERE analyte_peptide.protein_id > :current_assay \n        ORDER BY analyte_peptide.protein_id DESC\n        LIMIT 1\";\n\n      $statement = $this->db->prepare($sql);\n      $statement->bindValue(\":current_assay\", $current_assay, PDO::PARAM_INT);\n      $statement->execute();\n      $previous = $statement->fetch(PDO::FETCH_ASSOC);\n      $data[\"previous\"] = !empty($previous['protein_id']) ? 'CPTAC-'.$previous['protein_id'] : false;\n    }\n\n    return $data;\n  }\n\n\n}\n?>","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":1247,"column":8},"end":{"row":1248,"column":29}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":10,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/models/assays.class.php","digestWhenLastPersisted":"00606d9b70496714304f91713cce3803b2aeeda5","preferredLineEnding":null,"nextMarkerId":654,"deserializer":"TextBuffer","version":5},{"id":"5bfebd3aa920541a4d68429595e138ba","text":"<?php\n/**\n * @desc Import Assays: controller for inserting and updating data\n *\n * @author The Advanced Biomedical Computing Center (ABCC) - SWPG - halusagn\n * @version 1.0\n * @package cptac\n *\n */\nfunction execute_import( $import_log_id = false ) {\n  $app = \\Slim\\Slim::getInstance();\n  $env = $app->environment();\n  global $final_global_template_vars;\n  require_once $final_global_template_vars[\"swpg_module_list\"][\"assays\"][\"absolute_path_to_this_module\"].\"/models/assays.class.php\";\n  require_once $final_global_template_vars[\"absolute_path_to_this_module\"].\"/models/assays_import.class.php\";\n  require_once $final_global_template_vars[\"swpg_module_list\"][\"assays\"][\"absolute_path_to_this_module\"].\"/models/import_panorama_data.class.php\";\n  require_once $final_global_template_vars[\"swpg_module_list\"][\"user_account\"][\"absolute_path_to_this_module\"].\"/models/user_account.class.php\";\n  $db_conn = new \\swpg\\models\\db( $final_global_template_vars[\"db_connection\"] );\n  $db_resource = $db_conn->get_resource();\n  $assay = new Assay( $db_resource );\n  $import = new AssaysImport( $db_resource, $final_global_template_vars[\"session_key\"] );\n  $import_panorama_data = new ImportPanoramaData( $db_resource );\n  $user = new UserAccount( $db_resource, $final_global_template_vars[\"session_key\"] );\n\n  $data = array();\n  $laboratory_data = array();\n  $get = $app->request->get();\n  $post = $app->request->post();\n  $data[\"import_executed_status\"] = (isset($get[\"import_executed_status\"]) && ($get[\"import_executed_status\"] == \"true\") ) ? true : false;\n  $data[\"session\"] = $_SESSION[$final_global_template_vars[\"session_key\"]];\n\n  $user_laboratory_ids = $data[\"session\"][\"associated_groups\"];\n\n  \n  // Get the user's roles.\n  $user_role_ids = isset($data[\"session\"][\"user_role_list\"]) \n    ? $data[\"session\"][\"user_role_list\"] : array();\n\n  if(!empty($get)) {\n    // Get the laboratory metadata via the import_log_id GET variable.\n    $data[\"laboratory_data\"] = $assay->get_laboratory_by_import_log_id( $get[\"import_log_id\"] );\n\n    // If get_laboratories() returns false, throw a 404.\n    if(!$data[\"laboratory_data\"]) $app->notFound();\n\n    // If user is not a superadmin or not in a laboratory (group), throw a 404.\n    if( !in_array(4, $user_role_ids) && !in_array($data[\"laboratory_data\"][\"laboratory_id\"], $user_laboratory_ids) ) {\n      $app->notFound();\n    }\n\n    // Get all executed imports data.\n    $data[\"executed_imports\"] = $import->get_executed_imports( $data[\"laboratory_data\"][\"import_log_id\"] );\n\n    // Get all sequences for a lab, to pass it to the next method, check_for_missed_images().\n    $all_sequences = $assay->getPeptideSequences( $data[\"laboratory_data\"][\"import_log_id\"] );\n\n    // Get all of the problematic images.\n    $data[\"missed_images\"] = $import_panorama_data->check_for_missed_images( \n       $data[\"laboratory_data\"][\"laboratory_id\"]\n      ,$data[\"laboratory_data\"][\"import_log_id\"]\n      ,$all_sequences \n    );\n\n    // Get all of the problematic images data.\n    $data[\"missed_images_data\"] = $import_panorama_data->check_for_missed_images_data(\n       $data[\"laboratory_data\"][\"laboratory_id\"]\n      ,$data[\"laboratory_data\"][\"import_log_id\"]\n      ,$all_sequences\n    );\n\n    $data[\"deleted\"] = (isset($get[\"deleted\"]) && ($get[\"deleted\"] == \"true\")) ? true : false;\n    $data[\"reset\"] = (isset($get[\"reset\"]) && ($get[\"reset\"] == \"true\")) ? true : false;\n  \n\n\n    // look for import logs\n    $data['path_to_log'] = false;\n    $folder_path = $_SERVER['DOCUMENT_ROOT'].$final_global_template_vars['import_log_location'];\n    $folders =  scandir ($folder_path,2);\n    $ignore = array('.','..');\n    foreach($folders as $key => $value)\n    {\n      if(!in_array($value,$ignore))\n      {\n        \n        $log_file = $folder_path.'/'.$value.'/'.$data[\"laboratory_data\"][\"import_log_id\"].'.txt';\n        if(is_file($log_file))\n        {\n          $data['path_to_log'] = $final_global_template_vars['import_log_location'].'/'.$value.'/'.$data[\"laboratory_data\"][\"import_log_id\"].'.txt';\n          break;    \n        }      \n      }\n    }\n\n\n  }\n\n  /* \n   * Import From Panorama Into Portal Tables:\n   *\n   * protein\n   * analyte_peptide\n   * uniprot_splice_junctions\n   * uniprot_snps\n   * uniprot_isoforms\n   *\n   */\n\n\t\n\n  if(!empty($post)) {\n\n    clear_log($post[\"import_log_id\"]);\n    write_log($post[\"import_log_id\"],'Import Started. ID:'.$post['import_log_id']);\n\n    // Get the laboratory metadata via the import_log_id POST variable.\n    $data[\"laboratory_data\"] = $assay->get_laboratory_by_import_log_id( $post[\"import_log_id\"] );\n    // If get_laboratory_by_import_log_id() returns false, throw a 404.\n    if(!$data[\"laboratory_data\"]) $app->notFound();\n    // Set the run_missed_images variable.\n    $test_import = (isset($post[\"test_import\"]) && ($post[\"test_import\"] == \"true\")) \n      ? \"&test_import=1\" : false;\n    // Set the run_missed_images variable.\n    $run_missed_images = (isset($post[\"run_missed_images\"]) && ($post[\"run_missed_images\"] == \"true\")) \n      ? \"&run_missed_images=true\" : false;\n\n    if( !$run_missed_images ) {\n\t\t\t\n      // Execute the full import script.\n      $url = \"https://\".$_SERVER[\"SERVER_NAME\"].$final_global_template_vars[\"path_to_this_module\"]\n      .\"/import_panorama_protein_peptide/?import_log_id=\".$data[\"laboratory_data\"][\"import_log_id\"]\n      .\"&account_id=\".$post[\"account_id\"].$test_import.\"&uniquehash=\".uniqid();\n      \n      $import_type = ($test_import) ? \"Test\" : \"Full\";\n      write_log($post[\"import_log_id\"],\"Execute the {$import_type} import script\");\n\n      //die($url);\t\n\n\t\t\t$ch = curl_init();\n      curl_setopt($ch, CURLOPT_URL, $url);\n      curl_setopt($ch, CURLINFO_HEADER_OUT, 0);\n      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 0);\n      curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n      curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\n      curl_setopt($ch, CURLOPT_FRESH_CONNECT, true);\n      curl_setopt($ch, CURLOPT_TIMEOUT, 15);\n      curl_exec( $ch );\n      curl_close( $ch );\n\t\t\t\n    } else {\n      // Execute the import for missed images script.\n      $url = \"https://\".$_SERVER[\"SERVER_NAME\"].$final_global_template_vars[\"path_to_this_module\"]\n      .\"/import_panorama_data/?import_log_id=\".$data[\"laboratory_data\"][\"import_log_id\"]\n      .\"&imports_executed_log_id=\".$post[\"imports_executed_log_id\"]\n      .$run_missed_images.\"&account_id=\".$post[\"account_id\"].\"&uniquehash=\".uniqid();\n     \n      write_log($post[\"import_log_id\"],'Execute the import for missed images script');\n\n\t\t  $ch = curl_init();\n      curl_setopt($ch, CURLOPT_URL, $url);\n      curl_setopt($ch, CURLINFO_HEADER_OUT, 0);\n      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 0);\n      curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n      curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\n      curl_setopt($ch, CURLOPT_FRESH_CONNECT, true);\n      curl_setopt($ch, CURLOPT_TIMEOUT, 15);\n      curl_exec( $ch );\n      curl_close( $ch );\n    }\n\n    $data[\"import_executed_status\"] = true;\n  }\n\n  // Get the panorama errors email recipients data.\n  foreach($final_global_template_vars[\"panorama_errors_email_recipients_ids\"] as $account_id) {\n    $admins[] = $user->get_user_account_info( $account_id );\n  }\n  foreach ($admins as $admin) {\n    // Names array.\n    $data[\"panorama_errors_email_recipients\"][\"names\"][] = $admin[\"given_name\"].\" \".$admin[\"sn\"];\n  }\n\n  // Get the laboratory name for the page title (superadmin only).\n  $laboratory_name = in_array(4, $user_role_ids) ? \": \".$data[\"laboratory_data\"][\"laboratory_name\"] : \"\";\n\n  // Render\n  $app->render(\n    \"execute_import.php\"\n    ,array(\n      \"page_title\" => \"Execute and Manage Import\".$laboratory_name\n      ,\"hide_side_nav\" => false\n      ,\"data\" => $data\n      ,\"show_log\" => $data[\"import_executed_status\"]\n      ,\"log_cache_id\" => uniqid()\n    )\n  );\n}\n?>","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":197,"column":2},"end":{"row":197,"column":2}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays_import/controllers/execute_import.php","digestWhenLastPersisted":"c097c94d979892dac97edaa94ba66e262d498819","preferredLineEnding":null,"nextMarkerId":72,"deserializer":"TextBuffer","version":5},{"id":"38f1ffdf716f6d4ac1b9acb13889138d","text":"<?php\n/**\n * @desc Import Assays: controller for importing protein and peptide data from Panorama, UniProt, and Entrez Gene.\n *\n * @author The Advanced Biomedical Computing Center (ABCC) - SWPG - halusagn\n * @version 2.0\n * @package cptac\n *\n */\n\n// Tweak some PHP configurations\nini_set('memory_limit','2048M'); // 2 GB\nini_set('max_execution_time', 66000); // 10 hours\n\nfunction import_panorama_protein_peptide( $import_log_id = false ) {\n  $app = \\Slim\\Slim::getInstance();\n  $env = $app->environment();\n  global $final_global_template_vars;\n  require_once $_SERVER[\"PATH_TO_CORE\"] . \"slim_framework/SWPG/models/XML2Array.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/assays/models/assays.class.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/assays/models/import_panorama_data.class.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/assays/models/import_uniprot_data.class.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/assays/models/import_entrez_genomic_context.class.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/assays/models/kegg.class.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/assays/models/labkey.class.php\";\n  require_once $_SERVER[\"DOCUMENT_ROOT\"].\"/user_account/models/user_account.class.php\";\n\n  $db_conn = new \\swpg\\models\\db( $final_global_template_vars[\"db_connection\"] );\n  $db_resource = $db_conn->get_resource();\n  \n  $xml2array = new \\swpg\\models\\XML2Array();\n  $assay = new Assay( $db_resource );\n  $import = new ImportPanoramaData( $db_resource );\n  $import_uniprot_data = new ImportUniprotData( $db_resource );\n  $import_entrez = new ImportEntrezGenomicContext( $db_resource );\n  $kegg = new Kegg( $db_resource );\n  $labkey = new LabkeyApi(\n    $final_global_template_vars[\"labkey_config\"]\n    ,$final_global_template_vars[\"panorama_images_path\"]\n    ,$final_global_template_vars[\"panorama_images_storage_path\"]\n  );\n  $user_account = new UserAccount( $db_resource );\n \n\n\n  // Set test mode, which stops actual imports from executing.\n  $execute['test_mode'] = false;\n\n  // Panorama query columns\n  $panorama_query_columns = array(\n      'Sequence'\n    , 'PeptideModifiedSequence'\n    , 'RtCalculatorScore'\n    , 'StartIndex'\n    , 'EndIndex'\n    , 'CalcNeutralMass'\n    , 'PeptideGroupId/Label'\n    , 'PeptideGroupId/RunId'\n    , 'PeptideGroupId/RunId/Created'\n    , 'PeptideGroupId/RunId/File/FileName'\n    , 'PeptideGroupId/Description'\n  );\n\n  /*\n   * Check the import_log_id. Throw a 404 if it's not a valid ID.\n   */\n\n  // Get the laboratory metadata via the import_log_id GET variable.\n  $get = $assay->get_laboratory_by_import_log_id( $app->request->get(\"import_log_id\") );\n\n\n  write_log($get[\"import_log_id\"],'Import Panorama - all protein peptides');\n\n  // If get_laboratories() returns false, throw a 404\n  if(!$get) $app->notFound();\n\n  /*\n   * Backup the database.\n   */\n\n  $assay->backup_database(\"1\");\n\n  /*\n   * Log the import execution details to the database.\n   */\n\n\n  $log_data[\"import_log_id\"] = (int)$get[\"import_log_id\"];\n  $log_data[\"laboratory_id\"] = (int)$get[\"laboratory_id\"];\n  $log_data[\"executed_by_user_id\"] = (int)$app->request->get(\"account_id\");\n  $log_data[\"import_executed_status\"] = true;\n  $imports_executed_log_id = $import->insert_executed_imports( $log_data );\n\n  write_log($get[\"import_log_id\"],'Import logs updated');\n\n  /*\n   * Send an email to the site admin and end-user to notify that an import has been executed.\n   */\n\n  // Get the user's data, since we have no $_SESSION data at this point.\n  $user_data = $user_account->get_user_account_info( $log_data[\"executed_by_user_id\"], false );\n  \n  $test_import_subject = ( $app->request->get(\"test_import\") == 1 ) ? '[TEST RUN]' : '';\n  $email_subject = \"CPTAC Assay Portal: Import Started \".$test_import_subject.\", \".date('F j, Y h:i:s A').\" - \".$get['laboratory_name'];\n  $headers = $final_global_template_vars['message_parts']['headers'];\n  $headers .= 'From: CPTAC Assay Portal <noreply@'.$_SERVER[\"SERVER_NAME\"].'>' . \"\\r\\n\";\n  $test_import_notification = ( $app->request->get(\"test_import\") == 1 ) ? '<span style=\"color:red;\">[TEST RUN]</span>' : '';\n  $body_message = '\n    <h1>CPTAC Assay Portal: Import Started - '.$get['laboratory_name'].'</h1>'.\n    $final_global_template_vars['message_parts']['body_connector']\n    .'<p><strong>Date/Time:</strong> '.date('l, F jS, Y \\a\\t h:i:s A').'</p>\n    <p>'.$test_import_notification.' An import has been executed by the '.$get['laboratory_name'].' laboratory.</p>\n  ';\n  $message = $final_global_template_vars['message_parts']['body_header'].$body_message.$final_global_template_vars['message_parts']['body_footer'];\n\n  // Send the email\n  mail( $final_global_template_vars[\"superadmin_email_address\"].\", \".$user_data[\"email\"], $email_subject, $message, $headers );\n\n  write_log($get[\"import_log_id\"],'Admin notification sent');\n\n\n  // If we're not in test mode, go ahead and execute.\n  if(!$execute['test_mode']) {\n\n    /*\n     * Get the Panorama authentication cookie file.\n     */\n\n\n    $panorama_authentication_cookie = $labkey->get_panorama_authentication_cookie();\n\t\t\n\n    /*\n     * Query Panorama for all of the peptides.\n     */\n\n    write_log($get[\"import_log_id\"],'Getting all protein peptides');\n\n    $returned_peptide_data = $labkey->getAllPeptides(\n      $panorama_authentication_cookie\n      ,\"targetedms\"\n      ,\"Peptide\"\n      ,implode(',', $panorama_query_columns)\n      ,$get['laboratory_abbreviation']\n      ,$get['celllysate_path']\n      ,'ResponseCurve'\n    );\n\t\n\n    $peptide_data = false;\n    if( isset($returned_peptide_data->response) && !empty($returned_peptide_data->response) ) {\n      $peptide_data = json_decode($returned_peptide_data->response,true);\n    }\n\n\n\n\t\t // record this data for future examination\n     $sql = \"DELETE FROM import_initial_start_records WHERE import_log_id = :import_log_id\";\n     $statement = $db_resource->prepare($sql);\n     $statement->bindValue(\":import_log_id\", $get[\"import_log_id\"], PDO::PARAM_INT);\n     $statement->execute(); \n\n     $sql = \"INSERT INTO import_initial_start_records \n              (import_log_id,run_by_user_id,recieved_data,records_count) \n              VALUES \n              (:import_log_id,:run_by_user_id,:recieved_data,:records_count)\";\n     $statement = $db_resource->prepare($sql);\n     $statement->bindValue(\":import_log_id\", $get[\"import_log_id\"], PDO::PARAM_INT);\n     $statement->bindValue(\":run_by_user_id\", $app->request->get(\"account_id\"), PDO::PARAM_INT);\n     $statement->bindValue(\":recieved_data\", json_encode($peptide_data['rows']), PDO::PARAM_STR);\n     $statement->bindValue(\":records_count\", $peptide_data['rowCount'], PDO::PARAM_STR);\n     $statement->execute(); \n\n\n     write_log($get[\"import_log_id\"],'Received total peptides count: '.$peptide_data['rowCount']);\n\n\n    // If Panorama does not respond to this first query, display a message and email the super admin and end-user.\n    if( !$peptide_data ) {\n      mail(\n            $final_global_template_vars[\"superadmin_email_address\"].\", \".$user_data[\"email\"]\n          , \"CPTAC Import: Panorama, No Response - \".$get['laboratory_abbreviation']\n          , date('l F jS, Y h:i:s A').\"\\n\\nNo response from Panorama for an import executed by the '\".$get['laboratory_name'].\"' laboratory.\"\n        );\n      echo 'Panorama did not respond. Please try again. If this persists, please <a href=\"mailto:'.$final_global_template_vars[\"superadmin_email_address\"].'\">contact the site administrator</a>.';\n      \n       write_log($get[\"import_log_id\"],'Panorama did not respond. Please try again.');\n\n      die();\n    }\n\n\n\n\n    // If Panorama returns no data for this first query, display a message and email the super admin and end-user.\n    if( $peptide_data[\"rowCount\"] == 0 ) {\n      mail(\n            $final_global_template_vars[\"superadmin_email_address\"].\", \".$user_data[\"email\"]\n          , \"CPTAC Import: Panorama, No Data - \".$get['laboratory_abbreviation']\n          , date('l F jS, Y h:i:s A').\"\\n\\nNo data returned from Panorama for an import executed by the '\".$get['laboratory_name'].\"' laboratory. Please make sure Response Curve data is present out on Panorama. If this persists, please contact the site administrator at: \".$final_global_template_vars[\"superadmin_email_address\"].\".\"\n        );\n      echo 'No data returned from Panorama. Please make sure Response Curve data is present out on Panorama. If this persists, please <a href=\"mailto:'.$final_global_template_vars[\"superadmin_email_address\"].'\">contact the site administrator</a>.';\n      \n      write_log($get[\"import_log_id\"],'No data returned from Panorama. Please make sure Response Curve data is present out on Panorama.');\n\n      die();\n    }\n    \n   \n    // If Panorama does respond, process.\n    if($peptide_data[\"rowCount\"] > 0) {\n\n      $i = 0;\n      \n      write_log($get[\"import_log_id\"],'Preparing to pull data.');\n\n     // $peptide_data[\"rows\"] = $peptide_data[\"rowCount\"];\n      \n      /*\n       * If this is a test run, limit the record count to 5.\n       */\n\n   \n    \n      if( $app->request->get(\"test_import\") == 1 ) {\n        $subtract_amount = ($peptide_data[\"rowCount\"]-5);\n        $peptide_data[\"rows\"] = array_splice($peptide_data[\"rows\"], $subtract_amount);\n      }\n\n      ##############################\n\n       // $subtract_amount = ($peptide_data[\"rowCount\"]-1);\n       // $peptide_data[\"rows\"] = array_splice($peptide_data[\"rows\"], $subtract_amount);\n\n      ##############################\n\n      $data = array();\n      foreach($peptide_data[\"rows\"] as $row) {\n\n        // Parse the metadata for the id to query UniProt with.\n\n        // Get the UniProt ID.\n        $data[$i][\"uniprot_lookup_id\"] = false;\n\n        // Check to see if there is a \"tr\" value.\n        preg_match(\"/tr\\|(\\w*)/\", $row[\"PeptideGroupId/Label\"], $swiss_prot_label_matches_tr);\n        \n        // Check to see if there is a \"sp\" value.\n        preg_match(\"/sp\\|(\\w*)/\", $row[\"PeptideGroupId/Label\"], $swiss_prot_label_matches_sp);\n\n        // // Check to see if there is a ENSEMBL value.\n        // preg_match(\"/\\|ENSEMBL:(\\w*)/\", $row[\"PeptideGroupId/Description\"], $ensembl_matches);\n        \n        // Check to see if there is a TREMBL value.\n        preg_match(\"/\\|TREMBL:(\\w*)/\", $row[\"PeptideGroupId/Description\"], $trembl_matches);\n        \n        // Check to see if there is a SWISS-PROT value.\n        preg_match(\"/\\|SWISS-PROT:(\\w*)/\", $row[\"PeptideGroupId/Description\"], $swiss_prot_matches);\n\n        if(isset($swiss_prot_label_matches_tr) && !empty($swiss_prot_label_matches_tr)) {\n          $data[$i][\"uniprot_lookup_id\"] = $swiss_prot_label_matches_tr[1];\n        }\n\t\t\t\t\n        if(isset($swiss_prot_label_matches_sp) && !empty($swiss_prot_label_matches_sp)) {\n          $data[$i][\"uniprot_lookup_id\"] = $swiss_prot_label_matches_sp[1];\n        }\n        // if(isset($ensembl_matches) && !empty($ensembl_matches)) {\n        //   $data[$i][\"uniprot_lookup_id\"] = $ensembl_matches[1];\n        // }\n        \n        if(isset($trembl_matches) && !empty($trembl_matches)) {\n          $data[$i][\"uniprot_lookup_id\"] = $trembl_matches[1];\n        }\n\t\t\t\t\n        if(isset($swiss_prot_matches) && !empty($swiss_prot_matches)) {\n          $data[$i][\"uniprot_lookup_id\"] = $swiss_prot_matches[1];\n        }\n\n\n\n        if(empty($data[$i][\"uniprot_lookup_id\"]) )\n        {\n\n          // // Check to see if there is a TREMBL value.\n          // preg_match(\"/\\|TREMBL:(\\w*)/\", $row[\"PeptideGroupId/Description\"], $trembl_matches);\n        \n          //  // Check to see if there is a SWISS-PROT value.\n          // preg_match(\"/\\|SWISS-PROT:(\\w*)/\", $row[\"PeptideGroupId/Description\"], $swiss_prot_matches);\n\n\n        }\n\n        write_log($get[\"import_log_id\"],'Getting Uniprot data for: '.$row[\"Sequence\"]);\n        \n        // Get the gene symbol from UniProt.\n        $uniprot = $assay->get_assay_by_uniprot_api(\n          $get[\"import_log_id\"]\n          , $data[$i][\"uniprot_lookup_id\"]\n          , $final_global_template_vars[\"uniprot_protein_api_url\"]\n          , $xml2array\n          , $final_global_template_vars[\"uniprot_regions_array\"]\n          , $row[\"Sequence\"]\n          , $row[\"PeptideGroupId/Description\"]\n          , $row[\"PeptideGroupId/Label\"]\n        );\n\n        $uniprot_result = ($uniprot)? \"SUCCESS\" : '<span class=\"import-error\">FAIL</span>';\n        \n\n        write_log($get[\"import_log_id\"],'Uniprot data: '.$uniprot_result);\n\n        $data[$i][\"import_log_id\"] = $get[\"import_log_id\"];\n\n        if($uniprot) \n        {\n\n          $data[$i][\"gene_symbol\"] = $uniprot[\"gene_symbol\"];\n\n          // Get the modification_type from Panorama.\n          $data[$i][\"modification_type\"] = \"unmodified\";\n\n          $peptide_modification_type = $labkey->getModificationType(\n            $panorama_authentication_cookie\n            ,\"targetedms\"\n            ,\"ModificationType\"\n            ,$row[\"PeptideModifiedSequence\"]\n            ,$get['laboratory_abbreviation']\n            ,$get['celllysate_path']\n            ,'ChromatogramLibrary'\n          );\n          \n          $peptide_modification_type_result = ($peptide_modification_type) ? \"SUCCESS\" : '<span class=\"import-error\">FAIL</span>';\n          write_log($get[\"import_log_id\"],'Getting modification type: '.$peptide_modification_type_result);\n\n\n\n          if( isset($peptide_modification_type->response) && !empty($peptide_modification_type->response) ) {\n            $modification_type = json_decode($peptide_modification_type->response,true);\n            //dump ($modification_type);\n            $modification_type['rowCount'] = isset($modification_type['rowCount']) ? $modification_type['rowCount'] : false;\n            if($modification_type['rowCount'] > 0) {\n              \n\t\t\t\t\t\t\tif(isset($modification_type['rows'][0][\"modificationType\"])) {\n                $data[$i][\"modification_type\"] = $modification_type['rows'][0][\"modificationType\"];\n              }\n\t\t\t\t\t\t\t\n              if(isset($modification_type['rows'][0][\"StructuralModId/name\"])) {\n                $data[$i][\"modification_type\"] = $modification_type['rows'][0][\"StructuralModId/name\"];\n              }\n            }\n          }\n\n          /*\n           * Query Panorama for the site of modification.\n           */\n\n          // https://daily.panoramaweb.org/labkey/query/CPTAC%20Assay%20Portal/JHU_DChan_HZhang_ZZhang/Serum_QExactive_GlycopeptideEnrichedPRM/ResponseCurve/getQuery.view?query.columns=PeptideId,PeptideId/PeptideModifiedSequence,PeptideId/Sequence,StructuralModId/Name,IndexAA,MassDiff&schemaName=targetedms&query.queryName=PeptideStructuralModification&query.PeptideId~eq=181120\n\n          // StructuralModId/Name\n\n          $returned_site_of_modification = $labkey->getSiteOfModification(\n            $panorama_authentication_cookie\n            ,\"targetedms\"\n            ,\"PeptideStructuralModification\"\n            ,$row[\"Id\"]\n            ,$get['laboratory_abbreviation']\n            ,$get['celllysate_path']\n            ,'ResponseCurve'\n          );\n\n          $returned_site_of_modification_result = ($returned_site_of_modification) ? \"SUCCESS\" : '<span class=\"import-error\">FAIL</span>';\n          write_log($get[\"import_log_id\"],'Getting site of modification: '.$returned_site_of_modification_result);\n\n\n          // Set the \"site_of_modification_peptide\" to N/A first, then populate if data is returned by Panorama.\n          $data[$i][\"site_of_modification_peptide\"] = \"N/A\";\n\n          if( isset($returned_site_of_modification->response) && !empty($returned_site_of_modification->response) ) {\n            $site_of_modification_peptide = json_decode($returned_site_of_modification->response,true);\n            if($site_of_modification_peptide['rowCount'] > 0) {\n              $data[$i][\"site_of_modification_peptide\"] = $site_of_modification_peptide['rows'][0][\"IndexAA\"];\n            }\n          }\n\n          // Build out the rest of the data array.\n          $data[$i][\"import_log_id\"] = $get[\"import_log_id\"];\n          $data[$i][\"peptide_molecular_weight\"] = $row[\"CalcNeutralMass\"];\n          $data[$i][\"peptide_sequence\"] = $row[\"Sequence\"];\n          $data[$i][\"peptide_modified_sequence\"] = $row[\"PeptideModifiedSequence\"];\n          $data[$i][\"hydrophobicity\"] = $row[\"RtCalculatorScore\"];\n          $data[$i][\"panorama_peptide_url\"] = $row[\"_labkeyurl_Sequence\"];\n          $data[$i][\"panorama_protein_url\"] = $row[\"_labkeyurl_PeptideGroupId/Label\"];\n          $data[$i][\"peptide_start\"] = $row[\"StartIndex\"];\n          $data[$i][\"peptide_end\"] = $row[\"EndIndex\"];\n          $data[$i][\"panorama_created_date\"] = $row[\"PeptideGroupId/RunId/Created\"];\n\n        }\n        else\n        {\n\n          $data[$i][\"import_log_id\"] = $get[\"import_log_id\"];\n          $data[$i][\"peptide_molecular_weight\"] = $row[\"CalcNeutralMass\"];\n          $data[$i][\"peptide_sequence\"] = $row[\"Sequence\"];\n          $data[$i][\"peptide_modified_sequence\"] = $row[\"PeptideModifiedSequence\"];\n          $data[$i][\"hydrophobicity\"] = $row[\"RtCalculatorScore\"];\n          $data[$i][\"panorama_peptide_url\"] = $row[\"_labkeyurl_Sequence\"];\n          $data[$i][\"panorama_protein_url\"] = $row[\"_labkeyurl_PeptideGroupId/Label\"];\n          $data[$i][\"peptide_start\"] = $row[\"StartIndex\"];\n          $data[$i][\"peptide_end\"] = $row[\"EndIndex\"];\n          $data[$i][\"panorama_created_date\"] = $row[\"PeptideGroupId/RunId/Created\"];\n\n\n        }\n\n        $i++;\n\n      }\n\n      /*\n       * Loop through the data array and perform inserts.\n       */\n\n      // let's just insert protiens and peptides\n\n      write_log($get[\"import_log_id\"],'Creating initial local records');\n\n      $this_insert_row_count = 0;\n      foreach($data as $key)\n      {\n        \n        write_log($get[\"import_log_id\"],'Saving: '.$key['peptide_modified_sequence']);\n\n        $import->do_initial_inserts($key);\n        ++$this_insert_row_count;\n        \n        if( $app->request->get(\"test_import\") == 1 )\n        {  \n          if($this_insert_row_count >= 5) break;\n        }\n      }\n\n      write_log($get[\"import_log_id\"],'Initial DB write complete');\n      write_log($get[\"import_log_id\"],'Preparing to import asset data');\n\n      $this_record_count = 0;\n\n      foreach($data as $key)\n      {\n        \n        if( $key[\"uniprot_lookup_id\"] && isset($key[\"peptide_sequence\"]) )\n        {\n          /*\n          * Create the initial records in the protein and analyte_peptide tables.\n          */\n\n          //$import->create_initial_records( $key );\n          write_log($get[\"import_log_id\"],'Getting data for: '.$key[\"peptide_sequence\"]);\n\n           /*\n           * Get data from UniProt using the uniprot_lookup_id.\n           */\n\n          $uniprot_data = $assay->get_assay_by_uniprot_api(\n              $get[\"import_log_id\"]\n            , $key[\"uniprot_lookup_id\"]\n            , $final_global_template_vars[\"uniprot_protein_api_url\"]\n            , $xml2array\n            , $final_global_template_vars[\"uniprot_regions_array\"]\n            , $key[\"peptide_sequence\"]\n          );\n\n\n          write_log($get[\"import_log_id\"],'Getting Uniprot data for: '.$key[\"peptide_sequence\"]);\n\n\n          /*\n           * Get data from Entrez Gene: chromosome_start, chromosome_stop, and chromosome_number.\n           */\n\n            if( isset($uniprot_data['gene_symbol']) && ($uniprot_data['gene_symbol'] !== FALSE) )\n            {\n              \n              $import_entrez->import_entrez_gene_data(\n                $uniprot_data['gene_symbol']\n                ,$final_global_template_vars[\"entrez_api_url\"]\n                ,$xml2array\n                ,$user_data[\"email\"]\n              );\n            }\n\n            $this_gene_symbol = !empty($uniprot_data['gene_symbol']) ? $uniprot_data['gene_symbol'] : '<span class=\"import-error\">GENE SYMBOL MISSING</span>';\n            write_log($get[\"import_log_id\"],'Getting Entrez Gene data for: '.$this_gene_symbol);\n            usleep(500000);\n\n          /*\n           * Update the peptide_standard_label_type field in the database.\n           */\n        \n          // Query Panorama for the peptide_standard_label_type data.\n\n          $peptide_standard_label_type = $labkey->getPeptideIsotopeLabelModifications(\n            $panorama_authentication_cookie\n            ,$key[\"peptide_modified_sequence\"]\n            ,$get['laboratory_abbreviation']\n            ,$get['celllysate_path']\n            ,'ResponseCurve');\n\n\n          if( isset($peptide_standard_label_type->response) && !empty($peptide_standard_label_type->response) )\n          {\n            // Format into a PHP array.\n            $peptide_standard_label_type = json_decode($peptide_standard_label_type->response,true);\n            \n            // Update query.\n            if( isset($peptide_standard_label_type[\"rows\"][0][\"IsotopeModification\"]) && !empty($peptide_standard_label_type[\"rows\"][0][\"IsotopeModification\"]) )\n            {\n              $import->import_peptide_standard_label_type($key[\"peptide_sequence\"],$peptide_standard_label_type[\"rows\"][0][\"IsotopeModification\"]);\n            }\n\n          }\n          \n\n\n          if( isset($uniprot_data['protein_name']) )\n          {\n            /*\n             * Update the protein table in the database with data from UniProt.\n             */\n            $import_uniprot_data->import_uniprot_data( $uniprot_data );\n            \n            /*\n             * Insert splice junctions uniprot_data.\n             */\n            $import_uniprot_data->import_uniprot_splice_junctions( $uniprot_data[\"splice_junctions\"], $uniprot_data[\"uniprot_ac\"] );\n            \n            /*\n             * Insert SNPs data.\n             */\n            $import_uniprot_data->import_uniprot_snps( $uniprot_data[\"snps\"], $uniprot_data[\"uniprot_ac\"] );\n            \n            /*\n             * Insert isoforms data.\n             */\n            $import_uniprot_data->import_uniprot_isoforms( $uniprot_data[\"isoforms\"], $uniprot_data[\"uniprot_ac\"] );\n          }\n\n\n\n\n\n        } else {\n          // If UniProt lookup is unsuccessful, send an error report to the CPTAC Assay Portal Admin and the end-user.\n          $peptide_sequence = isset($key[\"peptide_sequence\"]) ? $key[\"peptide_sequence\"] : \"'unknown sequence'\";\n          mail(\n              $final_global_template_vars[\"superadmin_email_address\"].\",\".$user_data[\"email\"]\n            , \"CPTAC Import: UniProt lookup unsuccessful for '\".$peptide_sequence.\"'\"\n            , date('l F jS, Y h:i:s A').\"\\n\\nExecuted by: \".$get['laboratory_name'].\"\\n\\nError message: UniProt lookup unsuccessful for '\".$peptide_sequence.\"'\"\n          );\n        }\n\n      }\n\n    }\n\n  \n  \n\n    /*\n     * Check for missing UniProt data and attempt to import again.\n     */\n\n    write_log($get[\"import_log_id\"],'Running Uniprot fix');\n\n    $url = \"https://\".$_SERVER[\"SERVER_NAME\"].\"/assays_import/fix_uniprot_import/\".$get[\"import_log_id\"];\n    \n    $ch = curl_init($url);\n    curl_setopt($ch, CURLINFO_HEADER_OUT, 0);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 0);\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\n    curl_setopt($ch, CURLOPT_FRESH_CONNECT, true);\n    curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n    curl_exec( $ch );\n    curl_close( $ch );\n\n\n\n\n\n\n    /*\n     * Delete the Panorama cookie file from the filesystem.\n     */\n\n    if(is_file($panorama_authentication_cookie)) {\n      unlink($panorama_authentication_cookie);\n    }\n\n  } // Test mode ends.\n\n  /*\n   * Send an email to the site admin to notify that the executed import has finished.\n   */\n\n  $email_subject = \"CPTAC Assay Portal: Main Import Finished, \".date('F j, Y h:i:s A').\" - \".$get['laboratory_name'];\n  $headers = $final_global_template_vars['message_parts']['headers'];\n  $headers .= 'From: CPTAC Assay Portal <noreply@'.$_SERVER[\"SERVER_NAME\"].'>' . \"\\r\\n\";\n  $body_message = '\n    <h1>CPTAC Assay Portal: Main Import Finished - '.$get['laboratory_name'].'</h1>'.\n    $final_global_template_vars['message_parts']['body_connector']\n    .'<p><strong>Date/Time:</strong> '.date('l, F jS, Y \\a\\t h:i:s A').'</p>\n    <p>An import executed by the \"'.$get['laboratory_name'].'\" laboratory has finished. The Panorama images and data import has been executed.</p>\n  ';\n  $message = $final_global_template_vars['message_parts']['body_header'].$body_message.$final_global_template_vars['message_parts']['body_footer'];\n\n  // Send the email\n  mail( $final_global_template_vars[\"superadmin_email_address\"], $email_subject, $message, $headers );\n\n  /* \n   * Import From Panorama Into Portal Tables:\n   *\n   * panorama_chromatogram_images\n   * panorama_response_curve_images\n   * panorama_validation_sample_images\n   * panorama_validation_sample_data\n   * lod_loq_comparison\n   * response_curves_data\n   *\n   */\n\n  $test_import = ( $app->request->get(\"test_import\") == 1 ) ? \"&test_import=1\" : \"\";\n\n  $url = \"https://\".$_SERVER[\"SERVER_NAME\"].\"/assays_import/import_panorama_data/?import_log_id=\".$get[\"import_log_id\"]\n    .\"&imports_executed_log_id=\".$imports_executed_log_id\n    .\"&account_id=\".$log_data[\"executed_by_user_id\"]\n    .$test_import\n    .\"&uniquehash=\".uniqid();\n\n\t\t\n  $ch = curl_init( $url );\n  curl_setopt($ch, CURLINFO_HEADER_OUT, 0);\n  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 0);\n  curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\n  curl_setopt($ch, CURLOPT_FRESH_CONNECT, true);\n  curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n  curl_exec( $ch );\n  curl_close( $ch );\n\n  /* \n   * Output Message\n   */\n\n  // echo \"\\n\\n\".'Import ended on '.date('l jS \\of F Y h:i:s A').'. Panorama data has been successfully imported.'.\"\\n\\n\";\n}\n?>","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":462,"column":34},"end":{"row":462,"column":58}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays_import/controllers/import_panorama_protein_peptide.php","digestWhenLastPersisted":"635bd58ea82d0e7008abf359a07a85767d1a1ece","preferredLineEnding":null,"nextMarkerId":52,"deserializer":"TextBuffer","version":5},{"id":"09523def22951121d151acebffed2ea2","text":"{% extends layout_template_name %}\n{% import \"convert_filesize.twig\" as convert %}\n{% block meta_tags %}\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"description\" content=\"Assay details for {{ gene }}, CPTAC-{{ manage }}\">\n  <meta name=\"keywords\" content=\"{{ gene }}, CPTAC-{{ manage }}, cancer, assay, protein, gene, peptide, sequence, characterize, tumor, normal tissue, biospecimens, genomic, proteomic, data, analysis, discovery, biomarker, testing, verification, uniprot, panorama, entrez\">\n  <meta name=\"author\" content=\"ABCC's Scientific Web Programming Group, Frederick National Laboratory for Cancer Research (FNLCR)\">\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n{% endblock %}\n{% block styles_head %}\n  {{ parent() }}\n  <link href=\"//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css\" rel=\"stylesheet\">\n  <link href=\"//cdnjs.cloudflare.com/ajax/libs/bootstrap-lightbox/0.5/bootstrap-lightbox.css\" rel=\"stylesheet\">\n  <!--[if IE 7]>\n  <link href=\"//netdna.bootstrapcdn.com/font-awesome/3.0.2/css/font-awesome-ie7.css\" rel=\"stylesheet\">\n  <![endif]-->\n  <link href=\"/site/library/css/styles.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"/assays/library/css/styles.css\" rel=\"stylesheet\" type=\"text/css\" />\n{% endblock %}\n{% block content %}\n  {% include 'secondary_navigation.php' %}\n  <div id=\"genSlotMainNav\">\n    {% include 'top_navigation.php' %}\n  </div>\n\n  <a name=\"top\"></a>\n\n  <div id=\"outer-wrapper\" class=\"row-outer row-outer-details\">\n\n    {% if preview_header %}\n      <div class=\"alert alert-error alert-preview\">\n        <i class=\"icon-exclamation-sign\"></i> You are viewing this record in preview mode. Record Status: {{ status_display }}\n      </div>\n    {% endif %}\n\n    <div class=\"row-fluid\">\n      <div class=\"detail-page-header\"><h3><i class=\"local-icon-helix\"></i> {{ gene }}</h3></div>\n      <div class=\"detail-page-header assay-nav\">\n  \n        {% set previous = false %}\n        {% set previousLink = '#' %}\n        {% set previousDisabled = 'disabled' %}        \n        {% if prevNext.previous != '' %}\n          {% set previous = prevNext.previous %}\n          {% set previousTooltip = 'Go to Assay '~previous %}\n          {% set previousDisabled = '' %}\n          {% set previousLink = '/'~previous %}\n        {% endif %}\n\n        {% set next = false %}\n        {% set nextLink = '#' %}\n        {% set nextDisabled = 'disabled' %}        \n        {% if prevNext.next != '' %}\n          {% set next = prevNext.next %}\n          {% set nextTooltip = 'Go to Assay '~next %}\n          {% set nextDisabled = '' %}\n          {% set nextLink = '/'~next %}\n        {% endif %}\n\n          <a href=\"{{ previousLink }}\" data-original-title=\"{{ previousTooltip }}\" class=\"btn btn-small assay-nav-btn {{ previousDisabled }}\"><i class=\"icon-arrow-left\"></i> Previous Assay</a>  \n          <a href=\"{{ nextLink }}\" class=\"btn btn-small assay-nav-btn {{ nextDisabled }}\" data-original-title=\"{{ nextTooltip }}\">Next Assay <i class=\"icon-arrow-right\"></i></a></div>\n    </div>\n\n    <div class=\"row-fluid\">\n      <div class=\"span6 overview-details\">\n        <h4>Overview <span class=\"graph-instructions muted\">Data source: UniProt</span></h4>\n        <table class=\"table table-condensed\">\n          <tr>\n            <th>Official Gene Symbol</th>\n            <th>Other Aliases</th>\n          </tr>\n          <tr>\n            <td>{{ gene }}</td>\n            <!-- <td>{% if entrez_api.gene_synonyms %}{{ entrez_api.gene_synonyms }}{% else %}N/A{% endif %}</td> -->\n            <td>{% if uniprot_gene_synonym %}{{ uniprot_gene_synonym }}{% else %}N/A{% endif %}</td>\n          \n          </tr>\n        </table>\n        <table class=\"table table-condensed\">\n          <tr>\n            <th>Sequence Length (AA)</th>\n            <th>Molecular Weight (Da)</th>\n          </tr>\n          <tr>\n            <td>{{ uniprot_api.sequence_length }}</td>\n            <td>{{ protein_molecular_weight }}</td>\n          </tr>\n        </table>\n        <table class=\"table table-condensed\">\n          <tr>\n            <th>Protein Name</th>\n          </tr>\n          <tr>\n            <td>{{ uniprot_protein_name }}</td>\n          </tr>\n        </table>\n        <table class=\"table table-condensed\">\n          <tr>\n            <th colspan=\"2\">Sources</th>\n          </tr>\n          <tr>\n            <td>\n              <i class=\"icon-external-link\"></i> <a href=\"{{ uniprot_link }}\" target=\"_blank\" title=\"External link to Uniprot Database\">UniProt</a><br />\n              <i class=\"icon-external-link\"></i> <a href=\"http://www.phosphosite.org/uniprotAccAction.do?id={{ uniprot_api.uniprot_ac }}\" target=\"_blank\" title=\"PhosphoSite\">PhosphoSitePlus &reg;</a><br />\n              <i class=\"icon-external-link\"></i> <a href=\"http://www.genecards.org/cgi-bin/carddisp.pl?gene={{ gene }}\" target=\"_blank\" title=\"GeneCards\">GeneCards</a>\n            </td>\n            <td>\n              {% if entrez_api.entrez_gene_id %}\n                <i class=\"icon-external-link\"></i> <a href=\"http://www.ncbi.nlm.nih.gov/gene/{{ entrez_api.entrez_gene_id }}\" target=\"_blank\" title=\"Entrez Gene\">Entrez Gene</a><br />\n              {% endif %}\n              <i class=\"icon-external-link\"></i> <a href=\"http://www.proteinatlas.org/search/{{ gene }}\" target=\"_blank\" title=\"Human Protein Atlas\">Human Protein Atlas</a>\n            </td>\n          </tr>\n        </table>\n      </div>\n\n\n\n      <div class=\"span6 sequence\">\n        <h4>Protein Sequence <span class=\"graph-instructions\"><i class=\"icon-info-sign\"></i> hover to view complete sequence</span></h4>\n        \n        <div class=\"protein-sequence\">\n          {{ uniprot_api.formatted_sequence|raw }}\n        </div>\n        <p class=\"muted\">Data source: UniProt</p>\n      </div>\n    </div>\n\n    {# <div class=\"row-fluid\">\n      <div class=\"span6 sequence\">\n        <h4>Protein Sequence <span class=\"graph-instructions\"><i class=\"icon-info-sign\"></i> hover to view complete sequence</span></h4>\n        <div class=\"protein-sequence\">\n          {{ uniprot_api.formatted_sequence|raw }}\n        </div>\n      </div>\n\n      <div class=\"span6 sequence\">\n        <h4>Splice Junctions <span class=\"graph-instructions\"><i class=\"icon-info-sign\"></i> hover to view complete sequence</span></h4>\n        {% if ensembl_sequence %}\n          <div class=\"splice-junction-sequence\">\n            <div class=\"splice-junctions-legend\">\n              <div class=\"splice-junction-black\">Alternating Exons</div>\n              <div class=\"splice-junction-blue\">Alternating Exons</div>\n              <div class=\"splice-junction-red\">Residue Overlap Splice Site</div>\n            </div>\n            <pre>{{ ensembl_sequence|raw }}</pre>\n          </div>\n        {% else %}\n          <p>Splice Junctions Unavailable</p>\n        {% endif %}\n      </div>\n    </div> #}\n\n  <div class=\"row-fluid header-split\">\n    <div class=\"span12\">\n      <h3><i class=\"icon-picture\"></i> Protein Map <span class=\"collapse-button\"><a href=\"javascript:void(0);\"><i class=\"icon-collapse-alt\"></i> <span class=\"toggle-text\">Collapse protein map</span></a></span></h3>\n    </div>\n  </div>\n\n  <div id=\"graphs\" class=\"row-fluid\">\n    <div class=\"span12 details\">\n\n      <h3>Position of Targeted Peptide Analytes Relative to SNPs, Isoforms, and PTMs</h3>\n      <p>\n        <i class=\"icon-external-link\"></i> <a href=\"{{ uniprot_link }}\" target=\"_blank\" title=\"External link to the Uniprot database entry\">Uniprot Database Entry</a>\n        <i class=\"icon-external-link horizontal-list\"></i> <a href=\"http://www.phosphosite.org/uniprotAccAction.do?id={{ uniprot_api.uniprot_ac }}\" target=\"_blank\" title=\"External link to the PhosphoSitePlus database entry\">PhosphoSitePlus &reg;</a>\n      </p>\n\n      <div class=\"muted mrm-points\">\n        Click a point on a node <div class=\"mrm-block-symbol\"></div> to view detailed assay information below <i class=\"icon-circle-arrow-down\"></i>\n      </div>\n      <div class=\"muted all-other-points\">\n        All other points link out to <i class=\"icon-external-link\"></i> <a href=\"http://www.uniprot.org/\" target=\"_blank\">UniProt</a>\n      </div>\n\n      <div id=\"all_in_one_graph\"></div>\n\n      <hr>\n\n      {% if phosphosites_graph %}\n        <object width=\"855\" height=\"300\"><param name=\"wmode\" value=\"transparent\" />{{ phosphosites_graph|raw }}</object>\n      {% endif %}\n \n    </div>\n  </div>\n\n  <a name=\"assay_details_anchor\"></a>\n\n  <div id=\"preloader_loading_assay_details\">\n    <p id=\"preloader_text\">loading</p>\n    <img src=\"/site/library/images/indicator-big.gif\" id=\"preloader_image\" alt=\"Loader\">\n  </div>\n\n  {% for key, field in genes %}\n    <div class=\"{{ field.peptide_sequence }}-{{ field.manage }} {{ field.manage }} assay-details-wrapper\"> {# _{{ loop.index0 }} #}\n      <hr class=\"black\">\n      <h3><i class=\"icon-bar-chart\"></i> Assay Details for CPTAC-{{ field.manage }} <span id=\"collapse-button-assay-details\"><a href=\"javascript:void(0);\"><i class=\"icon-collapse-alt\"></i> <span class=\"toggle-text\">Collapse assay details</span></a></span></h3>\n      <p class=\"muted\">Data source: Panorama</p>\n\n      <div id=\"assay_details\" class=\"row-fluid\">\n        <div class=\"span12\">\n          <div class=\"span6\">\n            <dl class=\"dl-horizontal\">\n              <dt>Official Gene Symbol</dt>\n              <dd>{{ field.gene }}</dd>\n              <dt>Peptide{{ (field.peptide_modified_sequence != field.peptide_sequence)?' Modified':'' }} Sequence</dt>\n              <dd>{{ field.peptide_modified_sequence }}</dd>\n              <dt>CPTAC ID</dt>\n              <dd>CPTAC-{{ field.manage }}</dd>\n              <dt>Modification Type</dt>\n              <dd>{{ field.modification|capitalize }}</dd>\n              <dt>Site of Modification</dt>\n              <dd>{% if field.site_of_modification_peptide %}{{ field.site_of_modification_peptide }}{% else %}N/A{% endif %}</dd>\n              <dt>Peptide Start</dt>\n              <dd>{{ field.peptide_start }}</dd>\n              <dt>Peptide End</dt>\n              <dd>{{ field.peptide_end }}</dd>\n            </dl>\n          </div>\n          <div class=\"span6\">\n            <dl class=\"dl-horizontal\">\n              <dt>Peptide Molecular Mass</dt>\n              <dd>{{ field.peptide_molecular_weight|number_format(4) }}</dd>\n              <dt>Species</dt>\n              <dd>{{ field.species }}</dd>\n\n                {% set display_assay_type = false %}\n                {% if field.assay_type %}\n                {% set display_assay_type = field.assay_type|capitalize %}\n                {% endif %}\n\n\n              <dt>Assay Type</dt>\n              <dd>{% if display_assay_type %}{{ display_assay_type }}{% else %}Direct{% endif %} {{ data_type }}</dd>\n              \n              {% if field.assay_type == 'enrichment' %}\n                <dt>Enrichment Method</dt>\n                <dd>{{ enrichment_method?:'N/A' }}</dd>\n              {% endif %}\n\n              {% if field.assay_type == 'fractionation' %}\n                <dt>Fractionation Approach</dt>\n                <dd>{{ fractionation_approach?:'N/A' }}</dd>\n              {% endif %}\n\n              <dt>Matrix</dt>\n              <dd>{{ field.matrix }}</dd>\n              <dt>Submitting Laboratory</dt>\n              <dd>{{ field.laboratory_name }}</dd>\n              <dt>Submitting Lab PI</dt>\n              <dd>{{ field.primary_contact_name }}</dd>\n            </dl>\n          </div>\n          {% if field.publication_citation %}\n            <hr class=\"clear_bottom_margin\">\n            <h4>Publication</h4>\n            <p><i class=\"icon-external-link\"></i> <a href=\"{{ field.publication_url }}\" target=\"_blank\" title=\"External link to publication details\">View Details</a> <span class=\"muted\">(opens in a new window)</span></p>\n            <p>{{ field.publication_citation | raw }}</p>\n          {% endif %}\n          {% if field.disclaimer %}\n            <hr class=\"clear_bottom_margin\">\n            <p><em>{{ field.disclaimer }}</em></p>\n          {% endif %}\n        </div>\n      </div>\n\n      <h3><i class=\"icon-bar-chart\"></i> Assay Parameters <span id=\"collapse-button-assay-parameters\"><a href=\"javascript:void(0);\"><i class=\"icon-collapse-alt\"></i> <span class=\"toggle-text\">Collapse assay parameters</span></a></span></h3>\n      <p class=\"muted\">Data source: Panorama</p>\n\n      <div id=\"assay_parameters\" class=\"row-fluid\">\n         <div class=\"span6\">\n           <dl>\n             <dt>Instrument</dt>\n             <dd>{{ field.instrument }}</dd>\n             <dt>Internal Standard</dt>\n             <dd>{{ field.internal_standard }}</dd>\n             <dt>Peptide Standard Purity</dt>\n             <dd>{{ field.peptide_standard_purity }}</dd>\n             <dt>Peptide Standard Label Type</dt>\n             <dd>{{ field.peptide_standard_label_type }}</dd>\n           </dl>\n         </div>\n         <div class=\"span6\">\n           <dl>\n             <dt>LC</dt>\n             <dd>{{ field.lc }}</dd>\n             <dt>Column Packing</dt>\n             <dd>{{ field.column_packing }}</dd>\n             <dt>Column Dimensions</dt>\n             <dd>{{ field.column_dimensions }}</dd>\n             <dt>Flow Rate</dt>\n             <dd>{{ field.flow_rate }}</dd>\n           </dl>\n         </div>\n       </div>\n      \n\n\n      <h3>Chromatograms</h3> {# _{{ loop.index }} #}\n      <p class=\"muted\">Data source: Panorama</p>\n\n      <div class=\"row-fluid plasma-charts\">\n\n        <div class=\"chromatogram_image_inline_1 span4 image\">\n          {% if field.chromatogram_images[0] %}\n            <a data-toggle=\"lightbox\" href=\".chromatogram_image_{{ field.manage }}_1\"><img src=\"{{ field.chromatogram_images[0] }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".chromatogram_image_{{ field.manage }}_1\">view larger image</a>\n            </div>\n          {% else %}\n            <img src=\"{{path_to_this_module}}/library/images/600x600_clear.png\" width=\"600\" height=\"600\" alt=\"Chromatogram Image Unavailable\" />\n            <div class=\"empty-spacer\">&nbsp;</div>\n          {% endif %}\n        </div>\n        <div class=\"chromatogram_image_{{ field.manage }}_1 lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n          <div class='lightbox-content'>\n            {% if field.chromatogram_images[0] %}\n              <img src=\"{{ field.chromatogram_images[0] }}\" width=\"600\" height=\"600\" alt=\"chromatogram image 1\">\n            {% endif %}\n          </div>\n        </div>\n\n        <div class=\"chromatogram_image_inline_2 span4 image\">\n          {% if field.chromatogram_images[1] %}\n            <a data-toggle=\"lightbox\" href=\".chromatogram_image_{{ field.manage }}_2\"><img src=\"{{ field.chromatogram_images[1] }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".chromatogram_image_{{ field.manage }}_2\">view larger image</a>\n            </div>\n          {% else %}\n            <img src=\"{{path_to_this_module}}/library/images/600x600_clear.png\" width=\"600\" height=\"600\" alt=\"Chromatogram Image Unavailable\" />\n            <div class=\"empty-spacer\">&nbsp;</div>\n          {% endif %}\n        </div>\n        <div class=\"chromatogram_image_{{ field.manage }}_2 lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n          <div class='lightbox-content'>\n            {% if field.chromatogram_images[1] %}\n              <img src=\"{{ field.chromatogram_images[1] }}\" width=\"600\" height=\"600\" alt=\"chromatogram image 2\">\n            {% endif %}\n          </div>\n        </div>\n\n        <div class=\"chromatogram_image_inline_3 span4 image\">\n          {% if field.chromatogram_images[2] %}\n            <a data-toggle=\"lightbox\" href=\".chromatogram_image_{{ field.manage }}_3\"><img src=\"{{ field.chromatogram_images[2] }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".chromatogram_image_{{ field.manage }}_3\">view larger image</a>\n            </div>\n          {% else %}\n            <img src=\"{{path_to_this_module}}/library/images/600x600_clear.png\" width=\"600\" height=\"600\" alt=\"Chromatogram Image Unavailable\" />\n            <div class=\"empty-spacer\">&nbsp;</div>\n          {% endif %}\n        </div>\n        <div class=\"chromatogram_image_{{ field.manage }}_3 lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n          <div class='lightbox-content'>\n            {% if field.chromatogram_images[2] %}\n              <img src=\"{{ field.chromatogram_images[2] }}\" width=\"600\" height=\"600\" alt=\"chromatogram image 3\">\n            {% endif %}\n          </div>\n        </div>\n\n      </div>\n\n      \n      {% set crude = false %}\n      {% if field.peptide_standard_purity_types_id == 3 %}\n        {% set crude = false %}\n      {% endif %}\n\n      <h3>Response Curves <i id=\"response_curves_info_icon\" class=\"icon-info-sign\" title=\"More information\" data-placement=\"right\"></i></h3>\n      <p class=\"muted\">Data source: Panorama</p>\n\n      <div class=\"row-fluid plasma-charts\">\n        <div class=\"response_curve_image_linear_inline span4 image\">\n          {% if field.response_curve_images[0] %}\n            <a data-toggle=\"lightbox\" href=\".response_curve_image_linear_{{ field.manage }}\"><img src=\"{{ field.response_curve_images[0] }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".response_curve_image_linear_{{ field.manage }}\">view larger image</a>\n            </div>\n          {% else %}\n            <p>Response Curve Image Unavailable</p>\n          {% endif %}\n        </div>\n        <div class=\"response_curve_image_linear_{{ field.manage }} lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n          <div class='lightbox-content'>\n            {% if field.response_curve_images[0] %}\n              <img src=\"{{ field.response_curve_images[0] }}\" width=\"800\" height=\"600\" alt=\"response curve image - linear\">\n            {% endif %}\n          </div>\n        </div>\n\n        <div class=\"response_curve_image_log_inline span4 image\">\n          {% if field.response_curve_images[1] %}\n            <a data-toggle=\"lightbox\" href=\".response_curve_image_log_{{ field.manage }}\"><img src=\"{{ field.response_curve_images[1] }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".response_curve_image_log_{{ field.manage }}\">view larger image</a>\n            </div>\n          {% else %}\n            <p>Response Curve Image Unavailable</p>\n          {% endif %}\n        </div>\n        <div class=\"response_curve_image_log_{{ field.manage }} lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n           <div class='lightbox-content'>\n            {% if field.response_curve_images[1] %}\n              <img src=\"{{ field.response_curve_images[1] }}\" width=\"800\" height=\"600\" alt=\"response curve image - log\">\n            {% endif %}\n          </div>\n        </div>\n\n        <div class=\"response_curve_image_residual_inline span4 image\">\n          {% if field.response_curve_images[2] %}\n            <a data-toggle=\"lightbox\" href=\".response_curve_image_residual_{{ field.manage }}\"><img src=\"{{ field.response_curve_images[2] }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".response_curve_image_residual_{{ field.manage }}\">view larger image</a>\n            </div>\n          {% else %}\n            <p>Response Curve Image Unavailable</p>\n          {% endif %}\n        </div>\n        <div class=\"response_curve_image_residual_{{ field.manage }} lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n           <div class='lightbox-content'>\n            {% if field.response_curve_images[2] %}\n              <img src=\"{{ field.response_curve_images[2] }}\" width=\"800\" height=\"600\" alt=\"response curve image - residual\">\n            {% endif %}\n          </div>\n        </div>\n\n      </div>\n      \n      <div class=\"row-fluid\">\n\n        <div class=\"span12 {{ field.manage }}_{{ field.laboratory_abbreviation }}_{{ field.manage }} centered repeatability-data-table\">\n          <div class=\"loc_lloq_preloader_loading\">\n            <p>Retrieving Data</p>\n            <img src=\"/site/library/images/indicator-big.gif\" alt=\"Loader\">\n          </div>\n        </div>\n      </div>\n\n      <h3>Repeatability <i id=\"repeatability_info_icon\" class=\"icon-info-sign\" title=\"More information\" data-placement=\"right\"></i></h3>\n      <p class=\"muted\">Data source: Panorama</p>\n\n      <div class=\"row-fluid plasma-charts\">\n        <div class=\"span12 image\">\n          {% if field.validation_sample_image %}\n            <a data-toggle=\"lightbox\" href=\".validation_sample_image_{{ field.manage }}\"><img src=\"{{ field.validation_sample_image }}\"></a>\n            <div class=\"caption-link\">\n              <i class=\"icon-eye-open\"></i> <a data-toggle=\"lightbox\" href=\".validation_sample_image_{{ field.manage }}\">view larger image</a>\n            </div>\n          {% else %}\n            <p>Repeatability Image Unavailable</p>\n          {% endif %}\n        </div>\n        <div class=\"validation_sample_image_{{ field.manage }} lightbox hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n          <div class='lightbox-header'>\n            <button type=\"button\" class=\"close\" data-dismiss=\"lightbox\" aria-hidden=\"true\">&times;</button>\n          </div>\n          <div class='lightbox-content'>\n            {% if field.validation_sample_image %}\n              <img src=\"{{ field.validation_sample_image }}\" width=\"1200\" height=\"400\" alt=\"validation sample image\">\n            {% endif %}\n          </div>\n        </div>\n      </div>\n\n  \n\n      {% if field.validation_sample_images_data[field.manage] %}\n        <div class=\"row-fluid\">\n          <div class=\"span12\">\n            <table class=\"table table-bordered table-striped table-condensed text-centered repeatability-table\" id=\"{{ field.manage }}_validation_sample_data_{{ field.manage }}\">\n              <tbody>\n                <tr>\n                  <th>&nbsp;</th>\n                  <th colspan=\"3\">Average intra-assay CV<br><span class=\"un-bold\">(within day CV)</span></th>\n                  <th colspan=\"3\">Average inter-assay CV<br><span class=\"un-bold\">(between day CV)</span></th>\n                  <th colspan=\"3\">Total CV<br><img src=\"{{ path_to_this_module }}/library/images/equation.png\" width=\"118\" height=\"13\" alt=\"equation\"></th>\n                  <th colspan=\"3\">n=</th>\n                </tr>\n                <tr>\n                  <td><strong>Fragment ion / Transition</strong></td>\n                  <td><strong>Low</strong></td>\n                  <td><strong>Med</strong></td>\n                  <td><strong>High</strong></td>\n                  <td><strong>Low</strong></td>\n                  <td><strong>Med</strong></td>\n                  <td><strong>High</strong></td>\n                  <td><strong>Low</strong></td>\n                  <td><strong>Med</strong></td>\n                  <td><strong>High</strong></td>\n                  <td><strong>Low</strong></td>\n                  <td><strong>Med</strong></td>\n                  <td><strong>High</strong></td>\n                </tr>\n                {% for key, val in field.validation_sample_images_data[field.manage] %}\n                  <tr>\n                    <td>{{ val.fragment_ion | raw }}</td>\n                    <td>{{ val.low_intra_CV | raw }}</td>\n                    <td>{{ val.med_intra_CV | raw }}</td>\n                    <td>{{ val.high_intra_CV | raw }}</td>\n                    <td>{{ val.low_inter_CV | raw }}</td>\n                    <td>{{ val.med_inter_CV | raw }}</td>\n                    <td>{{ val.high_inter_CV | raw }}</td>\n                    <td>{{ val.low_total_CV | raw }}</td>\n                    <td>{{ val.med_total_CV | raw }}</td>\n                    <td>{{ val.high_total_CV | raw}}</td>\n                    <td>{{ val.low_count | raw }}</td>\n                    <td>{{ val.med_count | raw }}</td>\n                    <td>{{ val.high_count | raw }}</td>\n                  </tr>\n                {% endfor %}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      {% endif %}\n      \n      <h3 class=\"resources-and-comments\">Additional Resources and Comments</h3>\n\n      <div class=\"row-fluid\">\n        <div class=\"span4 links-container\">\n          <dt><i class=\"icon-info-sign\"></i> Resources</dt>\n          <dl><a href=\"#sops_{{ field.manage }}\" role=\"button\" class=\"btn btn-small\" data-toggle=\"modal\" title=\"Download SOPs\"><i class=\"icon-download-alt icon-white\"></i> Download SOPs</a></dl>\n          {% if field.panorama_peptide_url %}\n            <dl><a href=\"https://panoramaweb.org{{ field.panorama_peptide_url }}\" class=\"btn btn-small\" target=\"_blank\" title=\"View in Panorama\"><i class=\"icon-eye-open icon-white\"></i> View Peptide in Panorama</a></dl>\n          {% endif %}\n          {% if field.panorama_protein_url %}\n            <dl><a href=\"https://panoramaweb.org{{ field.panorama_protein_url }}\" class=\"btn btn-small\" target=\"_blank\" title=\"View in Panorama\"><i class=\"icon-eye-open icon-white\"></i> View Protein in Panorama</a></dl>\n          {% endif %}\n\n          {% if field.cptc_catalog_id %}\n            <dl><a href=\"http://antibodies.cancer.gov/apps/site/detail/{{ field.cptc_catalog_id }}\" class=\"btn btn-small\" target=\"_blank\" title=\"View {{ field.cptc_catalog_id }} in CPTC Antibody Portal\"><i class=\"icon-eye-open icon-white\"></i> View in CPTC Antibody Portal</a></dl>\n          {% endif %}\n\n          {% if field.assay_identifier %}\n            <dl><a href=\"http://antibodies.cancer.gov/apps/site/detail/{{ field.assay_identifier }}#{{ field.assay_identifier }}\" class=\"btn btn-small\" target=\"_blank\" title=\"View Antibody\"><i class=\"icon-eye-open icon-white\"></i> View Antibody</a></dl>\n          {% endif %}\n          {% if field.peptide_order %}\n            <dl><a href=\"javascript:void(0);\" class=\"btn btn-small\" title=\"Generate Peptide Order\"><i class=\"icon-cog icon-white\"></i> Generate Peptide Order</a></dl>\n          {% endif %}\n        </div>\n        <div class=\"span8 comments-container\">\n          <h5 id=\"comments_container_{{ field.manage }}\"><i class=\"icon-star\"></i> Comments</h5>\n          <noscript>\n            Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by Disqus.</a>\n          </noscript>\n        </div>\n\n      </div>\n\n    </div>\n\n    <!-- SOPs -->\n    <div id=\"sops_{{ field.manage }}\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"SOPDownloads\" aria-hidden=\"true\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n        <h4 id=\"SOPDownloads\"><i class=\"icon-download-alt\"></i> Download SOPs</h4>\n      </div>\n      <div class=\"modal-body sop-downloads\">\n        <ul>\n          {% for sop_key, sop_field in field.sop_files %}\n            <li><i class=\"icon-download-alt\"></i> <a href=\"{{ path_to_this_module }}/download_file?sop_files_id={{ sop_field.sop_files_id }}\">{{ sop_field.file_name }}</a></li>\n          {% endfor %}\n        </ul>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Close</button>\n      </div>\n    </div>\n\n\n  {% endfor %}\n\n  <hr class=\"black\">\n\n  </div>\n\n  <!-- IE Browser Disclaimer -->\n  <div id=\"ie_disclaimer\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ieModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-header\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n      <h3 id=\"ieModalLabel\"><i class=\"icon-exclamation-sign\"></i> Internet Explorer Disclaimer</h3>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"control-group\">\n        <p>We've detected you are running an older version of Microsoft's Internet Explorer. While the majority of this website's content renders well, there may several items which may not.</p>\n        <p>If you want the full experience of this site, we recommend using the latest version of any modern browser. You can find a complete listing at <a title=\"Browse Happy: Online. Worry-free. Upgrade your browser today!\" href=\"http://www.browsehappy.com/\" target=\"_blank\">BrowseHappy.com</a>.</p>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Close</button>\n    </div>\n  </div>\n\n  <!-- Response Curves Information -->\n  <div id=\"response_curves_information\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"rcModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-header\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n      <h3 id=\"ieModalLabel\">Response Curves Information</h3>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"control-group\">\n        <p>Multipoint serial dilution of analyte in a sample matrix. Curve parameters are presented for each transition/fragment measured and the sum of all fragments. For more details, please see the Assay Characterization Guidance Document and the assay SOPs.</p>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Close</button>\n    </div>\n  </div>\n\n  <!-- Repeatability Information -->\n  <div id=\"repeatability_information\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"rpModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-header\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n      <h3 id=\"ieModalLabel\">Repeatability Information</h3>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"control-group\">\n        <p>To approximate variability, samples are prepared at three known concentrations in sample matrix and run over five days. CV is calculated for intra-assay and inter-assay performance. The total CV is the square root of the sum of squares of intra- and inter-assay CVs (sqrt[intraCV2+interCV2]). CVs are presented for each transition/fragment measured and the sum of all fragments.</p>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Close</button>\n    </div>\n  </div>\n\n\n{% endblock %}\n{% block js_head %}\n  {{ parent() }}\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n  <!--[if lt IE 9]>\n  <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/aight/1.1.1/aight.min.js\"></script>\n  <script type=\"text/javascript\" src=\"{{ path_to_this_module }}/library/flashcanvas/bin/flashcanvas.js\"></script>\n  <![endif]-->\n{% endblock %}\n{% block js_bottom %}\n  {{ parent() }}\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.8.1/jquery.flot.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/bootstrap-lightbox/0.5/bootstrap-lightbox.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.8.1/jquery.flot.resize.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.8.1/jquery.flot.navigate.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.8.1/jquery.flot.symbol.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/history.js/1.8/bundled/html4+html5/jquery.history.min.js\"></script>\n  \n  <script type=\"text/javascript\">\n\n\n\n\n      // Script from:\n      // http://mystrd.at/articles/multiple-disqus-threads-on-one-page/\n      var disqus_shortname = '{{ disqus_shortname }}';\n      var disqus_identifier;\n      var disqus_url = 'http://{{ server_name }}{{ request_uri }}';\n      var disqus_developer = '1';\n      var disqus_title;\n\n      function loadDisqus(source, identifier, url) {\n\n        if (window.DISQUS) {\n\n          jQuery('#disqus_thread').insertAfter(source); // Append the HTML after the target 'source'\n\n          // If Disqus exists, call it's reset method with new parameters\n          DISQUS.reset({\n            reload: true,\n            config: function () {\n              this.page.identifier = identifier;\n              this.page.url = url;\n              this.page.title = 'Gene: {{ gene }}, Peptide Sequence: '+identifier+' - {{ site_name }}';\n            }\n          });\n\n        } else {\n\n          // Append the HTML after the target 'source'\n          jQuery('<div id=\"disqus_thread\"></div>').insertAfter(source);\n          disqus_identifier = identifier; //set the identifier argument\n          disqus_url = url; //set the url argument\n          disqus_title = 'Gene: {{ gene }}, Peptide Sequence: '+identifier+' - {{ site_name }}';\n\n          // Append the Disqus embed script to HTML\n          var dsq = document.createElement('script');\n          dsq.type = 'text/javascript';\n          dsq.async = true;\n          dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n          // jQuery('head').append(dsq);\n\n        }\n      };\n  </script>\n\n  <script type=\"text/javascript\">\n  $(document).ready(function() {\n\n\n\n    // [BEGIN] Miscellaneous ///////////////\n\n\n    // IE Disclaimer\n    var show_disclaimer = '{{ show_disclaimer }}';\n    if(show_disclaimer) {\n      $('#ie_disclaimer').modal();\n    }\n    // Remove the side nav link\n    $('#show_side_nav').remove();\n    // Tooltips\n    $('.assay-nav-btn').tooltip();   \n\n\n    $('.icon-question-sign').tooltip();\n    // Prevent page from scrolling in the background\n    $(\"body\").on(\"click\", \".view_protein_sequence, .submit_comment\", function(event) {\n      $('body').attr('style','overflow: hidden');\n    });\n    // Hide/show the Graphs and Visualizations block\n    $(\".collapse-button a\").on(\"click\", function() {\n      var icon_class = ($(\"#graphs\").is(\":visible\")) ? \"icon-expand-alt\" : \"icon-collapse-alt\";\n      var icon_text = ($(\"#graphs\").is(\":visible\")) ? \"Expand protein map\" : \"Collapse protein map\";\n      $('#graphs').slideToggle();\n      $('.row-fluid .span12 .collapse-button a i').attr( 'class', icon_class );\n      $('.row-fluid .span12 .collapse-button a span.toggle-text').html( icon_text );\n    });\n    // Hide/show the Assay Details\n    $(\"#collapse-button-assay-details a\").on(\"click\", function() {\n      var icon_class = ($(\".assay-details-wrapper #assay_details\").is(\":visible\")) ? \"icon-expand-alt\" : \"icon-collapse-alt\";\n      var icon_text = ($(\".assay-details-wrapper #assay_details\").is(\":visible\")) ? \"Expand assay details\" : \"Collapse assay details\";\n      $('.assay-details-wrapper #assay_details').slideToggle();\n      $('#collapse-button-assay-details a i').attr( 'class', icon_class );\n      $('#collapse-button-assay-details span.toggle-text').html( icon_text );\n    });\n    // Hide/show the Assay Parameters\n    $(\"#collapse-button-assay-parameters a\").on(\"click\", function() {\n      var icon_class = ($(\".assay-details-wrapper #assay_parameters\").is(\":visible\")) ? \"icon-expand-alt\" : \"icon-collapse-alt\";\n      var icon_text = ($(\".assay-details-wrapper #assay_parameters\").is(\":visible\")) ? \"Expand assay parameters\" : \"Collapse assay parameters\";\n      $('.assay-details-wrapper #assay_parameters').slideToggle();\n      $('#collapse-button-assay-parameters a i').attr( 'class', icon_class );\n      $('#collapse-button-assay-parameters span.toggle-text').html( icon_text );\n    });\n    // Response Curves Info Modal\n    $('#response_curves_info_icon').tooltip().on('click', function(){\n      $('#response_curves_information').modal('show');\n    });\n    // Repeatability Info Modal\n    $('#repeatability_info_icon').tooltip().on('click', function(){\n      $('#repeatability_information').modal('show');\n    });\n\n    // [END] Miscellaneous ///////////////\n\n    var all_in_one_data = [];\n    var last_isoforms_x_plot = 4;\n    var full_sequence = '{{ uniprot_api.sequence_raw }}';\n    var sequence_max = '{{ uniprot_api.sequence_length }}';\n    var uniprot_id = '{{ uniprot_api.uniprot_ac }}';\n\n\n\n\n\n\n    // Get peptide sequences ///////////////\n  \n    var genes_data = JSON.parse('{{ gene_peptide_sequence|json_encode|raw }}');\n    // Get plots table data ///////////////\n\n    $.each(genes_data, function(index, single_gene_data) {\n      var peptide_sequence_array = [];\n      peptide_sequence_array.push( {\n        peptide_sequence: single_gene_data.peptide_sequence\n        ,peptide_modified_sequence: single_gene_data.peptide_modified_sequence\n        ,laboratory_abbreviation: single_gene_data.laboratory_abbreviation\n        ,celllysate_path: single_gene_data.celllysate_path\n        ,laboratory_id: single_gene_data.laboratories_id\n        ,import_log_id: single_gene_data.import_log_id\n        ,peptide_standard_purity_types_id: single_gene_data.peptide_standard_purity_types_id\n        ,library: 'ResponseCurve'\n        ,manage_id: single_gene_data.manage_id\n      } );\n\n      get_plots_table_data(peptide_sequence_array);\n    });\n\n\n    // [BEGIN] SNPs Graph ///////////////\n    var snps_data = JSON.parse('{{ uniprot_api.snps|json_encode|raw }}');\n    var snps_data_length = snps_data ? snps_data.length : 0;\n\n    if(snps_data) {\n      var points = { show: true, radius: 3 };\n      var lines = { show: true, lineWidth: 4 };\n      var color = '#EC0000';\n\n      $.each(snps_data, function(index, snp_data) {\n\n        var snp_position = parseInt(snp_data.position);\n        var snp_note = snp_data.original+' &rarr; '+snp_data.variation;\n\n        // For all-in-one chart build\n        all_in_one_data.push( {\n          points: points\n          ,lines: lines\n          ,shadowSize: 0\n          ,color: color\n          ,data: [ [snp_position, 5, snp_position+': '+snp_note, 'snp'],\n                    [snp_position, 5, snp_position+': '+snp_note, 'snp'] ]\n        } );\n\n      });\n\n    }\n    // [END] SNPs Graph ///////////////\n\n    \n\n    // [BEGIN] Isoforms Graph ///////////////\n    var isoforms_data = JSON.parse('{{ uniprot_api.isoforms|json_encode|raw }}');\n    var isoforms_data_length = isoforms_data ? isoforms_data.length : 0;\n\n    if(isoforms_data_length > 0) {\n\n      var points = { show: true, radius: 2 };\n      var lines = { show: true, lineWidth: 2 };\n      var color = '#EDC240';\n\n      $.each(isoforms_data, function(index, isoform_data) {\n\n        last_isoforms_x_plot = (index+7);\n\n        // sequence_max is the length of the sequence\n        var data_sequence_max = sequence_max;\n        var note = (isoform_data.note !== undefined) ? ' - '+isoform_data.note : '';\n\n        // Determine the position of the first character in the sequence\n        var data_sequence_start = full_sequence.search(isoform_data.sequence);\n        // If the search() retuns -1, set the sequence start at 0\n        if(data_sequence_start == -1) {\n          data_sequence_start = 0;\n          data_sequence_max = isoform_data.sequence_length;\n        }\n\n        // For all-in-one chart build\n        all_in_one_data.push( {\n          points: points\n          ,lines: lines\n          ,shadowSize: 0\n          ,color: color\n          ,data: [ [data_sequence_start, (index+7), data_sequence_start+note, isoform_data.id, 'isoform'], [data_sequence_max, (index+7), data_sequence_max, isoform_data.id, 'isoform'] ]\n        } );\n      });\n    }\n    // [END] Isoforms Graph ///////////////\n\n    // [BEGIN] Splice Junctions Graph ///////////////\n    var splice_junctions_graph = $(\"#splice_junctions_graph\");\n    var splice_junctions_data = JSON.parse('{{ uniprot_api.splice_junctions|json_encode|raw }}');\n    var splice_junctions_data_length = splice_junctions_data ? splice_junctions_data.length : 0;\n    var last_x_plot = 0;\n\n    if(splice_junctions_data) {\n\n      var all_splice_junction_data = [];\n      var points = { show: true, radius: 2 };\n      var lines = { show: true, lineWidth: 2 };\n      var color = 'green';\n\n      $.each(splice_junctions_data, function(index, splice_junction_data) {\n\n        last_x_plot = (last_isoforms_x_plot+index+1);\n\n        // sequence_max is the length of the sequence\n        var data_sequence_max = sequence_max;\n        var splice_junction_note = (splice_junction_data.type !== undefined) ? ' - '+splice_junction_data.description+' '+splice_junction_data.type : '';\n\n        // For splice junctions chart build\n        all_in_one_data.push( {\n          points: points\n          ,lines: lines\n          ,shadowSize: 0\n          ,color: color\n          ,data: [ [splice_junction_data.start, ((last_isoforms_x_plot+index)+1), splice_junction_data.start+splice_junction_note, 'splice_junction'], [splice_junction_data.stop, ((last_isoforms_x_plot+index)+1), splice_junction_data.stop+splice_junction_note, 'splice_junction'] ]\n        } );\n      });\n    }\n\n    // [END] Splice Junctions Graph ///////////////\n\n    // [BEGIN] MRM Assays Graph ///////////////\n    // Set up the peptide data for the data points\n    var points = { show: false };\n    var lines = { show: true, lineWidth: 3 };\n    var color = '#0066cc';\n    var mrms_data = JSON.parse('{{ sequence_labs_array|json_encode|raw }}');    \n    var mrms_data_length = 0;\n    var count = 0;\n\n    var sequence_groups = mrms_data.total_sequences;\n    var new_index = 1;\n\n    $.each(mrms_data, function(index, mrm_data)\n    {\n      mrms_data_length = count++;\n      $.each(mrm_data, function(single_index, single_mrm_data)\n      {\n        // For all-in-one chart build   \n        // new_index = (new_index > 3) ? 1.5 : new_index;\n\n        if(sequence_groups > 1)\n        {\n          if(new_index >= (sequence_groups+1) )\n          {\n            new_index = 1;\n            mrms_data_length = 0;\n          } else {\n            new_index = new_index+1;\n          }\n        } else {\n          new_index = single_index;\n        }\n        \n        all_in_one_data.push({\n          points: points\n          ,lines: lines\n          ,color: color\n          ,shadowSize: 0\n          ,data: [\n             [single_mrm_data.peptide_start, (new_index), single_mrm_data.peptide_sequence+' ('+single_mrm_data.submitting_laboratory+')', single_mrm_data.peptide_sequence, 'mrm_assay', single_mrm_data.protein_id]\n            ,[single_mrm_data.peptide_end, (new_index), single_mrm_data.peptide_sequence+' ('+single_mrm_data.submitting_laboratory+')', single_mrm_data.peptide_sequence, 'mrm_assay', single_mrm_data.protein_id]\n          ]\n        });\n      });\n    });\n\n    // [END] MRM Assays Graph ///////////////\n   \n\n    var all_in_one_graph = $(\"#all_in_one_graph\");\n    var all_in_one_graph_max = ( (mrms_data_length*2)+(isoforms_data_length+splice_junctions_data_length)+6 );\n\n    // Plot all data\n    var all_in_one_plot = $.plot(all_in_one_graph, all_in_one_data, {\n      yaxis: { show: false, min: 0, max: all_in_one_graph_max, panRange: [0, all_in_one_graph_max] }, // \n      xaxis: { show: true, min: 0, max: sequence_max, tickSize: 100, panRange: [0, sequence_max] }, // \n      grid: {\n        show: true,\n        hoverable: true,\n        clickable: true,\n        borderWidth: { top: 0, right: 0, bottom: 1, left: 0 },\n        color: '#999'\n      },\n      zoom: { interactive: true },\n      pan: { interactive: true }\n    });\n\n    // Chart Legend\n    all_in_one_graph.append('<div class=\"chart-legend sequence-domains-chart-legend\" title=\"Click to go to data source (Uniprot)\"></div>');\n    all_in_one_graph.append('<div class=\"chart-legend-text sequence-domains-chart-legend-text\" title=\"Click to go to data source (Uniprot)\">Sequence Domains</div>');\n    all_in_one_graph.append('<div class=\"chart-legend isoforms-chart-legend\" title=\"Click to go to data source (Uniprot)\"></div>');\n    all_in_one_graph.append('<div class=\"chart-legend-text isoforms-chart-legend-text\" title=\"Click to go to data source (Uniprot)\">Isoforms</div>');\n    all_in_one_graph.append('<div class=\"chart-legend snps-chart-legend\" title=\"Click to go to data source (Uniprot)\"></div>');\n    all_in_one_graph.append('<div class=\"chart-legend-text snps-chart-legend-text\" title=\"Click to go to data source (Uniprot)\">SNPs</div>');\n    all_in_one_graph.append('<div class=\"chart-legend mrm-assays-chart-legend\"></div>');\n    all_in_one_graph.append('<div class=\"chart-legend-text mrm-assays-chart-legend-text\">Targeted MS Assays</div>');\n\n    // Chart legend links\n    $('.sequence-domains-chart-legend, .sequence-domains-chart-legend-text').on('click', function(event) {\n      var url_sequence_domains = 'http://www.uniprot.org/uniprot/'+uniprot_id+'#section_features';\n      window.open(url_sequence_domains, '_blank');\n    });\n    $('.isoforms-chart-legend, .isoforms-chart-legend-text').on('click', function(event) {\n      var url_isoforms = 'http://www.uniprot.org/uniprot/'+uniprot_id+'#'+uniprot_id+'-1';\n      window.open(url_isoforms, '_blank');\n    });\n    $('.snps-chart-legend, .snps-chart-legend-text').on('click', function(event) {\n      var url_snps = 'http://www.uniprot.org/uniprot/'+uniprot_id+'';\n      window.open(url_isoforms, '_blank');\n    });\n\n    ///////////////////////////////////////////////////////////\n\n    // Set the height of the chart\n    var graph_height = ( (last_x_plot*30) != 0 ) ? (last_x_plot*30) : 300;\n    $(all_in_one_graph).css('height', graph_height); // (all_in_one_data.length * 11)\n\n    // Add the zoom in button\n    $(\"<div class='button' style='right:90px;top:0px'>zoom in</div>\")\n      .appendTo(all_in_one_graph)\n      .click(function (event) {\n        event.preventDefault();\n        all_in_one_plot.zoom();\n    });\n\n    // Add the zoom out button\n    $(\"<div class='button' style='right:20px;top:0px'>zoom out</div>\")\n      .appendTo(all_in_one_graph)\n      .click(function (event) {\n        event.preventDefault();\n        all_in_one_plot.zoomOut();\n    });\n\n    // Helper for taking the repetitive work out of placing panning arrows\n    function addArrow(dir, right, top, offset) {\n      $(\"<img class='button' src='{{ path_to_this_module }}/library/images/arrow-\" + dir + \".gif' style='right:\" + right + \"px;top:\" + top + \"px'>\")\n        .appendTo(all_in_one_graph)\n        .click(function (e) {\n          e.preventDefault();\n          all_in_one_plot.pan(offset);\n      });\n    }\n    addArrow(\"left\", 55, 40, { left: -100 });\n    addArrow(\"right\", 25, 40, { left: 100 });\n    addArrow(\"up\", 40, 25, { top: -100 });\n    addArrow(\"down\", 40, 55, { top: 100 });\n\n    // Disable the mouse wheel functionality for panning and zooming\n    $('#all_in_one_graph canvas.flot-overlay').unmousewheel();\n\n    $(all_in_one_graph).bind(\"plotclick\", function (event, pos, item) {\n      // Splice Junctions\n      // http://www.uniprot.org/uniprot/P04626#section_features\n      if( (item != null) && (item.series.data[0][3] != null) && (item.series.data[0][3] == 'splice_junction') ) {\n        var url = 'http://www.uniprot.org/uniprot/'+uniprot_id+'#section_features';\n        window.open(url, '_blank');\n      }\n      // Isoforms\n      if( (item != null) && (item.series.data[0][4] != null) && (item.series.data[0][4] == 'isoform') ) {\n        var url = 'http://www.uniprot.org/uniprot/'+item.series.data[item.dataIndex][3];\n        window.open(url, '_blank');\n      }\n      // SNPs\n      if( (item != null) && (item.series.data[0][3] != null) && (item.series.data[0][3] == 'snp') ) {\n        var url = 'http://www.uniprot.org/blast/?about='+uniprot_id+'['+item.datapoint[0]+']';\n        window.open(url, '_blank');\n      }\n      // MRM Assays\n      if( (item != null) && (item.series.data[0][4] != null) && (item.series.data[0][4] == 'mrm_assay') ) {\n\n        var this_peptide_sequence = item.series.data[item.dataIndex][3];\n        var this_protein_id = item.series.data[item.dataIndex][5];\n        var div_id = '.'+this_protein_id;\n        // Change our States (URL, title in title bar)\n        History.replaceState({state:1}, \"{{ gene }}, CPTAC-\"+this_protein_id+\" - CPTAC Assay Portal\", \"CPTAC-\"+this_protein_id);\n        // Scroll to assays area\n        scrollToAnchor('assay_details_anchor');\n        $('.assay-details-wrapper').hide();\n        $('#preloader_loading_assay_details').fadeIn(500);\n        $('#preloader_loading_assay_details').hide();\n        $(div_id).fadeIn(300);\n        // Load Disqus commenting\n        loadDisqus($('#comments_container_'+this_protein_id), this_peptide_sequence, 'http://{{ server_name }}{{ request_uri }}/#!'+this_peptide_sequence);\n      }\n\n    });\n\n    ///////////////////////////////////////////////////////////\n   \n    // [BEGIN] Highlighted Peptide Sequence Links ///////////////\n    // Use sequence values from the 'genes_distinct' array\n    var mouseY;\n    var mouseX;\n    $(document).mousemove( function(e) {\n           mouseX = e.pageX; \n           mouseY = e.pageY;\n    }); \n\n    var starts = JSON.parse('{{ distinct_gene_peptide_sequence|json_encode|raw }}');\n    var last_clicked = false;\n    $.each(starts, function(index, starts_data) {\n      // On click event for peptide sequence links in the gene sequence\n      var this_peptide_sequence = starts_data.peptide_sequence;\n      var this_protein_id = starts_data.manage;\n      var div_id = '.'+this_protein_id;\n\n      var clickable_class = 'seq-'+this_peptide_sequence;\n\n      $('.'+clickable_class).on('click',function()\n      { \n        \n        $(\"rect, line, .close\").tooltip();\n\n        if(last_clicked != this_peptide_sequence){\n          $('.detail-modal').attr('style','display: none');\n          last_clicked = false;\n        }\n\n        var div_height = $('.all-details-'+this_peptide_sequence).height();\n        var offset = (div_height > 25) ? 450 : 390;\n        $('.all-details-'+this_peptide_sequence).css({ 'top':mouseY-offset }).fadeIn('fast');\n      \n        $('.detail-modal .close').on('click',function(){        \n          $('.detail-modal').fadeOut('fast');       \n        });\n      });\n\n      var detail_link_class = this_peptide_sequence+'-'+this_protein_id;      \n      $('.protein-sequence').on('click', '.'+detail_link_class, function() {\n\n          // close the pop up\n          $('.detail-modal').fadeOut('fast');\n\n          // Change our States (URL, title in title bar)\n          History.replaceState({state:1}, \"{{ gene }}, CPTAC-\"+this_protein_id+\" - CPTAC Assay Portal\", \"CPTAC-\"+this_protein_id);\n          // Scroll to assays area\n          scrollToAnchor('assay_details_anchor');\n          $('.assay-details-wrapper').hide();\n          $('#preloader_loading_assay_details').fadeIn(500);\n          $('#preloader_loading_assay_details').hide();\n          $(div_id).fadeIn(300);\n\n          // Load Disqus commenting\n          loadDisqus($('#comments_container_'+this_protein_id), this_peptide_sequence, 'http://{{ server_name }}{{ request_uri }}/#!'+this_peptide_sequence);\n      });\n    });  \n\n       \n    // $(\"rect, line, .peptide_highlight\").tooltip({\n    //   'container': 'body',\n    //   'placement': 'top'\n    // });\n\n\n    // [END] Highlighted Peptide Sequence Links ///////////////\n         \n\n    // Tooltips on hover of data points\n    var previousPoint = null;\n    $(all_in_one_graph).bind(\"plothover\", function (event, pos, item) {\n      if(item) {\n        document.body.style.cursor = 'pointer';\n        if(previousPoint != item.dataIndex) {\n          previousPoint = item.dataIndex;\n          $(\"#tooltip\").remove();\n          showTooltip(item.pageX, item.pageY, item.series.data[item.dataIndex][2]);\n        }\n      } else {\n        document.body.style.cursor = 'default';\n        $(\"#tooltip\").remove();\n        previousPoint = null;\n      }\n    });\n\n    // Pop-out entire sequence\n    $('div.sequence').on('mouseenter', '.protein-sequence', function(event) {\n      $(this).attr('style','overflow: visible;');\n      $('table.sequence').addClass('sequence_table_shadow');\n    });\n    $('div.sequence').on('mouseleave', '.protein-sequence', function(event) {\n      $(this).attr('style','overflow: hidden;');\n      $('table.sequence').removeClass('sequence_table_shadow');\n      $('.detail-modal').attr('style','display: none');\n    });\n\n    // Tooltips\n    $('.span4 img, .chart-legend, .chart-legend-text').tooltip();\n\n \n\n    // Show the Assay details for the page id we're on\n    var details_div_id = $('#outer-wrapper .{{ manage }}');\n    $(details_div_id).show();\n    loadDisqus($('#comments_container_{{ manage }}'), '{{ peptide_sequence }}', 'http://{{ server_name }}{{ request_uri }}/#!{{ peptide_sequence }}');\n\n    // History.js\n    (function(window,undefined){\n      // Bind to StateChange Event\n      History.Adapter.bind(window,'statechange',function(){ // Note: We are using statechange instead of popstate\n          var State = History.getState(); // Note: We are using History.getState() instead of event.state\n      });\n    })(window);\n\n  });\n\n  // FUNCTIONS ///////////////\n\n  function scrollToAnchor(aid) {\n    var aTag = $(\"a[name='\"+ aid +\"']\");\n    $('html,body').animate( {scrollTop: aTag.offset().top}, 'slow' );\n  }\n\n  function showTooltip(x, y, contents) {\n    $(\"<div id='tooltip'>\" + contents + \"</div>\").css({\n      position: \"absolute\",\n      display: \"none\",\n      top: y-28,\n      left: x+8,\n      border: \"1px solid #000\",\n      padding: \"4px\",\n      \"background-color\": \"#000\",\n      opacity: 0.80,\n      color: \"#fff\"\n    }).appendTo(\"body\").fadeIn(200);\n  }\n\n\n  function get_plots_table_data(genes) {\n\n\n\n\n    // If we're using an element repededly, let's create variables\n    var response_curve_message = '<p>Table data unavailable</p>';\n    // Display the preloaders\n    $.each(genes, function(index, gene) {\n      $('div.span12.'+gene.peptide_sequence+'_'+gene.laboratory_abbreviation+' .loc_lloq_preloader_loading').show();\n    });\n\n    // Send the request via AJAX\n    $.ajax({\n      url:\"{{ path_to_this_module }}/get_plots_table_data\"\n      ,dataType:\"json\"\n      ,type:\"post\"\n      ,data: { genes: JSON.stringify(genes) }\n      ,success:function(data) {\n        if (data) {\n          $.each(data, function(index, single_gene_data) {\n\n            /*\n             * Build out the LOC/LOQ data table\n             */\n\n            if(single_gene_data.lod_loq_comparison_data[0].length) {\n\n              var crude = (single_gene_data.peptide_standard_purity_types_id == 3) ? true : false;\n              var peptide_sequence = single_gene_data.lod_loq_comparison_data[0][0].peptide;              \n              var lod_loq_units = single_gene_data.lod_loq_comparison_data[0][0].lod_loq_units;              \n              var crude_style = (crude) ? 'class=\"crude-header\"' : '';   \n              var lod_loq_units_note = (crude) ? '<br /><small><span '+crude_style+'>Estimated based on crude peptide concentration</span></small>' : '';              \n\n              // Strip brackets from the modified peptide sequence.\n              var peptide_sequence_stripped = peptide_sequence.replace(/[\\[\\+\\d+\\]]/g,'');\n              var table = $('<table/>').addClass('table table-bordered table-striped table-condensed').attr('id',single_gene_data.manage_id+'_loc_loq');                   \n              \n              var table_header_row = $('<tr />');\n              var table_headers = $('<th colspan=\"2\">&nbsp;</th><th colspan=\"3\">LOD ('+lod_loq_units+')'+lod_loq_units_note+'</th><th class=\"lloq_header\" colspan=\"3\">LLOQ ('+lod_loq_units+')'+lod_loq_units_note+'</th>');\n              \n              table_header_row.append(table_headers);\n              table.append(table_header_row);\n\n              var table_top_row = $(\"<tr/>\");\n              var labels = [\n                \"Peptide\"\n                ,\"Transition\"\n                ,\"blank only\"\n                ,\"blank+low-conc\"\n                ,\"rsd limit\"\n                ,\"blank only\"\n                ,\"blank+low-conc\"\n                ,\"rsd limit\"\n              ];\n              // Stitch together the table headers row\n              $.each(labels, function(index, label) {\n                table_top_row.append('<td><strong>'+label+'</strong></td>');\n              });\n\n              table.append(table_top_row);\n\n              $.each(single_gene_data.lod_loq_comparison_data, function(index, single_data) {\n\n                var lod_loq_rowspan = single_data.length;\n\n                $.each(single_data, function(idx, single) {\n\n                  var transition_id = (single.transition_id == '.Sum.tr.') ? 'Sum' : single.transition_id;\n                  var table_row = $(\"<tr/>\");\n                  table.append(table_row);\n\n                  var a = (single.blank_only_LOD != 'NA') \n                    ? Number(single.blank_only_LOD).toExponential(1) \n                    : single.blank_only_LOD;\n                  var b = (single.blank_low_conc_LOD != 'NA') \n                    ? Number(single.blank_low_conc_LOD).toExponential(1) \n                    : single.blank_low_conc_LOD;\n                  var c = (single.rsd_limit_LOD != 'NA') \n                    ? Number(single.rsd_limit_LOD).toExponential(1) \n                    : single.rsd_limit_LOD;\n                  var d = (single.blank_only_LOQ != 'NA') \n                    ? Number(single.blank_only_LOQ).toExponential(1) \n                    : single.blank_only_LOQ;\n                  var e = (single.blank_low_conc_LOQ != 'NA') \n                    ? Number(single.blank_low_conc_LOQ).toExponential(1) \n                    : single.blank_low_conc_LOQ;\n                  var f = (single.rsd_limit_LOQ != 'NA') \n                    ? Number(single.rsd_limit_LOQ).toExponential(1) \n                    : single.rsd_limit_LOQ;\n\n\n\n                  var peptide_sequence_label = (index == 0) ? peptide_sequence : '';\n\n                  if(idx == 0) {\n                    table_row.append('<td rowspan=\"'+lod_loq_rowspan+'\">'+peptide_sequence_label+'</td>');\n                  }\n                  table_row.append('<td>'+transition_id+'</td>');\n                  table_row.append('<td>'+a+'</td>');\n                  table_row.append('<td>'+b+'</td>');\n                  table_row.append('<td>'+c+'</td>');\n                  table_row.append('<td>'+d+'</td>');\n                  table_row.append('<td>'+e+'</td>');\n                  table_row.append('<td>'+f+'</td>');\n\n\n\n                });\n              });\n\n              // Remove preloader\n              $('div.span12.'+single_gene_data.manage_id+'_'+single_gene_data.laboratory_abbreviation+'_'+single_gene_data.manage_id+' .loc_lloq_preloader_loading').remove();\n              // Load the table\n              $('div.span12.'+single_gene_data.manage_id+'_'+single_gene_data.laboratory_abbreviation+'_'+single_gene_data.manage_id).append(table);\n\n            }\n\n            if(single_gene_data.response_curves_data[0].length) {\n\n              /*\n               * Build out the Curve Fit table\n               */\n\n              var peptide_sequence = single_gene_data.response_curves_data[0][0].peptide;\n              // Strip brackets from the modified peptide sequence.\n              var peptide_sequence_stripped = peptide_sequence.replace(/[\\[\\+\\d+\\]]/g,'');\n              var table = $('<table/>').addClass('table table-bordered table-striped table-condensed')\n                .attr('id',peptide_sequence_stripped+'_response_curves')\n                .attr('style','margin-top:40px;');\n\n              var table_header_row = $(\"<tr/>\");\n              var table_headers = $('<th colspan=\"2\">&nbsp;</th><th colspan=\"3\">Curve Fit</th>');\n              table_header_row.append(table_headers);\n              table.append(table_header_row);\n\n              // Response curves data table\n              var table_top_row = $(\"<tr/>\");\n              var labels = [\n                \"Peptide\"\n                ,\"Transition\"\n                ,\"slope\"\n                ,\"intercept\"\n                ,\"r squared\"\n              ];\n              // Stitch together the table headers row\n              $.each(labels, function(index, label) {\n                table_top_row.append('<td><strong>'+label+'</strong></td>');\n              });\n\n              table.append(table_top_row);\n\n              $.each(single_gene_data.response_curves_data, function(index, single_data) {\n\n                var curve_fit_rowspan = single_data.length;\n\n                $.each(single_data, function(idx, single) {\n\n                  var transition_id = (single.transition_id == '.Sum.tr.') ? 'Sum' : single.transition_id;\n                  var table_row = $(\"<tr/>\");\n                  table.append(table_row);\n\n                  if(idx == 0) {\n                    table_row.append('<td rowspan=\"'+curve_fit_rowspan+'\">'+single.peptide+'</td>');\n                  }\n                  table_row.append('<td>'+transition_id+'</td>');\n                  table_row.append('<td>'+single.Slope+'</td>');\n                  table_row.append('<td>'+single.Intercept+'</td>');\n                  table_row.append('<td>'+single.RSquare+'</td>');\n                });\n              });\n\n              // Remove preloader\n              $('div.span12.'+single_gene_data.manage_id+'_'+single_gene_data.laboratory_abbreviation+'_'+single_gene_data.manage_id+' .loc_lloq_preloader_loading').remove();\n              // Load the table\n              $('div.span12.'+single_gene_data.manage_id+'_'+single_gene_data.laboratory_abbreviation+'_'+single_gene_data.manage_id).append(table);\n  \n              // Response Curves LLOQ header notice\n              var high_values = $('#'+single_gene_data.manage_id+'_validation_sample_data_'+single_gene_data.manage_id+' tbody tr td').find('.red');\n\n              if(high_values.length) {               \n\n                // try to prevent duplicates\n                $('#outer-wrapper #'+single_gene_data.manage_id+'_loc_loq .lloq_header .icon-exclamation-sign').remove();\n\n                $('#outer-wrapper #'+single_gene_data.manage_id+'_loc_loq .lloq_header').append(' <i class=\"icon-exclamation-sign red\" title=\"Repeatability shows greater than 20% CV\"></i>');\n                $('.icon-exclamation-sign').tooltip();\n              }\n            }\n\n            if( (single_gene_data.lod_loq_comparison_data[0] == 0) && (single_gene_data.response_curves_data[0].length == 0) ) {\n              $.each(genes, function(index, gene) {\n                var div_wrapper = $('div.span12.'+single_gene_data.peptide_sequence+'_'+single_gene_data.laboratory_abbreviation);\n                // Remove preloader\n                $('.loc_lloq_preloader_loading').remove();\n                $(div_wrapper).append( '<p style=\"text-align:center; margin-top:200px;\">Response Curves Data Unavailable</p>' );\n              });\n            }\n\n          });\n\n        }\n\n      }\n\n    });\n  }\n</script>\n{% endblock %}","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":864,"column":8},"end":{"row":870,"column":12}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":11,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/templates/show_assay_details.php","digestWhenLastPersisted":"69f8165807add30bedb48a5eede74746995bb1f1","preferredLineEnding":null,"nextMarkerId":844,"deserializer":"TextBuffer","version":5},{"id":"a98fc86b9f01cdad2044f54adee792f0","text":"<?php\n/* Note that you are able to use any key that exists in\n * the global settings, and it will overwrite it\n */\n$swpg_module_settings = array(\n  \"module_name\" => \"Preview Assays\"\n  ,\"module_description\" => \"Preview imported assays on the portal.\"\n  ,\"module_icon_path\" => \"/\" . $_SERVER[\"CORE_TYPE\"] . \"/images/icons/pixelistica-blue-icons/png/64x64/view.png\"\n  ,\"sort_order\" => 3\n  ,\"menu_hidden\" => isset($_SESSION[$swpg_global_settings[\"session_key\"]]) && $_SESSION[$swpg_global_settings[\"session_key\"]] ? false : true\n  ,\"pages\" => array(\n    array(\n      \"label\" => \"Browse and Preview Assays\"\n      ,\"path\" => \"/\"\n      ,\"display\" => $apply_permissions(\"assay_preview\", \"browse_access\")\n    )\n  )\n  ,\"datatables\" => array(\n    //attributes of each datatable\n    array(\n      \"dom_table_id\" => \"browse_table\"\n      ,\"path_to_details_page\" => \"/\"\n      ,\"path_to_sample_page\" => isset($final_global_template_vars[\"path_to_this_module\"]) \n          ? $final_global_template_vars[\"path_to_this_module\"] . \"/sample\" : false\n      ,\"path_to_datatables_controller\" => isset($final_global_template_vars[\"path_to_this_module\"]) \n          ? $final_global_template_vars[\"path_to_this_module\"] . \"/datatables_browse_assays\" : false\n      ,\"path_to_delete\" => isset($final_global_template_vars[\"path_to_this_module\"]) \n          ? $final_global_template_vars[\"path_to_this_module\"] . \"/assay/delete\" : false\n      ,\"data\" => \"\" // $assays_data_array\n      ,\"active_on_load\" => true\n      ,\"fields\" => array(\n        \"manage\" => array(\"label\" => \"Options\", \"filter\" => false, \"show_column_toggle\" => false, \"initially_hidden\" => false)\n        ,\"gene\" => array(\"label\" => \"Gene\", \"comparison_default\" => \"equals\", \"filter\" => false, \"show_column_toggle\" => false, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"peptide_sequence\" => array(\"label\" => \"Sequence\", \"comparison_default\" => \"start_with\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => false, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"peptide_start\" => array(\"label\" => \"Peptide Start\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"peptide_end\" => array(\"label\" => \"Peptide End\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"modification\" => array(\"label\" => \"Modification\", \"comparison_default\" => \"equals\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"assay_type\" => array(\"label\" => \"Assay Type\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => false, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"matrix\" => array(\"label\" => \"Matrix\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => false, \"filter_type\" => \"text\", \"data_type\" => \"int\")\n        ,\"hydrophobicity\" => array(\"label\" => \"Hydrophobicity\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        // NEW COLUMNS\n        ,\"site_of_modification_protein\" => array(\"label\" => \"Site of Modification - Protein\", \"comparison_default\" => \"equals\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"protein_species_label\" => array(\"label\" => \"Species\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        // ,\"homology\" => array(\"label\" => \"Homology\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"peptide_standard_purity\" => array(\"label\" => \"Peptide Standard Purity\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"instrument\" => array(\"label\" => \"Instrument\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"endogenous_detected\" => array(\"label\" => \"Endogenous Detected\", \"comparison_default\" => \"contains\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => true, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n        ,\"cptac_id\" => array(\"label\" => \"CPTAC ID\", \"comparison_default\" => \"equals\", \"filter\" => false, \"show_column_toggle\" => true, \"initially_hidden\" => false, \"filter_type\" => \"text\", \"data_type\" => \"text\")\n      )\n      ,\"search_fields\" => array(\n        \"protein.gene_symbol\"\n        , \"protein.uniprot_accession_id\"\n        , \"analyte_peptide.peptide_sequence\"\n        , \"analyte_peptide.modification_type\"\n        , \"protein.cptac_id\"\n      )\n    )\n  )\n);\n\n?>","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":49,"column":8},"end":{"row":49,"column":14}},"properties":{"type":"selection","autoscroll":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays_preview/config/settings.php","digestWhenLastPersisted":"9a04dc5f6d47a88c9a372cefae1c4a717e56fccf","preferredLineEnding":null,"nextMarkerId":3,"deserializer":"TextBuffer","version":5},{"id":"71f8854ddb4b79ef6e756595dcae6eee","text":"<?php\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n\n  /**\n   * The \"activities\" collection of methods.\n   * Typical usage is:\n   *  <code>\n   *   $plusService = new Google_PlusService(...);\n   *   $activities = $plusService->activities;\n   *  </code>\n   */\n  class Google_ActivitiesServiceResource extends Google_ServiceResource {\n\n    /**\n     * Get an activity. (activities.get)\n     *\n     * @param string $activityId The ID of the activity to get.\n     * @param array $optParams Optional parameters.\n     * @return Google_Activity\n     */\n    public function get($activityId, $optParams = array()) {\n      $params = array('activityId' => $activityId);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('get', array($params));\n      if ($this->useObjects()) {\n        return new Google_Activity($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * List all of the activities in the specified collection for a particular user. (activities.list)\n     *\n     * @param string $userId The ID of the user to get activities for. The special value \"me\" can be used to indicate the authenticated user.\n     * @param string $collection The collection of activities to list.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string maxResults The maximum number of activities to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.\n     * @return Google_ActivityFeed\n     */\n    public function listActivities($userId, $collection, $optParams = array()) {\n      $params = array('userId' => $userId, 'collection' => $collection);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('list', array($params));\n      if ($this->useObjects()) {\n        return new Google_ActivityFeed($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * Search public activities. (activities.search)\n     *\n     * @param string $query Full-text search query string.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string language Specify the preferred language to search with. See search language codes for available values.\n     * @opt_param string maxResults The maximum number of activities to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string orderBy Specifies how to order search results.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response. This token can be of any length.\n     * @return Google_ActivityFeed\n     */\n    public function search($query, $optParams = array()) {\n      $params = array('query' => $query);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('search', array($params));\n      if ($this->useObjects()) {\n        return new Google_ActivityFeed($data);\n      } else {\n        return $data;\n      }\n    }\n  }\n\n  /**\n   * The \"comments\" collection of methods.\n   * Typical usage is:\n   *  <code>\n   *   $plusService = new Google_PlusService(...);\n   *   $comments = $plusService->comments;\n   *  </code>\n   */\n  class Google_CommentsServiceResource extends Google_ServiceResource {\n\n    /**\n     * Get a comment. (comments.get)\n     *\n     * @param string $commentId The ID of the comment to get.\n     * @param array $optParams Optional parameters.\n     * @return Google_Comment\n     */\n    public function get($commentId, $optParams = array()) {\n      $params = array('commentId' => $commentId);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('get', array($params));\n      if ($this->useObjects()) {\n        return new Google_Comment($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * List all of the comments for an activity. (comments.list)\n     *\n     * @param string $activityId The ID of the activity to get comments for.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string maxResults The maximum number of comments to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.\n     * @opt_param string sortOrder The order in which to sort the list of comments.\n     * @return Google_CommentFeed\n     */\n    public function listComments($activityId, $optParams = array()) {\n      $params = array('activityId' => $activityId);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('list', array($params));\n      if ($this->useObjects()) {\n        return new Google_CommentFeed($data);\n      } else {\n        return $data;\n      }\n    }\n  }\n\n  /**\n   * The \"moments\" collection of methods.\n   * Typical usage is:\n   *  <code>\n   *   $plusService = new Google_PlusService(...);\n   *   $moments = $plusService->moments;\n   *  </code>\n   */\n  class Google_MomentsServiceResource extends Google_ServiceResource {\n\n    /**\n     * Record a moment representing a user's activity such as making a purchase or commenting on a blog.\n     * (moments.insert)\n     *\n     * @param string $userId The ID of the user to record activities for. The only valid values are \"me\" and the ID of the authenticated user.\n     * @param string $collection The collection to which to write moments.\n     * @param Google_Moment $postBody\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param bool debug Return the moment as written. Should be used only for debugging.\n     * @return Google_Moment\n     */\n    public function insert($userId, $collection, Google_Moment $postBody, $optParams = array()) {\n      $params = array('userId' => $userId, 'collection' => $collection, 'postBody' => $postBody);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('insert', array($params));\n      if ($this->useObjects()) {\n        return new Google_Moment($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * List all of the moments for a particular user. (moments.list)\n     *\n     * @param string $userId The ID of the user to get moments for. The special value \"me\" can be used to indicate the authenticated user.\n     * @param string $collection The collection of moments to list.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string maxResults The maximum number of moments to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.\n     * @opt_param string targetUrl Only moments containing this targetUrl will be returned.\n     * @opt_param string type Only moments of this type will be returned.\n     * @return Google_MomentsFeed\n     */\n    public function listMoments($userId, $collection, $optParams = array()) {\n      $params = array('userId' => $userId, 'collection' => $collection);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('list', array($params));\n      if ($this->useObjects()) {\n        return new Google_MomentsFeed($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * Delete a moment. (moments.remove)\n     *\n     * @param string $id The ID of the moment to delete.\n     * @param array $optParams Optional parameters.\n     */\n    public function remove($id, $optParams = array()) {\n      $params = array('id' => $id);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('remove', array($params));\n      return $data;\n    }\n  }\n\n  /**\n   * The \"people\" collection of methods.\n   * Typical usage is:\n   *  <code>\n   *   $plusService = new Google_PlusService(...);\n   *   $people = $plusService->people;\n   *  </code>\n   */\n  class Google_PeopleServiceResource extends Google_ServiceResource {\n\n    /**\n     * Get a person's profile. If your app uses scope https://www.googleapis.com/auth/plus.login, this\n     * method is guaranteed to return ageRange and language. (people.get)\n     *\n     * @param string $userId The ID of the person to get the profile for. The special value \"me\" can be used to indicate the authenticated user.\n     * @param array $optParams Optional parameters.\n     * @return Google_Person\n     */\n    public function get($userId, $optParams = array()) {\n      $params = array('userId' => $userId);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('get', array($params));\n      if ($this->useObjects()) {\n        return new Google_Person($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * List all of the people in the specified collection. (people.list)\n     *\n     * @param string $userId Get the collection of people for the person identified. Use \"me\" to indicate the authenticated user.\n     * @param string $collection The collection of people to list.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string maxResults The maximum number of people to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string orderBy The order to return people in.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.\n     * @return Google_PeopleFeed\n     */\n    public function listPeople($userId, $collection, $optParams = array()) {\n      $params = array('userId' => $userId, 'collection' => $collection);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('list', array($params));\n      if ($this->useObjects()) {\n        return new Google_PeopleFeed($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * List all of the people in the specified collection for a particular activity.\n     * (people.listByActivity)\n     *\n     * @param string $activityId The ID of the activity to get the list of people for.\n     * @param string $collection The collection of people to list.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string maxResults The maximum number of people to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.\n     * @return Google_PeopleFeed\n     */\n    public function listByActivity($activityId, $collection, $optParams = array()) {\n      $params = array('activityId' => $activityId, 'collection' => $collection);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('listByActivity', array($params));\n      if ($this->useObjects()) {\n        return new Google_PeopleFeed($data);\n      } else {\n        return $data;\n      }\n    }\n    /**\n     * Search all public profiles. (people.search)\n     *\n     * @param string $query Specify a query string for full text search of public text in all profiles.\n     * @param array $optParams Optional parameters.\n     *\n     * @opt_param string language Specify the preferred language to search with. See search language codes for available values.\n     * @opt_param string maxResults The maximum number of people to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.\n     * @opt_param string pageToken The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response. This token can be of any length.\n     * @return Google_PeopleFeed\n     */\n    public function search($query, $optParams = array()) {\n      $params = array('query' => $query);\n      $params = array_merge($params, $optParams);\n      $data = $this->__call('search', array($params));\n      if ($this->useObjects()) {\n        return new Google_PeopleFeed($data);\n      } else {\n        return $data;\n      }\n    }\n  }\n\n/**\n * Service definition for Google_Plus (v1).\n *\n * <p>\n * The Google+ API enables developers to build on top of the Google+ platform.\n * </p>\n *\n * <p>\n * For more information about this service, see the\n * <a href=\"https://developers.google.com/+/api/\" target=\"_blank\">API Documentation</a>\n * </p>\n *\n * @author Google, Inc.\n */\nclass Google_PlusService extends Google_Service {\n  public $activities;\n  public $comments;\n  public $moments;\n  public $people;\n  /**\n   * Constructs the internal representation of the Plus service.\n   *\n   * @param Google_Client $client\n   */\n  public function __construct(Google_Client $client) {\n    $this->servicePath = 'plus/v1/';\n    $this->version = 'v1';\n    $this->serviceName = 'plus';\n\n    $client->addService($this->serviceName, $this->version);\n    $this->activities = new Google_ActivitiesServiceResource($this, $this->serviceName, 'activities', json_decode('{\"methods\": {\"get\": {\"id\": \"plus.activities.get\", \"path\": \"activities/{activityId}\", \"httpMethod\": \"GET\", \"parameters\": {\"activityId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"response\": {\"$ref\": \"Activity\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}, \"list\": {\"id\": \"plus.activities.list\", \"path\": \"people/{userId}/activities/{collection}\", \"httpMethod\": \"GET\", \"parameters\": {\"collection\": {\"type\": \"string\", \"required\": true, \"enum\": [\"public\"], \"location\": \"path\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"20\", \"format\": \"uint32\", \"minimum\": \"1\", \"maximum\": \"100\", \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}, \"userId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"response\": {\"$ref\": \"ActivityFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}, \"search\": {\"id\": \"plus.activities.search\", \"path\": \"activities\", \"httpMethod\": \"GET\", \"parameters\": {\"language\": {\"type\": \"string\", \"default\": \"en-US\", \"location\": \"query\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"10\", \"format\": \"uint32\", \"minimum\": \"1\", \"maximum\": \"20\", \"location\": \"query\"}, \"orderBy\": {\"type\": \"string\", \"default\": \"recent\", \"enum\": [\"best\", \"recent\"], \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}, \"query\": {\"type\": \"string\", \"required\": true, \"location\": \"query\"}}, \"response\": {\"$ref\": \"ActivityFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}}}', true));\n    $this->comments = new Google_CommentsServiceResource($this, $this->serviceName, 'comments', json_decode('{\"methods\": {\"get\": {\"id\": \"plus.comments.get\", \"path\": \"comments/{commentId}\", \"httpMethod\": \"GET\", \"parameters\": {\"commentId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"response\": {\"$ref\": \"Comment\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}, \"list\": {\"id\": \"plus.comments.list\", \"path\": \"activities/{activityId}/comments\", \"httpMethod\": \"GET\", \"parameters\": {\"activityId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"20\", \"format\": \"uint32\", \"minimum\": \"0\", \"maximum\": \"500\", \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}, \"sortOrder\": {\"type\": \"string\", \"default\": \"ascending\", \"enum\": [\"ascending\", \"descending\"], \"location\": \"query\"}}, \"response\": {\"$ref\": \"CommentFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}}}', true));\n    $this->moments = new Google_MomentsServiceResource($this, $this->serviceName, 'moments', json_decode('{\"methods\": {\"insert\": {\"id\": \"plus.moments.insert\", \"path\": \"people/{userId}/moments/{collection}\", \"httpMethod\": \"POST\", \"parameters\": {\"collection\": {\"type\": \"string\", \"required\": true, \"enum\": [\"vault\"], \"location\": \"path\"}, \"debug\": {\"type\": \"boolean\", \"location\": \"query\"}, \"userId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"request\": {\"$ref\": \"Moment\"}, \"response\": {\"$ref\": \"Moment\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\"]}, \"list\": {\"id\": \"plus.moments.list\", \"path\": \"people/{userId}/moments/{collection}\", \"httpMethod\": \"GET\", \"parameters\": {\"collection\": {\"type\": \"string\", \"required\": true, \"enum\": [\"vault\"], \"location\": \"path\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"20\", \"format\": \"uint32\", \"minimum\": \"1\", \"maximum\": \"100\", \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}, \"targetUrl\": {\"type\": \"string\", \"location\": \"query\"}, \"type\": {\"type\": \"string\", \"location\": \"query\"}, \"userId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"response\": {\"$ref\": \"MomentsFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\"]}, \"remove\": {\"id\": \"plus.moments.remove\", \"path\": \"moments/{id}\", \"httpMethod\": \"DELETE\", \"parameters\": {\"id\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\"]}}}', true));\n    $this->people = new Google_PeopleServiceResource($this, $this->serviceName, 'people', json_decode('{\"methods\": {\"get\": {\"id\": \"plus.people.get\", \"path\": \"people/{userId}\", \"httpMethod\": \"GET\", \"parameters\": {\"userId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"response\": {\"$ref\": \"Person\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}, \"list\": {\"id\": \"plus.people.list\", \"path\": \"people/{userId}/people/{collection}\", \"httpMethod\": \"GET\", \"parameters\": {\"collection\": {\"type\": \"string\", \"required\": true, \"enum\": [\"visible\"], \"location\": \"path\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"100\", \"format\": \"uint32\", \"minimum\": \"1\", \"maximum\": \"100\", \"location\": \"query\"}, \"orderBy\": {\"type\": \"string\", \"enum\": [\"alphabetical\", \"best\"], \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}, \"userId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}}, \"response\": {\"$ref\": \"PeopleFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\"]}, \"listByActivity\": {\"id\": \"plus.people.listByActivity\", \"path\": \"activities/{activityId}/people/{collection}\", \"httpMethod\": \"GET\", \"parameters\": {\"activityId\": {\"type\": \"string\", \"required\": true, \"location\": \"path\"}, \"collection\": {\"type\": \"string\", \"required\": true, \"enum\": [\"plusoners\", \"resharers\"], \"location\": \"path\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"20\", \"format\": \"uint32\", \"minimum\": \"1\", \"maximum\": \"100\", \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}}, \"response\": {\"$ref\": \"PeopleFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}, \"search\": {\"id\": \"plus.people.search\", \"path\": \"people\", \"httpMethod\": \"GET\", \"parameters\": {\"language\": {\"type\": \"string\", \"default\": \"en-US\", \"location\": \"query\"}, \"maxResults\": {\"type\": \"integer\", \"default\": \"25\", \"format\": \"uint32\", \"minimum\": \"1\", \"maximum\": \"50\", \"location\": \"query\"}, \"pageToken\": {\"type\": \"string\", \"location\": \"query\"}, \"query\": {\"type\": \"string\", \"required\": true, \"location\": \"query\"}}, \"response\": {\"$ref\": \"PeopleFeed\"}, \"scopes\": [\"https://www.googleapis.com/auth/plus.login\", \"https://www.googleapis.com/auth/plus.me\"]}}}', true));\n\n  }\n}\n\n\n\nclass Google_Acl extends Google_Model {\n  public $description;\n  protected $__itemsType = 'Google_PlusAclentryResource';\n  protected $__itemsDataType = 'array';\n  public $items;\n  public $kind;\n  public function setDescription( $description) {\n    $this->description = $description;\n  }\n  public function getDescription() {\n    return $this->description;\n  }\n  public function setItems(/* array(Google_PlusAclentryResource) */ $items) {\n    $this->assertIsArray($items, 'Google_PlusAclentryResource', __METHOD__);\n    $this->items = $items;\n  }\n  public function getItems() {\n    return $this->items;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n}\n\nclass Google_Activity extends Google_Model {\n  protected $__accessType = 'Google_Acl';\n  protected $__accessDataType = '';\n  public $access;\n  protected $__actorType = 'Google_ActivityActor';\n  protected $__actorDataType = '';\n  public $actor;\n  public $address;\n  public $annotation;\n  public $crosspostSource;\n  public $etag;\n  public $geocode;\n  public $id;\n  public $kind;\n  protected $__locationType = 'Google_Place';\n  protected $__locationDataType = '';\n  public $location;\n  protected $__objectType = 'Google_ActivityObject';\n  protected $__objectDataType = '';\n  public $object;\n  public $placeId;\n  public $placeName;\n  protected $__providerType = 'Google_ActivityProvider';\n  protected $__providerDataType = '';\n  public $provider;\n  public $published;\n  public $radius;\n  public $title;\n  public $updated;\n  public $url;\n  public $verb;\n  public function setAccess(Google_Acl $access) {\n    $this->access = $access;\n  }\n  public function getAccess() {\n    return $this->access;\n  }\n  public function setActor(Google_ActivityActor $actor) {\n    $this->actor = $actor;\n  }\n  public function getActor() {\n    return $this->actor;\n  }\n  public function setAddress( $address) {\n    $this->address = $address;\n  }\n  public function getAddress() {\n    return $this->address;\n  }\n  public function setAnnotation( $annotation) {\n    $this->annotation = $annotation;\n  }\n  public function getAnnotation() {\n    return $this->annotation;\n  }\n  public function setCrosspostSource( $crosspostSource) {\n    $this->crosspostSource = $crosspostSource;\n  }\n  public function getCrosspostSource() {\n    return $this->crosspostSource;\n  }\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setGeocode( $geocode) {\n    $this->geocode = $geocode;\n  }\n  public function getGeocode() {\n    return $this->geocode;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setLocation(Google_Place $location) {\n    $this->location = $location;\n  }\n  public function getLocation() {\n    return $this->location;\n  }\n  public function setObject(Google_ActivityObject $object) {\n    $this->object = $object;\n  }\n  public function getObject() {\n    return $this->object;\n  }\n  public function setPlaceId( $placeId) {\n    $this->placeId = $placeId;\n  }\n  public function getPlaceId() {\n    return $this->placeId;\n  }\n  public function setPlaceName( $placeName) {\n    $this->placeName = $placeName;\n  }\n  public function getPlaceName() {\n    return $this->placeName;\n  }\n  public function setProvider(Google_ActivityProvider $provider) {\n    $this->provider = $provider;\n  }\n  public function getProvider() {\n    return $this->provider;\n  }\n  public function setPublished( $published) {\n    $this->published = $published;\n  }\n  public function getPublished() {\n    return $this->published;\n  }\n  public function setRadius( $radius) {\n    $this->radius = $radius;\n  }\n  public function getRadius() {\n    return $this->radius;\n  }\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n  public function setUpdated( $updated) {\n    $this->updated = $updated;\n  }\n  public function getUpdated() {\n    return $this->updated;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setVerb( $verb) {\n    $this->verb = $verb;\n  }\n  public function getVerb() {\n    return $this->verb;\n  }\n}\n\nclass Google_ActivityActor extends Google_Model {\n  public $displayName;\n  public $id;\n  protected $__imageType = 'Google_ActivityActorImage';\n  protected $__imageDataType = '';\n  public $image;\n  protected $__nameType = 'Google_ActivityActorName';\n  protected $__nameDataType = '';\n  public $name;\n  public $url;\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setImage(Google_ActivityActorImage $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setName(Google_ActivityActorName $name) {\n    $this->name = $name;\n  }\n  public function getName() {\n    return $this->name;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityActorImage extends Google_Model {\n  public $url;\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityActorName extends Google_Model {\n  public $familyName;\n  public $givenName;\n  public function setFamilyName( $familyName) {\n    $this->familyName = $familyName;\n  }\n  public function getFamilyName() {\n    return $this->familyName;\n  }\n  public function setGivenName( $givenName) {\n    $this->givenName = $givenName;\n  }\n  public function getGivenName() {\n    return $this->givenName;\n  }\n}\n\nclass Google_ActivityFeed extends Google_Model {\n  public $etag;\n  public $id;\n  protected $__itemsType = 'Google_Activity';\n  protected $__itemsDataType = 'array';\n  public $items;\n  public $kind;\n  public $nextLink;\n  public $nextPageToken;\n  public $selfLink;\n  public $title;\n  public $updated;\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setItems(/* array(Google_Activity) */ $items) {\n    $this->assertIsArray($items, 'Google_Activity', __METHOD__);\n    $this->items = $items;\n  }\n  public function getItems() {\n    return $this->items;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setNextLink( $nextLink) {\n    $this->nextLink = $nextLink;\n  }\n  public function getNextLink() {\n    return $this->nextLink;\n  }\n  public function setNextPageToken( $nextPageToken) {\n    $this->nextPageToken = $nextPageToken;\n  }\n  public function getNextPageToken() {\n    return $this->nextPageToken;\n  }\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n  public function setUpdated( $updated) {\n    $this->updated = $updated;\n  }\n  public function getUpdated() {\n    return $this->updated;\n  }\n}\n\nclass Google_ActivityObject extends Google_Model {\n  protected $__actorType = 'Google_ActivityObjectActor';\n  protected $__actorDataType = '';\n  public $actor;\n  protected $__attachmentsType = 'Google_ActivityObjectAttachments';\n  protected $__attachmentsDataType = 'array';\n  public $attachments;\n  public $content;\n  public $id;\n  public $objectType;\n  public $originalContent;\n  protected $__plusonersType = 'Google_ActivityObjectPlusoners';\n  protected $__plusonersDataType = '';\n  public $plusoners;\n  protected $__repliesType = 'Google_ActivityObjectReplies';\n  protected $__repliesDataType = '';\n  public $replies;\n  protected $__resharersType = 'Google_ActivityObjectResharers';\n  protected $__resharersDataType = '';\n  public $resharers;\n  public $url;\n  public function setActor(Google_ActivityObjectActor $actor) {\n    $this->actor = $actor;\n  }\n  public function getActor() {\n    return $this->actor;\n  }\n  public function setAttachments(/* array(Google_ActivityObjectAttachments) */ $attachments) {\n    $this->assertIsArray($attachments, 'Google_ActivityObjectAttachments', __METHOD__);\n    $this->attachments = $attachments;\n  }\n  public function getAttachments() {\n    return $this->attachments;\n  }\n  public function setContent( $content) {\n    $this->content = $content;\n  }\n  public function getContent() {\n    return $this->content;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setObjectType( $objectType) {\n    $this->objectType = $objectType;\n  }\n  public function getObjectType() {\n    return $this->objectType;\n  }\n  public function setOriginalContent( $originalContent) {\n    $this->originalContent = $originalContent;\n  }\n  public function getOriginalContent() {\n    return $this->originalContent;\n  }\n  public function setPlusoners(Google_ActivityObjectPlusoners $plusoners) {\n    $this->plusoners = $plusoners;\n  }\n  public function getPlusoners() {\n    return $this->plusoners;\n  }\n  public function setReplies(Google_ActivityObjectReplies $replies) {\n    $this->replies = $replies;\n  }\n  public function getReplies() {\n    return $this->replies;\n  }\n  public function setResharers(Google_ActivityObjectResharers $resharers) {\n    $this->resharers = $resharers;\n  }\n  public function getResharers() {\n    return $this->resharers;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityObjectActor extends Google_Model {\n  public $displayName;\n  public $id;\n  protected $__imageType = 'Google_ActivityObjectActorImage';\n  protected $__imageDataType = '';\n  public $image;\n  public $url;\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setImage(Google_ActivityObjectActorImage $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityObjectActorImage extends Google_Model {\n  public $url;\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityObjectAttachments extends Google_Model {\n  public $content;\n  public $displayName;\n  protected $__embedType = 'Google_ActivityObjectAttachmentsEmbed';\n  protected $__embedDataType = '';\n  public $embed;\n  protected $__fullImageType = 'Google_ActivityObjectAttachmentsFullImage';\n  protected $__fullImageDataType = '';\n  public $fullImage;\n  public $id;\n  protected $__imageType = 'Google_ActivityObjectAttachmentsImage';\n  protected $__imageDataType = '';\n  public $image;\n  public $objectType;\n  protected $__thumbnailsType = 'Google_ActivityObjectAttachmentsThumbnails';\n  protected $__thumbnailsDataType = 'array';\n  public $thumbnails;\n  public $url;\n  public function setContent( $content) {\n    $this->content = $content;\n  }\n  public function getContent() {\n    return $this->content;\n  }\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setEmbed(Google_ActivityObjectAttachmentsEmbed $embed) {\n    $this->embed = $embed;\n  }\n  public function getEmbed() {\n    return $this->embed;\n  }\n  public function setFullImage(Google_ActivityObjectAttachmentsFullImage $fullImage) {\n    $this->fullImage = $fullImage;\n  }\n  public function getFullImage() {\n    return $this->fullImage;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setImage(Google_ActivityObjectAttachmentsImage $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setObjectType( $objectType) {\n    $this->objectType = $objectType;\n  }\n  public function getObjectType() {\n    return $this->objectType;\n  }\n  public function setThumbnails(/* array(Google_ActivityObjectAttachmentsThumbnails) */ $thumbnails) {\n    $this->assertIsArray($thumbnails, 'Google_ActivityObjectAttachmentsThumbnails', __METHOD__);\n    $this->thumbnails = $thumbnails;\n  }\n  public function getThumbnails() {\n    return $this->thumbnails;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityObjectAttachmentsEmbed extends Google_Model {\n  public $type;\n  public $url;\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityObjectAttachmentsFullImage extends Google_Model {\n  public $height;\n  public $type;\n  public $url;\n  public $width;\n  public function setHeight( $height) {\n    $this->height = $height;\n  }\n  public function getHeight() {\n    return $this->height;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setWidth( $width) {\n    $this->width = $width;\n  }\n  public function getWidth() {\n    return $this->width;\n  }\n}\n\nclass Google_ActivityObjectAttachmentsImage extends Google_Model {\n  public $height;\n  public $type;\n  public $url;\n  public $width;\n  public function setHeight( $height) {\n    $this->height = $height;\n  }\n  public function getHeight() {\n    return $this->height;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setWidth( $width) {\n    $this->width = $width;\n  }\n  public function getWidth() {\n    return $this->width;\n  }\n}\n\nclass Google_ActivityObjectAttachmentsThumbnails extends Google_Model {\n  public $description;\n  protected $__imageType = 'Google_ActivityObjectAttachmentsThumbnailsImage';\n  protected $__imageDataType = '';\n  public $image;\n  public $url;\n  public function setDescription( $description) {\n    $this->description = $description;\n  }\n  public function getDescription() {\n    return $this->description;\n  }\n  public function setImage(Google_ActivityObjectAttachmentsThumbnailsImage $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_ActivityObjectAttachmentsThumbnailsImage extends Google_Model {\n  public $height;\n  public $type;\n  public $url;\n  public $width;\n  public function setHeight( $height) {\n    $this->height = $height;\n  }\n  public function getHeight() {\n    return $this->height;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setWidth( $width) {\n    $this->width = $width;\n  }\n  public function getWidth() {\n    return $this->width;\n  }\n}\n\nclass Google_ActivityObjectPlusoners extends Google_Model {\n  public $selfLink;\n  public $totalItems;\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setTotalItems( $totalItems) {\n    $this->totalItems = $totalItems;\n  }\n  public function getTotalItems() {\n    return $this->totalItems;\n  }\n}\n\nclass Google_ActivityObjectReplies extends Google_Model {\n  public $selfLink;\n  public $totalItems;\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setTotalItems( $totalItems) {\n    $this->totalItems = $totalItems;\n  }\n  public function getTotalItems() {\n    return $this->totalItems;\n  }\n}\n\nclass Google_ActivityObjectResharers extends Google_Model {\n  public $selfLink;\n  public $totalItems;\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setTotalItems( $totalItems) {\n    $this->totalItems = $totalItems;\n  }\n  public function getTotalItems() {\n    return $this->totalItems;\n  }\n}\n\nclass Google_ActivityProvider extends Google_Model {\n  public $title;\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n}\n\nclass Google_Comment extends Google_Model {\n  protected $__actorType = 'Google_CommentActor';\n  protected $__actorDataType = '';\n  public $actor;\n  public $etag;\n  public $id;\n  protected $__inReplyToType = 'Google_CommentInReplyTo';\n  protected $__inReplyToDataType = 'array';\n  public $inReplyTo;\n  public $kind;\n  protected $__objectType = 'Google_CommentObject';\n  protected $__objectDataType = '';\n  public $object;\n  protected $__plusonersType = 'Google_CommentPlusoners';\n  protected $__plusonersDataType = '';\n  public $plusoners;\n  public $published;\n  public $selfLink;\n  public $updated;\n  public $verb;\n  public function setActor(Google_CommentActor $actor) {\n    $this->actor = $actor;\n  }\n  public function getActor() {\n    return $this->actor;\n  }\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setInReplyTo(/* array(Google_CommentInReplyTo) */ $inReplyTo) {\n    $this->assertIsArray($inReplyTo, 'Google_CommentInReplyTo', __METHOD__);\n    $this->inReplyTo = $inReplyTo;\n  }\n  public function getInReplyTo() {\n    return $this->inReplyTo;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setObject(Google_CommentObject $object) {\n    $this->object = $object;\n  }\n  public function getObject() {\n    return $this->object;\n  }\n  public function setPlusoners(Google_CommentPlusoners $plusoners) {\n    $this->plusoners = $plusoners;\n  }\n  public function getPlusoners() {\n    return $this->plusoners;\n  }\n  public function setPublished( $published) {\n    $this->published = $published;\n  }\n  public function getPublished() {\n    return $this->published;\n  }\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setUpdated( $updated) {\n    $this->updated = $updated;\n  }\n  public function getUpdated() {\n    return $this->updated;\n  }\n  public function setVerb( $verb) {\n    $this->verb = $verb;\n  }\n  public function getVerb() {\n    return $this->verb;\n  }\n}\n\nclass Google_CommentActor extends Google_Model {\n  public $displayName;\n  public $id;\n  protected $__imageType = 'Google_CommentActorImage';\n  protected $__imageDataType = '';\n  public $image;\n  public $url;\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setImage(Google_CommentActorImage $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_CommentActorImage extends Google_Model {\n  public $url;\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_CommentFeed extends Google_Model {\n  public $etag;\n  public $id;\n  protected $__itemsType = 'Google_Comment';\n  protected $__itemsDataType = 'array';\n  public $items;\n  public $kind;\n  public $nextLink;\n  public $nextPageToken;\n  public $title;\n  public $updated;\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setItems(/* array(Google_Comment) */ $items) {\n    $this->assertIsArray($items, 'Google_Comment', __METHOD__);\n    $this->items = $items;\n  }\n  public function getItems() {\n    return $this->items;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setNextLink( $nextLink) {\n    $this->nextLink = $nextLink;\n  }\n  public function getNextLink() {\n    return $this->nextLink;\n  }\n  public function setNextPageToken( $nextPageToken) {\n    $this->nextPageToken = $nextPageToken;\n  }\n  public function getNextPageToken() {\n    return $this->nextPageToken;\n  }\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n  public function setUpdated( $updated) {\n    $this->updated = $updated;\n  }\n  public function getUpdated() {\n    return $this->updated;\n  }\n}\n\nclass Google_CommentInReplyTo extends Google_Model {\n  public $id;\n  public $url;\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_CommentObject extends Google_Model {\n  public $content;\n  public $objectType;\n  public $originalContent;\n  public function setContent( $content) {\n    $this->content = $content;\n  }\n  public function getContent() {\n    return $this->content;\n  }\n  public function setObjectType( $objectType) {\n    $this->objectType = $objectType;\n  }\n  public function getObjectType() {\n    return $this->objectType;\n  }\n  public function setOriginalContent( $originalContent) {\n    $this->originalContent = $originalContent;\n  }\n  public function getOriginalContent() {\n    return $this->originalContent;\n  }\n}\n\nclass Google_CommentPlusoners extends Google_Model {\n  public $totalItems;\n  public function setTotalItems( $totalItems) {\n    $this->totalItems = $totalItems;\n  }\n  public function getTotalItems() {\n    return $this->totalItems;\n  }\n}\n\nclass Google_ItemScope extends Google_Model {\n  protected $__aboutType = 'Google_ItemScope';\n  protected $__aboutDataType = '';\n  public $about;\n  public $additionalName;\n  protected $__addressType = 'Google_ItemScope';\n  protected $__addressDataType = '';\n  public $address;\n  public $addressCountry;\n  public $addressLocality;\n  public $addressRegion;\n  protected $__associated_mediaType = 'Google_ItemScope';\n  protected $__associated_mediaDataType = 'array';\n  public $associated_media;\n  public $attendeeCount;\n  protected $__attendeesType = 'Google_ItemScope';\n  protected $__attendeesDataType = 'array';\n  public $attendees;\n  protected $__audioType = 'Google_ItemScope';\n  protected $__audioDataType = '';\n  public $audio;\n  protected $__authorType = 'Google_ItemScope';\n  protected $__authorDataType = 'array';\n  public $author;\n  public $bestRating;\n  public $birthDate;\n  protected $__byArtistType = 'Google_ItemScope';\n  protected $__byArtistDataType = '';\n  public $byArtist;\n  public $caption;\n  public $contentSize;\n  public $contentUrl;\n  protected $__contributorType = 'Google_ItemScope';\n  protected $__contributorDataType = 'array';\n  public $contributor;\n  public $dateCreated;\n  public $dateModified;\n  public $datePublished;\n  public $description;\n  public $duration;\n  public $embedUrl;\n  public $endDate;\n  public $familyName;\n  public $gender;\n  protected $__geoType = 'Google_ItemScope';\n  protected $__geoDataType = '';\n  public $geo;\n  public $givenName;\n  public $height;\n  public $id;\n  public $image;\n  protected $__inAlbumType = 'Google_ItemScope';\n  protected $__inAlbumDataType = '';\n  public $inAlbum;\n  public $kind;\n  public $latitude;\n  protected $__locationType = 'Google_ItemScope';\n  protected $__locationDataType = '';\n  public $location;\n  public $longitude;\n  public $name;\n  protected $__partOfTVSeriesType = 'Google_ItemScope';\n  protected $__partOfTVSeriesDataType = '';\n  public $partOfTVSeries;\n  protected $__performersType = 'Google_ItemScope';\n  protected $__performersDataType = 'array';\n  public $performers;\n  public $playerType;\n  public $postOfficeBoxNumber;\n  public $postalCode;\n  public $ratingValue;\n  protected $__reviewRatingType = 'Google_ItemScope';\n  protected $__reviewRatingDataType = '';\n  public $reviewRating;\n  public $startDate;\n  public $streetAddress;\n  public $text;\n  protected $__thumbnailType = 'Google_ItemScope';\n  protected $__thumbnailDataType = '';\n  public $thumbnail;\n  public $thumbnailUrl;\n  public $tickerSymbol;\n  public $type;\n  public $url;\n  public $width;\n  public $worstRating;\n  public function setAbout(Google_ItemScope $about) {\n    $this->about = $about;\n  }\n  public function getAbout() {\n    return $this->about;\n  }\n  public function setAdditionalName(/* array(Google_string) */ $additionalName) {\n    $this->assertIsArray($additionalName, 'Google_string', __METHOD__);\n    $this->additionalName = $additionalName;\n  }\n  public function getAdditionalName() {\n    return $this->additionalName;\n  }\n  public function setAddress(Google_ItemScope $address) {\n    $this->address = $address;\n  }\n  public function getAddress() {\n    return $this->address;\n  }\n  public function setAddressCountry( $addressCountry) {\n    $this->addressCountry = $addressCountry;\n  }\n  public function getAddressCountry() {\n    return $this->addressCountry;\n  }\n  public function setAddressLocality( $addressLocality) {\n    $this->addressLocality = $addressLocality;\n  }\n  public function getAddressLocality() {\n    return $this->addressLocality;\n  }\n  public function setAddressRegion( $addressRegion) {\n    $this->addressRegion = $addressRegion;\n  }\n  public function getAddressRegion() {\n    return $this->addressRegion;\n  }\n  public function setAssociated_media(/* array(Google_ItemScope) */ $associated_media) {\n    $this->assertIsArray($associated_media, 'Google_ItemScope', __METHOD__);\n    $this->associated_media = $associated_media;\n  }\n  public function getAssociated_media() {\n    return $this->associated_media;\n  }\n  public function setAttendeeCount( $attendeeCount) {\n    $this->attendeeCount = $attendeeCount;\n  }\n  public function getAttendeeCount() {\n    return $this->attendeeCount;\n  }\n  public function setAttendees(/* array(Google_ItemScope) */ $attendees) {\n    $this->assertIsArray($attendees, 'Google_ItemScope', __METHOD__);\n    $this->attendees = $attendees;\n  }\n  public function getAttendees() {\n    return $this->attendees;\n  }\n  public function setAudio(Google_ItemScope $audio) {\n    $this->audio = $audio;\n  }\n  public function getAudio() {\n    return $this->audio;\n  }\n  public function setAuthor(/* array(Google_ItemScope) */ $author) {\n    $this->assertIsArray($author, 'Google_ItemScope', __METHOD__);\n    $this->author = $author;\n  }\n  public function getAuthor() {\n    return $this->author;\n  }\n  public function setBestRating( $bestRating) {\n    $this->bestRating = $bestRating;\n  }\n  public function getBestRating() {\n    return $this->bestRating;\n  }\n  public function setBirthDate( $birthDate) {\n    $this->birthDate = $birthDate;\n  }\n  public function getBirthDate() {\n    return $this->birthDate;\n  }\n  public function setByArtist(Google_ItemScope $byArtist) {\n    $this->byArtist = $byArtist;\n  }\n  public function getByArtist() {\n    return $this->byArtist;\n  }\n  public function setCaption( $caption) {\n    $this->caption = $caption;\n  }\n  public function getCaption() {\n    return $this->caption;\n  }\n  public function setContentSize( $contentSize) {\n    $this->contentSize = $contentSize;\n  }\n  public function getContentSize() {\n    return $this->contentSize;\n  }\n  public function setContentUrl( $contentUrl) {\n    $this->contentUrl = $contentUrl;\n  }\n  public function getContentUrl() {\n    return $this->contentUrl;\n  }\n  public function setContributor(/* array(Google_ItemScope) */ $contributor) {\n    $this->assertIsArray($contributor, 'Google_ItemScope', __METHOD__);\n    $this->contributor = $contributor;\n  }\n  public function getContributor() {\n    return $this->contributor;\n  }\n  public function setDateCreated( $dateCreated) {\n    $this->dateCreated = $dateCreated;\n  }\n  public function getDateCreated() {\n    return $this->dateCreated;\n  }\n  public function setDateModified( $dateModified) {\n    $this->dateModified = $dateModified;\n  }\n  public function getDateModified() {\n    return $this->dateModified;\n  }\n  public function setDatePublished( $datePublished) {\n    $this->datePublished = $datePublished;\n  }\n  public function getDatePublished() {\n    return $this->datePublished;\n  }\n  public function setDescription( $description) {\n    $this->description = $description;\n  }\n  public function getDescription() {\n    return $this->description;\n  }\n  public function setDuration( $duration) {\n    $this->duration = $duration;\n  }\n  public function getDuration() {\n    return $this->duration;\n  }\n  public function setEmbedUrl( $embedUrl) {\n    $this->embedUrl = $embedUrl;\n  }\n  public function getEmbedUrl() {\n    return $this->embedUrl;\n  }\n  public function setEndDate( $endDate) {\n    $this->endDate = $endDate;\n  }\n  public function getEndDate() {\n    return $this->endDate;\n  }\n  public function setFamilyName( $familyName) {\n    $this->familyName = $familyName;\n  }\n  public function getFamilyName() {\n    return $this->familyName;\n  }\n  public function setGender( $gender) {\n    $this->gender = $gender;\n  }\n  public function getGender() {\n    return $this->gender;\n  }\n  public function setGeo(Google_ItemScope $geo) {\n    $this->geo = $geo;\n  }\n  public function getGeo() {\n    return $this->geo;\n  }\n  public function setGivenName( $givenName) {\n    $this->givenName = $givenName;\n  }\n  public function getGivenName() {\n    return $this->givenName;\n  }\n  public function setHeight( $height) {\n    $this->height = $height;\n  }\n  public function getHeight() {\n    return $this->height;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setImage( $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setInAlbum(Google_ItemScope $inAlbum) {\n    $this->inAlbum = $inAlbum;\n  }\n  public function getInAlbum() {\n    return $this->inAlbum;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setLatitude( $latitude) {\n    $this->latitude = $latitude;\n  }\n  public function getLatitude() {\n    return $this->latitude;\n  }\n  public function setLocation(Google_ItemScope $location) {\n    $this->location = $location;\n  }\n  public function getLocation() {\n    return $this->location;\n  }\n  public function setLongitude( $longitude) {\n    $this->longitude = $longitude;\n  }\n  public function getLongitude() {\n    return $this->longitude;\n  }\n  public function setName( $name) {\n    $this->name = $name;\n  }\n  public function getName() {\n    return $this->name;\n  }\n  public function setPartOfTVSeries(Google_ItemScope $partOfTVSeries) {\n    $this->partOfTVSeries = $partOfTVSeries;\n  }\n  public function getPartOfTVSeries() {\n    return $this->partOfTVSeries;\n  }\n  public function setPerformers(/* array(Google_ItemScope) */ $performers) {\n    $this->assertIsArray($performers, 'Google_ItemScope', __METHOD__);\n    $this->performers = $performers;\n  }\n  public function getPerformers() {\n    return $this->performers;\n  }\n  public function setPlayerType( $playerType) {\n    $this->playerType = $playerType;\n  }\n  public function getPlayerType() {\n    return $this->playerType;\n  }\n  public function setPostOfficeBoxNumber( $postOfficeBoxNumber) {\n    $this->postOfficeBoxNumber = $postOfficeBoxNumber;\n  }\n  public function getPostOfficeBoxNumber() {\n    return $this->postOfficeBoxNumber;\n  }\n  public function setPostalCode( $postalCode) {\n    $this->postalCode = $postalCode;\n  }\n  public function getPostalCode() {\n    return $this->postalCode;\n  }\n  public function setRatingValue( $ratingValue) {\n    $this->ratingValue = $ratingValue;\n  }\n  public function getRatingValue() {\n    return $this->ratingValue;\n  }\n  public function setReviewRating(Google_ItemScope $reviewRating) {\n    $this->reviewRating = $reviewRating;\n  }\n  public function getReviewRating() {\n    return $this->reviewRating;\n  }\n  public function setStartDate( $startDate) {\n    $this->startDate = $startDate;\n  }\n  public function getStartDate() {\n    return $this->startDate;\n  }\n  public function setStreetAddress( $streetAddress) {\n    $this->streetAddress = $streetAddress;\n  }\n  public function getStreetAddress() {\n    return $this->streetAddress;\n  }\n  public function setText( $text) {\n    $this->text = $text;\n  }\n  public function getText() {\n    return $this->text;\n  }\n  public function setThumbnail(Google_ItemScope $thumbnail) {\n    $this->thumbnail = $thumbnail;\n  }\n  public function getThumbnail() {\n    return $this->thumbnail;\n  }\n  public function setThumbnailUrl( $thumbnailUrl) {\n    $this->thumbnailUrl = $thumbnailUrl;\n  }\n  public function getThumbnailUrl() {\n    return $this->thumbnailUrl;\n  }\n  public function setTickerSymbol( $tickerSymbol) {\n    $this->tickerSymbol = $tickerSymbol;\n  }\n  public function getTickerSymbol() {\n    return $this->tickerSymbol;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setWidth( $width) {\n    $this->width = $width;\n  }\n  public function getWidth() {\n    return $this->width;\n  }\n  public function setWorstRating( $worstRating) {\n    $this->worstRating = $worstRating;\n  }\n  public function getWorstRating() {\n    return $this->worstRating;\n  }\n}\n\nclass Google_Moment extends Google_Model {\n  public $id;\n  public $kind;\n  protected $__resultType = 'Google_ItemScope';\n  protected $__resultDataType = '';\n  public $result;\n  public $startDate;\n  protected $__targetType = 'Google_ItemScope';\n  protected $__targetDataType = '';\n  public $target;\n  public $type;\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setResult(Google_ItemScope $result) {\n    $this->result = $result;\n  }\n  public function getResult() {\n    return $this->result;\n  }\n  public function setStartDate( $startDate) {\n    $this->startDate = $startDate;\n  }\n  public function getStartDate() {\n    return $this->startDate;\n  }\n  public function setTarget(Google_ItemScope $target) {\n    $this->target = $target;\n  }\n  public function getTarget() {\n    return $this->target;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n}\n\nclass Google_MomentsFeed extends Google_Model {\n  public $etag;\n  protected $__itemsType = 'Google_Moment';\n  protected $__itemsDataType = 'array';\n  public $items;\n  public $kind;\n  public $nextLink;\n  public $nextPageToken;\n  public $selfLink;\n  public $title;\n  public $updated;\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setItems(/* array(Google_Moment) */ $items) {\n    $this->assertIsArray($items, 'Google_Moment', __METHOD__);\n    $this->items = $items;\n  }\n  public function getItems() {\n    return $this->items;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setNextLink( $nextLink) {\n    $this->nextLink = $nextLink;\n  }\n  public function getNextLink() {\n    return $this->nextLink;\n  }\n  public function setNextPageToken( $nextPageToken) {\n    $this->nextPageToken = $nextPageToken;\n  }\n  public function getNextPageToken() {\n    return $this->nextPageToken;\n  }\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n  public function setUpdated( $updated) {\n    $this->updated = $updated;\n  }\n  public function getUpdated() {\n    return $this->updated;\n  }\n}\n\nclass Google_PeopleFeed extends Google_Model {\n  public $etag;\n  protected $__itemsType = 'Google_Person';\n  protected $__itemsDataType = 'array';\n  public $items;\n  public $kind;\n  public $nextPageToken;\n  public $selfLink;\n  public $title;\n  public $totalItems;\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setItems(/* array(Google_Person) */ $items) {\n    $this->assertIsArray($items, 'Google_Person', __METHOD__);\n    $this->items = $items;\n  }\n  public function getItems() {\n    return $this->items;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setNextPageToken( $nextPageToken) {\n    $this->nextPageToken = $nextPageToken;\n  }\n  public function getNextPageToken() {\n    return $this->nextPageToken;\n  }\n  public function setSelfLink( $selfLink) {\n    $this->selfLink = $selfLink;\n  }\n  public function getSelfLink() {\n    return $this->selfLink;\n  }\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n  public function setTotalItems( $totalItems) {\n    $this->totalItems = $totalItems;\n  }\n  public function getTotalItems() {\n    return $this->totalItems;\n  }\n}\n\nclass Google_Person extends Google_Model {\n  public $aboutMe;\n  protected $__ageRangeType = 'Google_PersonAgeRange';\n  protected $__ageRangeDataType = '';\n  public $ageRange;\n  public $birthday;\n  public $braggingRights;\n  public $circledByCount;\n  protected $__coverType = 'Google_PersonCover';\n  protected $__coverDataType = '';\n  public $cover;\n  public $currentLocation;\n  public $displayName;\n  public $etag;\n  public $gender;\n  public $id;\n  protected $__imageType = 'Google_PersonImage';\n  protected $__imageDataType = '';\n  public $image;\n  public $isPlusUser;\n  public $kind;\n  public $language;\n  protected $__nameType = 'Google_PersonName';\n  protected $__nameDataType = '';\n  public $name;\n  public $nickname;\n  public $objectType;\n  protected $__organizationsType = 'Google_PersonOrganizations';\n  protected $__organizationsDataType = 'array';\n  public $organizations;\n  protected $__placesLivedType = 'Google_PersonPlacesLived';\n  protected $__placesLivedDataType = 'array';\n  public $placesLived;\n  public $plusOneCount;\n  public $relationshipStatus;\n  public $tagline;\n  public $url;\n  protected $__urlsType = 'Google_PersonUrls';\n  protected $__urlsDataType = 'array';\n  public $urls;\n  public $verified;\n  public function setAboutMe( $aboutMe) {\n    $this->aboutMe = $aboutMe;\n  }\n  public function getAboutMe() {\n    return $this->aboutMe;\n  }\n  public function setAgeRange(Google_PersonAgeRange $ageRange) {\n    $this->ageRange = $ageRange;\n  }\n  public function getAgeRange() {\n    return $this->ageRange;\n  }\n  public function setBirthday( $birthday) {\n    $this->birthday = $birthday;\n  }\n  public function getBirthday() {\n    return $this->birthday;\n  }\n  public function setBraggingRights( $braggingRights) {\n    $this->braggingRights = $braggingRights;\n  }\n  public function getBraggingRights() {\n    return $this->braggingRights;\n  }\n  public function setCircledByCount( $circledByCount) {\n    $this->circledByCount = $circledByCount;\n  }\n  public function getCircledByCount() {\n    return $this->circledByCount;\n  }\n  public function setCover(Google_PersonCover $cover) {\n    $this->cover = $cover;\n  }\n  public function getCover() {\n    return $this->cover;\n  }\n  public function setCurrentLocation( $currentLocation) {\n    $this->currentLocation = $currentLocation;\n  }\n  public function getCurrentLocation() {\n    return $this->currentLocation;\n  }\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setEtag( $etag) {\n    $this->etag = $etag;\n  }\n  public function getEtag() {\n    return $this->etag;\n  }\n  public function setGender( $gender) {\n    $this->gender = $gender;\n  }\n  public function getGender() {\n    return $this->gender;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setImage(Google_PersonImage $image) {\n    $this->image = $image;\n  }\n  public function getImage() {\n    return $this->image;\n  }\n  public function setIsPlusUser( $isPlusUser) {\n    $this->isPlusUser = $isPlusUser;\n  }\n  public function getIsPlusUser() {\n    return $this->isPlusUser;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setLanguage( $language) {\n    $this->language = $language;\n  }\n  public function getLanguage() {\n    return $this->language;\n  }\n  public function setName(Google_PersonName $name) {\n    $this->name = $name;\n  }\n  public function getName() {\n    return $this->name;\n  }\n  public function setNickname( $nickname) {\n    $this->nickname = $nickname;\n  }\n  public function getNickname() {\n    return $this->nickname;\n  }\n  public function setObjectType( $objectType) {\n    $this->objectType = $objectType;\n  }\n  public function getObjectType() {\n    return $this->objectType;\n  }\n  public function setOrganizations(/* array(Google_PersonOrganizations) */ $organizations) {\n    $this->assertIsArray($organizations, 'Google_PersonOrganizations', __METHOD__);\n    $this->organizations = $organizations;\n  }\n  public function getOrganizations() {\n    return $this->organizations;\n  }\n  public function setPlacesLived(/* array(Google_PersonPlacesLived) */ $placesLived) {\n    $this->assertIsArray($placesLived, 'Google_PersonPlacesLived', __METHOD__);\n    $this->placesLived = $placesLived;\n  }\n  public function getPlacesLived() {\n    return $this->placesLived;\n  }\n  public function setPlusOneCount( $plusOneCount) {\n    $this->plusOneCount = $plusOneCount;\n  }\n  public function getPlusOneCount() {\n    return $this->plusOneCount;\n  }\n  public function setRelationshipStatus( $relationshipStatus) {\n    $this->relationshipStatus = $relationshipStatus;\n  }\n  public function getRelationshipStatus() {\n    return $this->relationshipStatus;\n  }\n  public function setTagline( $tagline) {\n    $this->tagline = $tagline;\n  }\n  public function getTagline() {\n    return $this->tagline;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setUrls(/* array(Google_PersonUrls) */ $urls) {\n    $this->assertIsArray($urls, 'Google_PersonUrls', __METHOD__);\n    $this->urls = $urls;\n  }\n  public function getUrls() {\n    return $this->urls;\n  }\n  public function setVerified( $verified) {\n    $this->verified = $verified;\n  }\n  public function getVerified() {\n    return $this->verified;\n  }\n}\n\nclass Google_PersonAgeRange extends Google_Model {\n  public $max;\n  public $min;\n  public function setMax( $max) {\n    $this->max = $max;\n  }\n  public function getMax() {\n    return $this->max;\n  }\n  public function setMin( $min) {\n    $this->min = $min;\n  }\n  public function getMin() {\n    return $this->min;\n  }\n}\n\nclass Google_PersonCover extends Google_Model {\n  protected $__coverInfoType = 'Google_PersonCoverCoverInfo';\n  protected $__coverInfoDataType = '';\n  public $coverInfo;\n  protected $__coverPhotoType = 'Google_PersonCoverCoverPhoto';\n  protected $__coverPhotoDataType = '';\n  public $coverPhoto;\n  public $layout;\n  public function setCoverInfo(Google_PersonCoverCoverInfo $coverInfo) {\n    $this->coverInfo = $coverInfo;\n  }\n  public function getCoverInfo() {\n    return $this->coverInfo;\n  }\n  public function setCoverPhoto(Google_PersonCoverCoverPhoto $coverPhoto) {\n    $this->coverPhoto = $coverPhoto;\n  }\n  public function getCoverPhoto() {\n    return $this->coverPhoto;\n  }\n  public function setLayout( $layout) {\n    $this->layout = $layout;\n  }\n  public function getLayout() {\n    return $this->layout;\n  }\n}\n\nclass Google_PersonCoverCoverInfo extends Google_Model {\n  public $leftImageOffset;\n  public $topImageOffset;\n  public function setLeftImageOffset( $leftImageOffset) {\n    $this->leftImageOffset = $leftImageOffset;\n  }\n  public function getLeftImageOffset() {\n    return $this->leftImageOffset;\n  }\n  public function setTopImageOffset( $topImageOffset) {\n    $this->topImageOffset = $topImageOffset;\n  }\n  public function getTopImageOffset() {\n    return $this->topImageOffset;\n  }\n}\n\nclass Google_PersonCoverCoverPhoto extends Google_Model {\n  public $height;\n  public $url;\n  public $width;\n  public function setHeight( $height) {\n    $this->height = $height;\n  }\n  public function getHeight() {\n    return $this->height;\n  }\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n  public function setWidth( $width) {\n    $this->width = $width;\n  }\n  public function getWidth() {\n    return $this->width;\n  }\n}\n\nclass Google_PersonImage extends Google_Model {\n  public $url;\n  public function setUrl( $url) {\n    $this->url = $url;\n  }\n  public function getUrl() {\n    return $this->url;\n  }\n}\n\nclass Google_PersonName extends Google_Model {\n  public $familyName;\n  public $formatted;\n  public $givenName;\n  public $honorificPrefix;\n  public $honorificSuffix;\n  public $middleName;\n  public function setFamilyName( $familyName) {\n    $this->familyName = $familyName;\n  }\n  public function getFamilyName() {\n    return $this->familyName;\n  }\n  public function setFormatted( $formatted) {\n    $this->formatted = $formatted;\n  }\n  public function getFormatted() {\n    return $this->formatted;\n  }\n  public function setGivenName( $givenName) {\n    $this->givenName = $givenName;\n  }\n  public function getGivenName() {\n    return $this->givenName;\n  }\n  public function setHonorificPrefix( $honorificPrefix) {\n    $this->honorificPrefix = $honorificPrefix;\n  }\n  public function getHonorificPrefix() {\n    return $this->honorificPrefix;\n  }\n  public function setHonorificSuffix( $honorificSuffix) {\n    $this->honorificSuffix = $honorificSuffix;\n  }\n  public function getHonorificSuffix() {\n    return $this->honorificSuffix;\n  }\n  public function setMiddleName( $middleName) {\n    $this->middleName = $middleName;\n  }\n  public function getMiddleName() {\n    return $this->middleName;\n  }\n}\n\nclass Google_PersonOrganizations extends Google_Model {\n  public $department;\n  public $description;\n  public $endDate;\n  public $location;\n  public $name;\n  public $primary;\n  public $startDate;\n  public $title;\n  public $type;\n  public function setDepartment( $department) {\n    $this->department = $department;\n  }\n  public function getDepartment() {\n    return $this->department;\n  }\n  public function setDescription( $description) {\n    $this->description = $description;\n  }\n  public function getDescription() {\n    return $this->description;\n  }\n  public function setEndDate( $endDate) {\n    $this->endDate = $endDate;\n  }\n  public function getEndDate() {\n    return $this->endDate;\n  }\n  public function setLocation( $location) {\n    $this->location = $location;\n  }\n  public function getLocation() {\n    return $this->location;\n  }\n  public function setName( $name) {\n    $this->name = $name;\n  }\n  public function getName() {\n    return $this->name;\n  }\n  public function setPrimary( $primary) {\n    $this->primary = $primary;\n  }\n  public function getPrimary() {\n    return $this->primary;\n  }\n  public function setStartDate( $startDate) {\n    $this->startDate = $startDate;\n  }\n  public function getStartDate() {\n    return $this->startDate;\n  }\n  public function setTitle( $title) {\n    $this->title = $title;\n  }\n  public function getTitle() {\n    return $this->title;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n}\n\nclass Google_PersonPlacesLived extends Google_Model {\n  public $primary;\n  public $value;\n  public function setPrimary( $primary) {\n    $this->primary = $primary;\n  }\n  public function getPrimary() {\n    return $this->primary;\n  }\n  public function setValue( $value) {\n    $this->value = $value;\n  }\n  public function getValue() {\n    return $this->value;\n  }\n}\n\nclass Google_PersonUrls extends Google_Model {\n  public $label;\n  public $type;\n  public $value;\n  public function setLabel( $label) {\n    $this->label = $label;\n  }\n  public function getLabel() {\n    return $this->label;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n  public function setValue( $value) {\n    $this->value = $value;\n  }\n  public function getValue() {\n    return $this->value;\n  }\n}\n\nclass Google_Place extends Google_Model {\n  protected $__addressType = 'Google_PlaceAddress';\n  protected $__addressDataType = '';\n  public $address;\n  public $displayName;\n  public $kind;\n  protected $__positionType = 'Google_PlacePosition';\n  protected $__positionDataType = '';\n  public $position;\n  public function setAddress(Google_PlaceAddress $address) {\n    $this->address = $address;\n  }\n  public function getAddress() {\n    return $this->address;\n  }\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setKind( $kind) {\n    $this->kind = $kind;\n  }\n  public function getKind() {\n    return $this->kind;\n  }\n  public function setPosition(Google_PlacePosition $position) {\n    $this->position = $position;\n  }\n  public function getPosition() {\n    return $this->position;\n  }\n}\n\nclass Google_PlaceAddress extends Google_Model {\n  public $formatted;\n  public function setFormatted( $formatted) {\n    $this->formatted = $formatted;\n  }\n  public function getFormatted() {\n    return $this->formatted;\n  }\n}\n\nclass Google_PlacePosition extends Google_Model {\n  public $latitude;\n  public $longitude;\n  public function setLatitude( $latitude) {\n    $this->latitude = $latitude;\n  }\n  public function getLatitude() {\n    return $this->latitude;\n  }\n  public function setLongitude( $longitude) {\n    $this->longitude = $longitude;\n  }\n  public function getLongitude() {\n    return $this->longitude;\n  }\n}\n\nclass Google_PlusAclentryResource extends Google_Model {\n  public $displayName;\n  public $id;\n  public $type;\n  public function setDisplayName( $displayName) {\n    $this->displayName = $displayName;\n  }\n  public function getDisplayName() {\n    return $this->displayName;\n  }\n  public function setId( $id) {\n    $this->id = $id;\n  }\n  public function getId() {\n    return $this->id;\n  }\n  public function setType( $type) {\n    $this->type = $type;\n  }\n  public function getType() {\n    return $this->type;\n  }\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":76,"column":11},"end":{"row":76,"column":26}},"properties":{"type":"selection","autoscroll":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/google-api-php-client/src/contrib/Google_PlusService.php","digestWhenLastPersisted":"a2e9d822035fd9a33fe938fcf6cc3b64ddaa1371","preferredLineEnding":null,"nextMarkerId":4,"deserializer":"TextBuffer","version":5},{"id":"58b471eb91059732c63d6067e5d15ca4","text":"<?php\n/**\n * XML2Array: A class to convert XML to array in PHP\n * It returns the array which can be converted back to XML using the Array2XML script\n * It takes an XML string or a DOMDocument object as an input.\n *\n * See Array2XML: http://www.lalit.org/lab/convert-php-array-to-xml-with-attributes\n *\n * Author : Lalit Patel\n * Website: http://www.lalit.org/lab/convert-xml-to-array-in-php-xml2array\n * License: Apache License 2.0\n *          http://www.apache.org/licenses/LICENSE-2.0\n * Version: 0.1 (07 Dec 2011)\n * Version: 0.2 (04 Mar 2012)\n * \t\t\tFixed typo 'DomDocument' to 'DOMDocument'\n *\n * Usage:\n *       $array = XML2Array::createArray($xml);\n */\nnamespace swpg\\models;\nuse DOMDocument;\nclass XML2Array {\n\n    private static $xml = null;\n\tprivate static $encoding = 'UTF-8';\n\n    /**\n     * Initialize the root XML node [optional]\n     * @param $version\n     * @param $encoding\n     * @param $format_output\n     */\n    public static function init($version = '1.0', $encoding = 'UTF-8', $format_output = true) {\n        self::$xml = new DOMDocument($version, $encoding);\n        self::$xml->formatOutput = $format_output;\n\t\tself::$encoding = $encoding;\n    }\n\n    /**\n     * Convert an XML to Array\n     * @param string $node_name - name of the root node to be converted\n     * @param array $arr - aray to be converterd\n     * @return DOMDocument\n     */\n    public static function &createArray($input_xml) {\n        $xml = self::getXMLRoot();\n\t\tif(is_string($input_xml)) {\n\t\t\t$parsed = $xml->loadXML($input_xml);\n\t\t\tif(!$parsed) {\n\t\t\t\tthrow new Exception('[XML2Array] Error parsing the XML string.');\n\t\t\t}\n\t\t} else {\n\t\t\tif(get_class($input_xml) != 'DOMDocument') {\n\t\t\t\tthrow new Exception('[XML2Array] The input XML object should be of type: DOMDocument.');\n\t\t\t}\n\t\t\t$xml = self::$xml = $input_xml;\n\t\t}\n\t\t$array[$xml->documentElement->tagName] = self::convert($xml->documentElement);\n        self::$xml = null;    // clear the xml node in the class for 2nd time use.\n        return $array;\n    }\n\n    /**\n     * Convert an Array to XML\n     * @param mixed $node - XML as a string or as an object of DOMDocument\n     * @return mixed\n     */\n    private static function &convert($node) {\n\t\t$output = array();\n\n\t\tswitch ($node->nodeType) {\n\t\t\tcase XML_CDATA_SECTION_NODE:\n\t\t\t\t$output['@cdata'] = trim($node->textContent);\n\t\t\t\tbreak;\n\n\t\t\tcase XML_TEXT_NODE:\n\t\t\t\t$output = trim($node->textContent);\n\t\t\t\tbreak;\n\n\t\t\tcase XML_ELEMENT_NODE:\n\n\t\t\t\t// for each child node, call the covert function recursively\n\t\t\t\tfor ($i=0, $m=$node->childNodes->length; $i<$m; $i++) {\n\t\t\t\t\t$child = $node->childNodes->item($i);\n\t\t\t\t\t$v = self::convert($child);\n\t\t\t\t\tif(isset($child->tagName)) {\n\t\t\t\t\t\t$t = $child->tagName;\n\n\t\t\t\t\t\t// assume more nodes of same kind are coming\n\t\t\t\t\t\tif(!isset($output[$t])) {\n\t\t\t\t\t\t\t$output[$t] = array();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$output[$t][] = $v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//check if it is not an empty text node\n\t\t\t\t\t\tif($v !== '') {\n\t\t\t\t\t\t\t$output = $v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(is_array($output)) {\n\t\t\t\t\t// if only one node of its kind, assign it directly instead if array($value);\n\t\t\t\t\tforeach ($output as $t => $v) {\n\t\t\t\t\t\tif(is_array($v) && count($v)==1) {\n\t\t\t\t\t\t\t$output[$t] = $v[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(empty($output)) {\n\t\t\t\t\t\t//for empty nodes\n\t\t\t\t\t\t$output = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// loop through the attributes and collect them\n\t\t\t\tif($node->attributes->length) {\n\t\t\t\t\t$a = array();\n\t\t\t\t\tforeach($node->attributes as $attrName => $attrNode) {\n\t\t\t\t\t\t$a[$attrName] = (string) $attrNode->value;\n\t\t\t\t\t}\n\t\t\t\t\t// if its an leaf node, store the value in @value instead of directly storing it.\n\t\t\t\t\tif(!is_array($output)) {\n\t\t\t\t\t\t$output = array('@value' => $output);\n\t\t\t\t\t}\n\t\t\t\t\t$output['@attributes'] = $a;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn $output;\n    }\n\n    /*\n     * Get the root XML node, if there isn't one, create it.\n     */\n    private static function getXMLRoot(){\n        if(empty(self::$xml)) {\n            self::init();\n        }\n        return self::$xml;\n    }\n}","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":64,"column":74},"end":{"row":64,"column":74}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/core/slim_framework/SWPG/models/XML2Array.php","digestWhenLastPersisted":"9535ed110909864a0ebb21888c8cd8600cf1e9b8","preferredLineEnding":null,"nextMarkerId":146,"deserializer":"TextBuffer","version":5},{"id":"a240c006bee77d3e1fbe61deddf0921a","text":"<?php\n  /*\n * Env Settings\n */\n\nerror_reporting(false); \n\nswitch($_SERVER[\"SERVER_NAME\"]) {\n \n  case \"fr-s-swpg-dev-3.ncifcrf.gov\": \n  case \"dev3.ncifcrf.gov\": \n    $db_conn = array(\n      \"name\" => \"cptac_assays_esac\"\n      ,\"host\" => \"sqldb1.abcc.ncifcrf.gov\"\n      ,\"user\" => \"cptac_db1_admin\"\n      ,\"password\" => \"G7Ffz3VMtTFBD\"\n      ,\"die_on_connection_failure\" => true\n      ,\"connection_error_message\" => \"The system is currently not accessible.\"\n      ,\"email_on_connection_failure\" => true\n      ,\"admin_emails\" => \"swpgabcc@gmail.com\"\n    );\n    $google_analytics_key = false;\n    $google_analytics_key_sitename = false;\n  break; \n  case \"ares.esacinc.com\":\n    $db_conn = array(\n       \"name\" => \"cptac_assay\"\n      ,\"host\" => \"ares.esacinc.com\"\n      ,\"user\" => \"cptac_assay\"\n      ,\"password\" => \"Changeme\"\n      ,\"die_on_connection_failure\" => true\n      ,\"connection_error_message\" => \"The system is currently not accessible.\"\n      ,\"email_on_connection_failure\" => true\n      ,\"admin_emails\" => \"swpgabcc@gmail.com\"\n    );\n    $google_analytics_key = false;\n    $google_analytics_key_sitename = false;\n  break;\n\n  default:\n  die(\"System DB Error\");\n  break;\n}\n\n/**\n * Base Application Settings\n */\n\n$multipart_separator = '-----'.md5(time()).'-----';\n\n$panorama_paths = array(\n  \"server_raw\" => \"https://panoramaweb.org\"\n  ,\"server\" => \"https://panoramaweb.org/labkey\"\n  ,\"query_path\" => \"/query/CPTAC%20Assay%20Portal/\"\n  ,\"targetedms_query_path\" => \"/targetedms/CPTAC%20Assay%20Portal/\"\n  ,\"project_query_path\" => \"/project/CPTAC%20Assay%20Portal/\"\n);\n\n$swpg_global_settings = array(\n  \"site_name\" => \"CPTAC Assay Portal\"\n  ,\"superadmin_email_address\" => \"lossm@mail.nih.gov\"\n  ,\"force_ssl\" => ( ($_SERVER[\"SCRIPT_NAME\"] == '/assays/index.php') || ($_SERVER[\"REQUEST_URI\"] == '/') || ( stristr($_SERVER[\"REQUEST_URI\"], 'CPTAC') ) ) ? false : true\n  ,\"site_logo\" => \"/path/to/site/logo\"\n  ,\"core_type\" => $_SERVER[\"CORE_TYPE\"]\n  ,\"session_key\" => \"cptac_session_key\"\n  ,\"logout_url\" => \"/authenticate/logout\"\n  ,\"login_url\" => \"/authenticate\"\n  ,\"access_denied_url\" => \"/authenticate/access_denied\"\n  ,\"log_page_load\" => true\n  ,\"landing_page\" => \"/modules/\"\n  ,\"redirect_cookie_key\" => \"swpg_redirect\"\n  ,\"hide_public_site\" => true\n  ,\"google_analytics_key_new\" => $google_analytics_key\n  ,\"google_analytics_key_new_sitename\" => $google_analytics_key_sitename\n  ,\"module_icon_path\" => \"/modules/library/images/module_default_icon.png\"\n  ,\"db_connection\" => $db_conn\n  ,\"user_account_db_connection\" => $db_conn\n  ,\"db_connection_antibodies\" => false\n  ,\"core_templates\" => $_SERVER[\"PATH_TO_CORE\"] . \"slim_framework/SWPG/templates/swpg_bootstrap\"\n  ,\"menu_template_name\" => \"swpg_bootstrap_side_nav.html\"\n  ,\"layout_template_name\" => \"swpg_bootstrap_admin.html\"\n  ,\"site_templates\" => $_SERVER[\"DOCUMENT_ROOT\"] . \"/site/templates\"\n  ,\"default_site_module\" => $_SERVER[\"DOCUMENT_ROOT\"] . \"/site\"\n  ,\"site_footer\" => \"/assays/templates/footer.php\"\n  ,\"support_form_url\" => \"/support/\"\n  ,\"import_log_location\" => \"/assays_import/library/import_logs\"\n  // ,\"additional_header_links\" => array(\n  //  \"/faq\" => array(\n  //    \"text\" => \"FAQ\"\n  //  )\n  // )\n  ,\"current_user_roles_session_key\" => \"user_role_list\" //a list of all the roles a user is assigned to.  This does not take into account groups.  If a user is an admin for two groups, and an author for another, this will be ['admin','author'].  This will be used for displayed pages on the side nav\n  ,\"default_role_id\" => 5 //when a user logs in for the first time, the default role they will be given is this\n  //make sure that this is associative, so when module includes are merged, it will cascade properly\n  ,\"js_includes\" => array(\n    'admin_js' => '/site/library/js/javascript.js'\n  )\n  ,\"css_includes\" => array(\n  )\n  ,\"server_name\" => $_SERVER[\"SERVER_NAME\"]\n  ,\"request_uri\" => $_SERVER[\"REQUEST_URI\"]\n  ,\"upload_directory\"=> $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/sop_files/\"\n  ,\"sop_file_upload_directory\" => $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/sop_files/\"\n  // Google Oauth Keys\n  ,\"google_client_id\" => \"[google_client_id HERE]\"\n  ,\"google_client_secret\" => \"[google_client_secret HERE]\"\n\n  // For importing data from UniProt\n  ,\"uniprot_regions_array\" => array(\n    'topological domain'\n    ,'transmembrane region'\n    ,'intramembrane region'\n    ,'domain'\n    ,'repeat'\n    ,'calcium binding'\n    ,'zinc finger'\n    ,'dna binding'\n    ,'nucleotide phosphate-binding region'\n    ,'region of interest'\n    ,'coiled coil'\n    ,'motif'\n    ,'compositional bias'\n  )\n  ,\"files_directory\"=> \"/assays/library/images/\"\n  ,\"panorama_images_storage_path\"=> $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/panorama_test/\"\n  ,\"panorama_images_path\"=> \"/swpg_files/cptac/panorama_test/\"\n  ,\"sop_files_path\" => $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/sop_files/\"\n  ,\"database_backup_path\" => $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/database_backups/\"\n  ,\"temp_directory_path\" => $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/temp/\"\n  ,\"temp_directory_path_via_http\" => $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/temp/\"\n  ,\"disqus_shortname\" => ($_SERVER[\"SERVER_NAME\"] == 'assaysdev.cancer.gov') ? 'cptacdevswpg' : 'cptacswpg'\n  // Panorama / Labkey settings.\n  ,\"labkey_config\" => array(\n    \"email\" => \"lossm@mail.nih.gov\"\n    ,\"password\" => \"swpgtrident\"\n    ,\"server_raw\" => $panorama_paths[\"server_raw\"]\n    ,\"server\" => $panorama_paths[\"server\"]\n    ,\"query_endpoint_live\" => $panorama_paths[\"server\"].$panorama_paths[\"query_path\"]\n    ,\"targetedms_query_path\" => $panorama_paths[\"server\"].$panorama_paths[\"targetedms_query_path\"]\n    ,\"project_endpoint_live\" => $panorama_paths[\"server\"].$panorama_paths[\"project_query_path\"]\n  )\n  // Panorama Import error report email recipients.\n  ,\"panorama_errors_email_recipients_ids\" => array(\n     \"1\" // Michael Loss\n    //,\"65169\" // Jeffrey Whiteaker\n  )\n  ,\"google_analytics_config\" => array(\n    \"id\" => \"ga:78611517\"\n    ,\"path_to_key_file\" => $_SERVER['DOCUMENT_ROOT'].\"/swpg_files/cptac/ga_key_file/74f850cf5d875f69aa9732e5b11acf7e58bfd9be-privatekey.p12\"\n    ,\"email_address\" => \"685467335384-goaoe9n23ufd0l3u1tpbsbtm2ahjmmhv@developer.gserviceaccount.com\"\n    ,\"client_id\" => \"685467335384-g4g9sfr6ij8btag15tkdigu67u9jg5rs.apps.googleusercontent.com\"\n    ,\"start_date\" => \"2013-11-01\"\n    ,\"end_date\" => date('Y-m-d') // Today\n  )\n  ,\"uniprot_protein_api_url\" => \"http://www.uniprot.org/uniprot/\"\n  ,\"entrez_api_url\" => \"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/\"\n  ,\"panorama_url\" => \"https://daily.panoramaweb.org/\"\n  ,\"biodbnet_api_url\" => \"http://biodbnet.abcc.ncifcrf.gov/webServices/rest.php/biodbnetRestApi.json\"\n  ,\"linkout_assays_ftp\" => array(\n      \"host\" => \"ftp-private.ncbi.nlm.nih.gov\"\n    , \"username\" => \"assaysnci\"\n    , \"password\" => \"dbs55GaQ\"\n    , \"linkout_provider_id\" => \"8855\"\n    , \"target_url\" => \"https://assays.cancer.gov\"\n  )\n  ,\"linkout_antibodies_ftp\" => array(\n      \"host\" => \"ftp-private.ncbi.nlm.nih.gov\"\n    , \"username\" => \"antibodynci\"\n    , \"password\" => \"sn79aRuf\"\n    , \"linkout_provider_id\" => \"8467\"\n    , \"target_url\" => \"http://antibodies.cancer.gov\"\n  )\n  /**** role based PERMISSIONS *****/\n  ,\"role_permissions\" => array(\n    //groups related permissions\n    \"group\" => array(\n      \"browse_access\" => array(4)\n      ,\"manage_access\" => array(4)\n    )\n    //user account related permissions\n    ,\"user_account\" => array(\n      \"browse_access\" => array(3,4)\n      ,\"manage_access\" => array(3,4)\n      ,\"delete\" => array(4)\n      ,\"modify_own_account\" => array(4)\n      ,\"assign_to_any_group\" => array(4)\n    )\n    //support related permissions\n    ,\"support\" => array(\n      \"browse_access\" => array(3,4)\n      ,\"manage_access\" => array(3,4)\n      ,\"settings_access\" => array(3,4)\n    )\n    // Assay Approval permissions\n    ,\"assay_approval\" => array(\n      \"manage_access\" => array(1,4)\n    )\n    // Assay Preview permissions\n    ,\"assay_preview\" => array(\n      \"browse_access\" => array(1,2,4,6)\n    )\n    // Assay Import permissions\n    ,\"import\" => array(\n      \"submit_access\" => array(1,2,4)\n    )\n    // Tutorials\n    ,\"tutorials\" => array(\n       \"access_tutorials\" => array(1,2,3,4,5)\n    )\n  )\n  // Email template parts\n  ,\"message_parts\" => array(\n    'headers' => 'MIME-Version: 1.0' . \"\\r\\n\" . 'Content-type: text/html; charset=iso-8859-1' . \"\\r\\n\",\n    // 'multipart_separator' => $multipart_separator,\n    // 'headers' => 'Content-type: multipart/alternative; boundary=\"'.$multipart_separator.'\"' . \"\\r\\n\"\n    // . $multipart_separator . \"\\r\\n\" . 'Content-Type: text/html; charset=iso-8859-1;' . \"\\r\\n\" . 'Content-Transfer-Encoding: 7bit' . \"\\r\\n\",\n    'body_header' => '\n    <html>\n    <head>\n      <title>New Comment</title>\n    <style>\n    #wrapper {\n      width: 100%;\n    }\n    body {\n      background-color: #FFFFFF;\n      color: #444444;\n      font: 12px/1.7em \"Open Sans\",\"trebuchet ms\",arial,sans-serif;\n    }\n    hr {\n      margin: 20px 0;\n      border: 0;\n      border-top: 1px dotted #CCCCCC;\n      border-bottom: 1px dotted #ffffff;\n    }\n    #content {\n      background-color: #FFFFFF;\n      margin-left: 20px;\n      margin-right: 20px;\n      padding: 0 16px 16px 16px;\n      position: relative;\n      top: 10px;\n      width: auto;\n      z-index: 15;\n    }\n    #contentHeader {\n      border-bottom: 1px dotted #CCCCCC;\n      margin-bottom: 10px;\n      padding: 20px 0 20px 0;\n      position: relative;\n      width: auto;\n    }\n    #contentHeader h1 {\n      color: #333333;\n      font-size: 28px;\n      font-weight: normal;\n      line-height: 34px;\n      position: relative;\n      top: 20px;\n    }\n    .container:after {\n      clear: both;\n    }\n    .container:after {\n      content: \"\";\n      display: table;\n    }\n    .container {\n      margin: 0 auto;\n      position: relative;\n      width: 100%;\n    }\n    .container p {\n      font-size: 1.2em;\n    }\n    .container .grid-24 {\n      width: auto;\n    }\n    .container [class^=\"grid-\"] {\n      margin-bottom: 2em;\n      margin-left: 20px;\n      margin-right: 20px;\n    }\n    #logo {\n      clear: both;\n      width: 111px;\n      height: 101px;\n      margin: 0 0 20px 0;\n    }\n    .view-post {\n      font-size: 1.2em;\n    }\n    #footer {\n      clear: both;\n      background-color: #FFFFFF;\n      border-top: 1px dotted #CCCCCC;\n      color: #999999;\n      padding: 12px 0 0 0;\n      text-align: center;\n      width: auto;\n    }\n    #footer p {\n      font-size: 1em;\n    }\n    </style>\n    </head>\n    <body>\n      <div id=\"wrapper\">\n        <div id=\"content\">\n          <div id=\"contentHeader\">\n            <div id=\"logo\">\n              <a href=\"http://'.$_SERVER[\"SERVER_NAME\"].'/\"><img src=\"http://assays.cancer.gov/site/library/images/CPTAC_certified_seal_101x101.gif\" width=\"101\" height=\"101\" alt=\"CPTAC Qualified Assay seal\"></a>\n            </div>\n    ',\n    'body_connector' => '\n            </div>\n            <div class=\"container\">\n              <div class=\"grid-24\">\n    ',\n    'body_footer' => '\n            </div>\n            <div id=\"footer\">\n              <p><em>This is an operational email from the CPTAC Assay Portal sent by the <a href=\"http://'.$_SERVER[\"SERVER_NAME\"].'/\">CPTAC Assay Portal web server</a>. Please do not reply to this email.</em></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </body>\n    </html>\n    '\n  )\n);\n\nif (!function_exists('http_parse_headers'))\n{\n    function http_parse_headers($raw_headers)\n    {\n        $headers = array();\n        $key = '';\n\n        foreach(explode(\"\\n\", $raw_headers) as $i => $h)\n        {\n            $h = explode(':', $h, 2);\n\n            if (isset($h[1]))\n            {\n                if (!isset($headers[$h[0]]))\n                    $headers[$h[0]] = trim($h[1]);\n                elseif (is_array($headers[$h[0]]))\n                {\n                    $headers[$h[0]] = array_merge($headers[$h[0]], array(trim($h[1])));\n                }\n                else\n                {\n                    $headers[$h[0]] = array_merge(array($headers[$h[0]]), array(trim($h[1])));\n                }\n\n                $key = $h[0];\n            }\n            else\n            {\n                if (substr($h[0], 0, 1) == \"\\t\")\n                    $headers[$key] .= \"\\r\\n\\t\".trim($h[0]);\n                elseif (!$key)\n                    $headers[0] = trim($h[0]);\n            }\n        }\n\n        return $headers;\n    }\n}\n?>\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":123,"column":25},"end":{"row":123,"column":25}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/swpg_global_settings.php","digestWhenLastPersisted":"cc36e43af6e94ed05103e8d9abd762c9053a8052","preferredLineEnding":null,"nextMarkerId":5,"deserializer":"TextBuffer","version":5},{"id":"9266ccd76b2990192bef5b365720fd4d","text":"$(document).ready(function() {\n  // Add the dev_alert to the top, during the schema changes phase so it's clear ast to which database we're using.\n  var hostname = $(location).attr('host');\n  if(hostname != 'assays.cancer.gov') {\n    var dev_alert_div = $('<div />').attr('id','dev_alert').text('STAGING SERVER');\n    $('.navbar').append(dev_alert_div);\n  }\n});","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/js/admin.js","digestWhenLastPersisted":"1294e00e297bd8168f71ebd1a438532342a12423","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"f82ac86c6386ad27bb1f6a5086c46c42","text":"$(document).ready(function() {\n  // \n});","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/js/javascript.js","digestWhenLastPersisted":"3eb38e155d4bb9d790820cb9baa440c5fcc4f693","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"86a70ebeac8e77b62c47ddfe98d9816c","text":"/* General */\n\n.header_buttons{\n  float: right;\n  margin: -15px 10px 0 0;\n  width: 200px;\n}\n#advanced_search_link_wrapper{\n  width: 120px;\n}\nul li{\n  list-style-type: none; \n}\n.color-red {\n  color: red;\n}\n\n/* Form */\n\ninput[type=\"file\"] {\n  line-height: 0;\n  height: inherit;\n}\n.field-group{\n  clear: both;\n}\n\n/* Footer */\n\n#footer-links{\n  height: 45px;\n  clear: both;\n  margin-bottom: 0px;\n}\n#footer-links li{\n  float: right;\n  margin: 0 10px 0 10px;\n}\n#footer-links a{\n  color: white;\n}\n#footer-images{\n  clear: both;\n  height: 50px;\n}\n#footer-images li{\n  float: right;\n  margin: 0 50px 0 10px;\n}\n#contentHeader h1 {\n  width: 500px;\n}\n.footer-link {\n  display: inline-block;\n  margin: 10px;\n}\nfooter .row-fluid .span12 {\n  text-align: center;\n}\nfooter .row-fluid .span12 ul li {\n  display: inline-block;\n  margin: 0 10px;\n  list-style-type: none;\n}\nfooter .row-fluid .span12.margin-top-30 {\n  margin-top: 30px;\n}\n\n/* Dev Alert */\n\n#dev_alert {\n  position: absolute;\n  width: 100%;\n  height: 20px;\n  background-color: #F00;\n  color: #FFF;\n  text-align: center;\n  padding: 4px 0;\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/css/admin.css","digestWhenLastPersisted":"e7641eaf5d4331b81a6bae0f9b1a8ab10313e265","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"4869e055bd0f872afad703098baa5c3f","text":"<?php\n\n/* Write import log activity to a text file for monitoring import activity */\nfunction write_log($import_log_id = false,$message = false)\n{\n\t\n\tglobal $final_global_template_vars;\n\n\n\n\tif($import_log_id)\n\t{\n\n\t  $log_file_name = $import_log_id.'.txt';\n\t  $folder_path = $_SERVER['DOCUMENT_ROOT'].$final_global_template_vars['import_log_location'].'/'.date(\"Y-m-d\");\n\n\t  // does the folder already exist?\n\t  if(!is_dir($folder_path)) mkdir($folder_path);\n\t  // does the log already exist?\n\t  $log = fopen($folder_path.'/'.$log_file_name, \"a\") or die(\"Unable to open file!\");\n\t  \n\t  //chown($folder_path.'/'.$log_file_name, 'lossm');\n\t  chmod($folder_path.'/'.$log_file_name, 0777);\n\n\t  $log_entry = (date(\"Y-m-d g:i:sa\").' - '.$message.\"\\n\");\n\n\t  fwrite($log, $log_entry);\n\t  fclose($log);\n\t}\n}\n\n\n/* Write import log activity to a text file for monitoring import activity */\nfunction clear_log($import_log_id = false)\n{\n\tglobal $final_global_template_vars;\n\n\tif($import_log_id)\n\t{\n\n\t  $log_file_name = $import_log_id.'.txt';\n\t  $folder_path = $_SERVER['DOCUMENT_ROOT'].$final_global_template_vars['import_log_location'].'/'.date(\"Y-m-d\");\n\n\t  if(!is_dir($folder_path)) mkdir($folder_path);\n\n\t  // if file already exists, archive it\n\t  if(is_file($folder_path.'/'.$log_file_name))\n\t  {\n\t  \t// rename the file adding a timestamp\n\t  \t$new_file_name = date(\"YmdHis\").'_'.$import_log_id.'.txt';\t\n\t  \tcopy($folder_path.'/'.$log_file_name, $folder_path.'/'.$new_file_name);\n\t  \tchmod($folder_path.'/'.$new_file_name, 0777);\n\n\t  \t// delete old\n\t  \tunlink($folder_path.'/'.$log_file_name);\n\n\t  }\n\n\t \n\n\t  // create new log file\n\t  $log = fopen($folder_path.'/'.$log_file_name, \"w\") or die(\"Unable to open file!\");\n\t  chmod($folder_path.'/'.$log_file_name, 0777);\n\n\t  fwrite($log,'');\n\t  fclose($log);\n\t}\n}\n\n\n?>","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/functions/functions.php","digestWhenLastPersisted":"5ac1d9233d85d0b6602aa8a1a0d872eab8e59014","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"8a361f9d232dc061b8cabd503f5574f9","text":"{% extends layout_template_name %}\n{% block meta_tags %}\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"title\" content=\"The CPTAC Assay Portal\">\n  <meta name=\"description\" content=\"A community web-based repository for well-characterized quantitative targeted proteomics assays.\">\n  <meta name=\"keywords\" content=\"cancer, assay, protein, gene, peptide, sequence, characterized, tumor, normal tissue, biospecimens, genomic, proteomic, data, analysis, discovery, biomarker, testing, verification, uniprot, panorama, entrez\">\n  <meta name=\"author\" content=\"ABCC's Scientific Web Programming Group, Frederick National Laboratory for Cancer Research (FNLCR)\">\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n{% endblock %}\n{% block styles_head %}\n  {{ parent() }}\n  <link href=\"//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css\" rel=\"stylesheet\">\n  <link href=\"/{{ core_type }}/javascripts/DataTables-SWPG/css/bootstrap_datatables.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"/{{ core_type }}/javascripts/DataTables-1.9.0/extras/ColVis/media/css/ColVis.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"/site/library/css/styles.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"{{ path_to_this_module }}/library/css/jquery.tagit.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"//cdnjs.cloudflare.com/ajax/libs/chosen/1.0/chosen.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"/assays/library/css/styles.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"//cdnjs.cloudflare.com/ajax/libs/bootstrap-tour/0.7.3/css/bootstrap-tour.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"{{ path_to_this_module }}/library/js/TableTools-2.1.4/media/css/TableTools.css\" rel=\"stylesheet\" type=\"text/css\" />\n{% endblock %}\n{% block content %}\n\n{% include 'secondary_navigation.php' %}\n\n<div id=\"genSlotMainNav\">\n  {% include 'top_navigation.php' %}\n</div>\n<div class=\"row-outer\">\n\n  <div class=\"contentid slot-item only-SI pull-left\">\n    <h1>Assay Portal</h1>\n  </div>\n  <div class=\"cptc-certified-logo pull-left\">\n    <img src=\"/cms/wp-content/uploads/2013/09/CPTAC_logo_101x101.gif\" width=\"101\" height=\"101\" alt=\"CPTAC logo\">\n  </div>\n  <div class=\"page-title\">\n  </div>\n  <div class=\"row-fluid\" style=\"clear:both;\">\n    {% if flash['success'] %}\n      <div class=\"alert alert-success\">\n        {{ flash['success'] }}\n      </div>\n    {% endif %}\n\n    {% for single_datatable in datatables %}\n\n  <div id=\"sidebar_nav\" class=\"span2\">\n    <h4>Search the Assay Database by:</h4>\n    <a href=\"javascript:void(0);\" id=\"clear_all\"><i class=\"icon-remove\"></i> Clear All Filters</a> \n    <div id=\"kegg_filter\" class=\"well sidebar-nav\">\n      \n      <ul class=\"nav nav-list\">\n\n        {# -------------------------\n        <li class=\"nav-header\">Gene Ontology</li>\n        <li>\n          <select class=\"multiselect single_sidebar_filter\" data-filter_handle=\"gene_ontology_filter\" multiple=\"multiple\" id=\"select_gene_ontology\">\n          {% for single_gene_ontology in gene_ontology %}\n            <option value=\"{{ single_gene_ontology.gene_ontology_id }}\">{{ single_gene_ontology.name }}</option>\n          {% endfor %}\n          </select>\n        </li>\n        <li><hr></li>\n        ------------------------- #}\n\n        <li class=\"nav-header\">KEGG Pathways</li>\n        <li>\n          <select id=\"kegg_select\" data-placeholder=\"Select\" multiple class=\"chosen-select\" style=\"width:130px;\">\n            {% for single_kegg_data in kegg_data %}\n\n              {% set parent_class = '' %}\n              {% set disabled = '' %}\n              {% if single_kegg_data.indent == '--' %}\n                {% set parent_class = ' class=parent' %}\n                {% set disabled = ' disabled' %}\n              {% endif %}\n              {% if single_kegg_data.indent == '' %}\n                {% set parent_class = ' class=parent' %}\n                {% set disabled = ' disabled' %}\n              {% endif %}\n\n              <option value=\"{{ single_kegg_data.kegg_id }}\"{{ parent_class }}{{ disabled }}>{{ single_kegg_data.indent }}{{ single_kegg_data.name }}</option>\n            {% endfor %}\n\n          </select>\n        </li>\n        <li class=\"muted\">Data Source: <a href=\"http://www.genome.jp/kegg/pathway.html\" target=\"_blank\">KEGG</a></li>\n      </ul>\n    </div>\n\n    <div id=\"cromosome_filter\" class=\"well sidebar-nav\">\n      <ul class=\"nav nav-list\">\n        <li class=\"nav-header\">Find assays to proteins encoded in a specific chromosomal region</li>\n        <li class=\"nav-header\">Chromosome Number</li>\n        <li>\n          <select class=\"multiselect single_sidebar_filter\" data-filter_handle=\"cromosome_filter\" multiple=\"multiple\" id=\"select_cromosome\">\n             <!-- <option value=\"0\">None</option> -->\n            {% for single_chromosome_number in chromosome_numbers %}\n              <option value=\"{{ single_chromosome_number }}\">{{ single_chromosome_number }}</option>\n            {% endfor %}\n          </select>\n          <i class=\"icon-question-sign\" title=\"e.g. 1-22\"></i>\n        </li>\n\n        <li class=\"nav-header\">Chromosomal Location</li>\n        <li>\n          <input type=\"text\" class=\"single_sidebar_filter select_cromosomal_location\" data-filter_handle=\"cromosomal_location_start_filter\" placeholder=\"Start\" id=\"cromosomal_location_start\">\n          <i class=\"icon-question-sign\" title=\"e.g. 8768444\"></i>\n        </li>\n        <li>\n          <input type=\"text\" class=\"single_sidebar_filter select_cromosomal_location\" data-filter_handle=\"cromosomal_location_stop_filter\" placeholder=\"Stop\" id=\"cromosomal_location_stop\">\n          <i class=\"icon-question-sign\" title=\"e.g. 8878432\"></i>\n        </li>\n        <li class=\"muted\">Data Source: CPTAC Assay Database</li>\n      </ul>\n    </div>\n\n    <div id=\"protein_interaction_filter\" class=\"well sidebar-nav\">\n      <ul class=\"nav nav-list\">\n        <li class=\"nav-header\">Find assays to quantify proteins that interact with the following protein(s):</li>\n        <li>\n          <input data-filter_handle=\"protein_interactions_filter\" id=\"select_protein_interactions\" name=\"protein_interactions\">\n        </li>\n        <li class=\"muted\">Data Source: <a href=\"http://thebiogrid.org/\" target=\"_blank\">BioGRID</a></li>\n      </ul>\n    </div>\n\n    <div class=\"well sidebar-nav\">\n      <ul class=\"nav nav-list\">\n        <li class=\"nav-header\">Find assays that work in a particular species</li>\n        <li>\n          <select class=\"multiselect single_sidebar_filter\" data-filter_handle=\"species_filter\" multiple=\"multiple\" id=\"select_species\">\n          {% for single_protein_species in protein_species %}\n            <option value=\"{{ single_protein_species.protein_species_id }}\">{{ single_protein_species.protein_species_label }}</option>\n          {% endfor %}\n          </select>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"well sidebar-nav\">\n      <ul class=\"nav nav-list\">\n        <li class=\"nav-header\">Assay Type</li>\n        <li>\n          <select class=\"multiselect single_sidebar_filter\" data-filter_handle=\"assay_type_filter\" multiple=\"multiple\" id=\"select_assay_type\">\n          {% for single_assay_type in assay_types %}\n            <option value=\"{{ single_assay_type.assay_type }}\">{{ single_assay_type.assay_type }}</option>\n          {% endfor %}\n          </select>\n        </li>\n      </ul>\n    </div>\n\n    <div id=\"tour_button_container\" class=\"well sidebar-nav\">\n      <ul class=\"nav nav-list\">\n        <li class=\"nav-header\">Guided Tour</li>\n        <li>Need help? Take a guided tour.</li>\n        <li><button class=\"btn btn-inverse\"><i class=\"icon-hand-right\"></i> Start Tour</button></li>\n      </ul>\n    </div>\n\n  </div><!--/span-->\n\n      <div id=\"browse_table_wrapper\" class=\"span10\">\n        <table id=\"browse_table\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"table table-bordered\">\n          <thead>\n            <tr>\n              {% for key, field in single_datatable.fields %}\n                <th><div class=\"th_header_text\">{{ field.label }}</div>\n                  {% if field.filter %}\n                    <div class=\"filter_wrapper {% if field.filter_type == 'select' %} filter_wrapper_select {% endif %}\">\n                      {% if field.filter_type == 'select' %}\n                        <select name=\"{{ key }}_value\" class=\"filter_value\">\n                        <option value=\"\">Select..</option>\n                        {% for single_option in field.filter_type_options %}\n                          <option value=\"{{ single_option.reagent_types_id }}\">{{ single_option.label }}</option>\n                        {% endfor %}\n                      </select>\n                    {% else %}\n                      <input type=\"text\" name=\"{{ key }}_value\" class=\"filter_value\">\n                      {% endif %}\n                      <div class=\"filter_image\" data-data_type=\"{{ field.data_type }}\" id=\"{{ key }}\"></div>\n                      <input type=\"hidden\" class=\"comparison_value\" id=\"{{ key }}_filter_value\" value=\"{{ field.comparison_default }}\">\n                    </div>\n                {% endif %}\n              </th>\n                {% endfor %}\n            </tr>\n          </thead>\n        </table>\n      </div>\n    {% endfor %}\n  </div>\n</div>\n{% endblock %}\n{% block js_bottom %}\n  {{ parent() }}\n  <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/datatables/1.9.4/jquery.dataTables.min.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/DataTables-SWPG/js/datatables_bootstrap.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/DataTables-SWPG/js/context_menu.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/DataTables-1.9.0/extras/ColVis-1.0.8/media/js/ColVis.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/DataTables-SWPG/js/fnGetTds.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/DataTables-SWPG/js/fnFilterClear.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/jquery-cookie/jquery.cookie.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/slim_framework/plugins/bootstrap-multiselect/bootstrap-multiselect/js/bootstrap-multiselect.js\"></script>\n  <script type=\"text/javascript\" src=\"/{{ core_type }}/javascripts/DataTables-SWPG/js/jquery.dataTables.rowGrouping.js\"></script>\n  <script type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jqueryui/1.8.12/jquery-ui.min.js\" charset=\"utf-8\"></script>\n  <script type=\"text/javascript\" src=\"{{ path_to_this_module }}/library/js/tag-it.js\"></script>\n  <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/chosen/1.0/chosen.jquery.min.js\"></script>\n  <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/bootstrap-tour/0.7.3/js/bootstrap-tour.min.js\"></script>\n  <script type=\"text/javascript\" src=\"{{ path_to_this_module }}/library/js/TableTools-2.1.4/media/js/TableTools.min.js\"></script>\n\n  <script type=\"text/javascript\">\n      $(document).ready(function() {\n\n        $('#show_side_nav').remove();\n\n        var datatables_data = JSON.parse('{{ datatables|json_encode|raw }}');\n\n        $.each(datatables_data, function(index, single_datatable){\n          var sortable_fields = single_datatable.fields;\n          var total_columns = new Array();\n          var hidden_columns = new Array();\n          var exclude_columns_for_hiding = new Array();\n\n          var user_updated_visible_columns = $.cookie(\"browse_table_column_cookie\");\n          if(typeof user_updated_visible_columns === \"undefined\" || user_updated_visible_columns === null){\n            user_updated_visible_columns = {};\n          }else{\n            user_updated_visible_columns = JSON.parse(user_updated_visible_columns);\n          }\n          var counter = 0;\n          $.each(sortable_fields, function(index, field_data){\n\n            total_columns.push( {\"mDataProp\":index} );\n            if(field_data.initially_hidden == true){\n              if(user_updated_visible_columns[counter] !== true){\n                hidden_columns.push(counter);\n              }\n            } else {\n              if(user_updated_visible_columns[counter] === false){\n                hidden_columns.push(counter);\n              }\n            }\n            if(field_data.show_column_toggle == false){\n              exclude_columns_for_hiding.push(counter);\n            }\n            counter++;\n\n          });\n\n          $('.filter_value, .filter_image').bind('click', function(event){\n            event.stopPropagation();\n          });\n\n          $('#browse_table th .filter_value').bind('keyup change', function(event){\n            page_datatable.fnDraw();\n          });\n\n            $('.filter_image').each(function() {\n              var filter_options = [\n              //{text: '> greater than', value: 'gt'}\n              //,{text: '>= (greater than OR equal to)', value: 'gt_or_eq'}\n              //,{text: '< less than', value: 'lt'}\n              //,{text: '<= (less than OR equal to)', value: 'lt_or_eq'}\n               {text: '= (equal to)', value: 'equals'}\n              ,{text: 'Contains', value: 'contains'}\n              ,{text: 'Does not contain', value: 'not_contain'}\n              ,{text: 'Starts with', value: 'start_with'}\n              ,{text: 'Ends With', value: 'end_with'}\n              ];\n              var column_data_type = $(this).data(\"data_type\");\n              switch(column_data_type) {\n                case \"text\":\n                  filter_options = [\n                  {text: '= (equal to)', value: 'equals'}\n                  ,{text: 'Contains', value: 'contains'}\n                  ,{text: 'Does not contain', value: 'not_contain'}\n                  ,{text: 'Starts with', value: 'start_with'}\n                  ,{text: 'Ends With', value: 'end_with'}\n                  ];\n                break;\n              }\n\n              $(this).dynamicContextMenu({\n                  id: this.id\n                  ,style:{\n                    containerCssClass: \"DynamicContextMenuContainer\",\n                    subLevelHolderItemCssClass: \"DynamicContextMenuSubLevelHolderItem\",\n                    itemIconCssClass: \"DynamicContextMenuItemIcon\"\n                  }\n                  ,items: filter_options\n                  ,openMode: \"click\"\n                  ,onItemClick: function (sender, item) {\n                    $('#'+sender._id+'_filter_value').attr('value', item.value);\n                    page_datatable.fnDraw();\n                  }\n                  ,waitTime: 1\n              });\n            });\n\n            var lastSequence;\n\n            var page_datatable = $('#' + single_datatable.dom_table_id).dataTable({\n\n              // Groups genes begins\n              \"fnDrawCallback\": function ( oSettings ) {\n                  var trs = $(\"#\" + single_datatable.dom_table_id + \" tbody tr\");\n                  $.each(trs, function(index, tr){\n                    var td = $(tr).find('td.group');\n                    if( td.length ) {\n                      $(td).addClass('no_row_click');\n                    }\n                  });\n              }\n              // Groups genes ends\n\n              // BEGIN - Comment-out if we switch back over to groupings\n              // ,\"aoColumnDefs\": [\n              //   { \"bVisible\": false, \"aTargets\": [ 0 ] }\n              // ]\n              // ,\"aaSortingFixed\": [[ 0, 'asc' ]]\n              // ,\"aaSorting\": [[ 1, 'asc' ]]\n              // ,\"sDom\": 'lfr<\"giveHeight\"t>ip'\n              // END - Comment-out if we switch back over to groupings\n\n              // Remember the user's settings\n              ,\"bStateSave\": true\n              //show processing throbber\n              ,\"bProcessing\": true\n              //move the info to the top instead of the bottom\n              //,\"sDom\":'C<\"clear\"><\"top\"flip>rt<\"bottom\"p<\"clear\">>'\n              ,\"sDom\": \"<'row'C><<'span4'f><'span4'i><'span4'l>><<'span3 datatables_bulk_actions'><'span3'r><'span5 pull-right'p>>t<'row'<'span6 pull-right'p>>\"\n              //all data management will be done on the server side\n              ,\"bServerSide\": true\n              //path to the file that is going to handle the queries\n              ,\"sAjaxSource\": \"{{ path_to_this_module }}/datatables_browse_assays\"\n              //,\"sAjaxSource\": single_datatable.path_to_datatables_controller\n              //method type\n              ,\"sServerMethod\": \"POST\"\n              //match the html table columns with the fields returned from the query\n              ,\"aoColumns\": total_columns\n              //THIS IS JUST FOR THE WIREFRAME - UNCOMMENT THE sServerMethod, sAjaxSource, aoColumns and bServerSide keys AND THE PATH TO DETAILS PAGE\n              // ,\"aaData\" : single_datatable.data\n              //values in the length dropdown\n              ,\"aLengthMenu\":[[10, 25, 50, 100, 1000000], [10, 25, 50, 100, \"All\"]]\n              //default length\n              ,\"iDisplayLength\": 50\n              //default sort\n              ,\"aaSorting\":[[1,\"asc\"]]\n              //needed for bootstrap\n              ,\"sWrapper\": \"dataTables_wrapper form-inline\"\n              ,\"sPaginationType\":\"bootstrap\"\n              ,\"bAutoWidth\": false\n              //set some widths\n              ,\"aoColumnDefs\":[\n                {\"sWidth\":\"50px\",\"aTargets\":[1]}\n                ,{\"bSortable\":false,\"aTargets\":[0]}\n                ,{\"bVisible\":false,\"aTargets\":hidden_columns}\n              ]\n              ,\"fnServerParams\": function ( aoData ) {\n\n                  var filter_array = $.map($(\"#\" + single_datatable.dom_table_id + \" th\"), function(e, i){\n                      var single_filter = {};\n                      single_filter.column = $(e).find('div.filter_image').attr('id');\n                      single_filter.value = $(e).find('.filter_value').val();\n                      single_filter.comparison = $(e).find('input.comparison_value').val();\n                      return single_filter;\n                  });\n                  var newObj = {name: \"column_filter\", value:JSON.stringify(filter_array)};\n                  aoData.push(newObj);\n\n                  // Multiselect values\n                  var sidebar_filter = {};\n                  $(\".single_sidebar_filter\").each(function(){\n                    if($(this).val()) {\n                      sidebar_filter[$(this).data(\"filter_handle\")] = $(this).val();\n                    }\n                  });\n                  // Protein interactions\n                  var protein_interactions_filter = [];\n                  var filter = {};\n                  $(\".tagit-label\").each(function(){\n                    if($(this).text()){\n                      protein_interactions_filter.push( $(this).text() );\n                    }\n                    sidebar_filter['protein_interactions_filter'] = protein_interactions_filter;\n                  });\n                  // KEGG Pathways\n                  var kegg_pathways_filter = [];\n                  kegg_pathways_filter.push( $(\"#kegg_select\").val() );\n                  sidebar_filter['kegg_pathways_filter'] = kegg_pathways_filter;\n\n                  var sidebar_filter_obj = {name: \"sidebar_filter\", value:JSON.stringify(sidebar_filter)};\n                  aoData.push(sidebar_filter_obj);\n\n              }\n              ,\"fnRowCallback\":function(nRow, aData, iDisplayIndex){\n                // Remove the peptide sequence \"repeats\"\n                if(lastSequence == aData.peptide_sequence) {\n                  $(this.fnGetTds(nRow)[2]).text('');\n                }\n                // Set the last sequence\n                lastSequence = aData.peptide_sequence;\n              }\n              ,\"oColVis\":{\n                \"fnLabel\":function(index, title, th){\n                  return $(th).find(\".th_header_text\").text();\n                }\n                ,\"aiExclude\" : exclude_columns_for_hiding\n                ,\"fnStateChange\" : function(iColumn, bVisible){\n                  var previous_values = $.cookie(\"browse_table_column_cookie\");\n                  if(typeof previous_values === \"undefined\" || previous_values === null) {\n                    previous_values = {};\n                  } else {\n                    previous_values = JSON.parse(previous_values);\n                  }\n                  previous_values[iColumn] = bVisible;\n                  $.cookie('browse_table_column_cookie', JSON.stringify(previous_values), { expires: 365 });\n                }\n              }\n\n            }).rowGrouping({\n              iGroupingColumnIndex: 1\n              ,bHideGroupingColumn: true\n              ,bExpandableGrouping: true\n            });\n\n\n            //send to details page when clicked\n            $('#' + single_datatable.dom_table_id + ' tbody').on('click','td',function(event) {\n                if(!$(this).hasClass(\"no_row_click\") && !$(event.target).is(\"a\") && !$(this).hasClass(\"dataTables_empty\")) {\n                  var id = $(this).closest(\"tr\").attr('id');\n                  window.location.href = single_datatable.path_to_details_page + 'CPTAC-' + id;\n                }\n            });\n        });\n\n        // Multiselects\n        $('.multiselect').multiselect({\n          buttonClass: 'btn',\n          buttonWidth: '100%',\n          buttonContainer: '<div class=\"btn-group\" />',\n          maxHeight: false,\n          buttonText: function(options) {\n            if (options.length == 0) {\n              return 'Include All <b class=\"caret\"></b>';\n            }\n            else if (options.length > 3) {\n              return options.length + ' selected  <b class=\"caret\"></b>';\n            }\n            else {\n              var selected = '';\n              options.each(function() {\n                selected += $(this).text() + ', ';\n              });\n              return '<span class=\"filter-button-text\">' + selected.substr(0, selected.length -2) + '</span> <b class=\"caret\"></b>';\n            }\n          }\n          ,onChange: function(element, checked) {\n            $('#browse_table').dataTable().fnDraw();\n          }\n        });\n\n        // Protein interactions\n        $(\"#select_protein_interactions\").tagit({\n          removeConfirmation: true,\n          maxLength: 6,\n          afterTagAdded: function(event, ui) {\n            $('#browse_table').dataTable().fnDraw();\n          },\n          afterTagRemoved: function(event, ui) {\n            $('#browse_table').dataTable().fnDraw();\n          }\n        });\n\n        $(\"#cromosomal_location_start, #cromosomal_location_stop\").on('keyup',function() {\n          $('#browse_table').dataTable().fnDraw();\n        });\n\n        $('.ui-autocomplete-input').after(' <i class=\"icon-question-sign\" title=\"Hit the return/enter key to enter each protein\"></i>');\n\n        // KEGG\n        $(\"#kegg_select\").chosen();\n        // Strip the leading indent dashed before displaying in the DOM\n        $('#kegg_select').on('change', function(evt, params) {\n          $(\".search-choice span\").each(function () {\n            var kegg_string = $(this).text();\n            var kegg_string_stripped = kegg_string.replace(/-+/, '');\n            $(this).text(kegg_string_stripped);\n            $('#browse_table').dataTable().fnDraw();\n          });\n        });\n\n        // Clear all filter selections\n        $('#clear_all').on('click', function() {\n          // KEGG pathways\n          $(\"#kegg_select\").val('').trigger(\"chosen:updated\");\n          // All multiselects\n          multiselect_deselectAll($(\"#select_cromosome, #select_species, #select_assay_type, #select_reagent_type\"), $(this));\n          // Protein interactions\n          $(\"#select_protein_interactions\").tagit(\"removeAll\");\n          // Chromosomal location\n          $('#cromosomal_location_start, #cromosomal_location_stop').val('');\n          // Clear the main search\n          $('#browse_table').dataTable().fnFilterClear();\n        });\n\n        // Download CSV button\n        var csv_datestamp = '{{ now|date(\"Y-m-d-H-i\") }}';\n        var oTable = $('#browse_table').dataTable();\n        var oTableTools = new TableTools( oTable, {\n          \"sSwfPath\": \"{{ path_to_this_module }}/library/js/TableTools-2.1.4/media/swf/copy_csv_xls_pdf.swf\"\n          ,\"aButtons\": [\n            {\n              \"sExtends\": \"csv\"\n              ,\"sButtonText\": \"Download CSV\"\n              ,\"sFileName\": \"CPTAC_Assays_export_\"+csv_datestamp+\".csv\"\n              ,\"sButtonClass\": \"ColVis_Button TableTools_Button ColVis_MasterButton custom_csv_button_styles\"\n            }\n            // ,{\n            //   \"sExtends\": \"copy\"\n            //   ,\"sButtonText\": \"Copy Table\"\n            // }\n          ]\n        });\n\n        $('#browse_table_wrapper').prepend( oTableTools.dom.container );\n\n        // Remove the onclick on table headers\n        $('#browse_table thead tr th').unbind('click');\n\n        // Modify the width of the pagination container\n        $('#browse_table_wrapper').find('div.span5').removeClass('span5').addClass('span12');\n\n        // Modify the width of the KEGG input\n        $('#kegg_select_chosen').removeAttr('style').attr('style','width:125px;');\n        $('#kegg_select_chosen ul li input').removeAttr('style').attr('style','width:125px;');\n\n        /* TOUR STUFF */\n        $('#tour_button_container').on('click', 'button', function() {\n          // Instance the tour\n          var tour = new Tour({\n            storage: false\n          });\n\n          // Add steps\n          tour.addSteps([\n            {\n              element: \"#kegg_filter\",\n              title: \"KEGG Pathways\",\n              content: \"Select one or more KEGG pathways from the menu. Each selected pathway is added above the menu as a removable item. To remove a selected pathway, click the 'x' in the upper right corner.\"\n            },\n            {\n              element: \"#cromosome_filter\",\n              title: \"Chromosomal Regions\",\n              content: \"Filter by chromosome numbers and specific chromosomal locations. Select and deselect cromosome numbers (1-22) from the menu. Enter chromosomal location values in the start and stop input fields.\"\n            },\n            {\n              element: \"#protein_interaction_filter\",\n              title: \"Protein Interactions\",\n              content: \"Enter a protein name and press enter. Multiple protein names are allowed. Each entered protein name is added above the menu as a removable item. To remove an entered protein name, click the 'x'.\"\n            },\n            {\n              element: \".ColVis\",\n              title: \"Show / hide columns\",\n              content: \"Toggle the visibility of table columns.\",\n              placement: \"left\"\n            },\n            {\n              element: \"#browse_table_length label select\",\n              title: \"Change Amount Viewable\",\n              content: \"Change the number of viewable records per page.\",\n              placement: \"left\"\n            },\n            {\n              element: \".dataTables_paginate\",\n              title: \"Navigate Pages\",\n              content: \"Navigate the paginated results.\",\n              placement: \"bottom\"\n            },\n            {\n              element: \"#browse_table_filter label input\",\n              title: \"Free Text Search\",\n              content: \"Search across all fields in the table, including hidden fields. Searchable fields include: Gene Symbol, Peptide Sequence, UniProt Accession ID, CPTAC ID, Modification Type, and Laboratory Name.\",\n              placement: \"top\"\n            },\n            {\n              element: \"#clear_all\",\n              title: \"Clear All Filters\",\n              content: \"Reset all filter settings, including the search field, and return the table view to the default state.\"\n            },\n            {\n              element: \"#browse_table tbody\",\n              title: \"View Records\",\n              content: \"Click on a row to navigate to the details page.\",\n              placement: \"top\"\n            }\n          ]);\n          // Initialize the tour\n          tour.init();\n          // Start the tour\n          tour.start();\n        });\n\n        // Tooltips\n        $(\".icon-question-sign\").tooltip();\n        $(\"#browse_table_wrapper .DTTT_container a\").attr('title',\"Download a CSV of all records displayed on this page. If all records are desired, select 'All' from the 'Show' dropdown menu below.\");\n        $(\"#browse_table_wrapper .DTTT_container a\").tooltip();\n\n    });\n\n    function multiselect_deselectAll($el) {\n      $('option', $el).each(function(element) {\n        $el.multiselect('deselect', $(this).val());\n      });\n    }\n  </script>\n{% endblock %}","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":511,"column":27},"end":{"row":511,"column":27}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/templates/browse_assays.php","digestWhenLastPersisted":"787db1176a768f0a1dde7c804a5cfc379caf7c14","preferredLineEnding":null,"nextMarkerId":5,"deserializer":"TextBuffer","version":5},{"id":"8f9d3ac62fad83b696cf0f3835e4e7ea","text":"h1 {\n  color: #262727;\n  font: 1.8em \"ITC Avant Garde\", \"avant garde\", \"Century Gothic\", Arial, Helvetica, sans-serif;\n  font-weight: normal;\n  line-height: 1.1em;\n  display: block;\n}\n\n.detail-page-header {\n  width: 50%;\n  float: left;\n}\n\n.assay-nav {\n  text-align: right;\n  margin-top: 12px;\n}\n\n.assay-nav-btn {\n  width: 98px;\n  text-align: center !important;\n}\n\n\n.navbar-fixed-top .navbar-inner .container-fluid {\n  margin: 0 auto;\n  width: 984px;\n}\n\n.container-fluid.container-outer {\n  margin: 0 auto;\n  width: 984px;\n}\n\n.row-outer-details .row-fluid .overview-details {\n  min-height: 373px;\n}\n\n.row-outer-details .row-fluid .overview-details {\n  font-size: 1.1em;\n}\n\n.row-fluid #sidebar_nav.span2 {\n  width: 17%;\n}\n\n#browse_table_wrapper.span10 {\n  width: 80.5%\n}\n\n.dataTables_processing {\n  background-image: url(\"/site/library/images/indicator-big.gif\");\n  background-repeat: no-repeat;\n  height: 32px;\n  padding-left: 40px;\n  padding-top: 6px;\n  position: absolute;\n  top: 390px;\n  left: 552px;\n}\n\n/*.background-color-white {\n  background-color: #FFFFFF !important;\n}\n\ntr.background-color-white:hover {\n  background-color: #f5f5f5;\n}\n*/\n\n.horizontal-list {\n  margin-left: 8px;\n}\n\npre {\n  font-family: monospace;\n  font-size: small;\n  white-space: pre;\n  clear: both;\n}\n\npre.sequence {\n  background-color: #FFFFFF;\n  border: none;\n  text-align: left;\n}\n\ntable.sequence {\n  font-family: monospace;\n\tfont-size: 10px;\n  background-color: white;\n}\n\ntable.sequence td span.peptide_highlight,\n.red {\n\tcolor: red;\n}\n\ntable.sequence td span.peptide_highlight:hover {\n\tcursor: pointer;\n}\n\ntable.sequence td.sequence_char_count {\n\ttext-align: right;\n\tfont-size: 8pt;\n}\n\ntable.sequence td {\n\theight: 10px;\n\tpadding: 0 6px;\n  background-color: #fff;\n}\n\n.clear_bottom_margin {\n  clear: both;\n  margin: 0 0 20px 0;\n}\n\n.sequence_table_shadow {\n  border: 1px solid #ddd;\n  -webkit-box-shadow: 4px 4px 4px rgba(0,0,0,0.10);\n  -moz-box-shadow: 10px 10px 10px rgba(0,0,0,0.10);\n  -o-box-shadow: 10px 10px 10px rgba(0,0,0,0.10);\n  -ms-box-shadow: 10px 10px 10px rgba(0,0,0,0.10);\n  box-shadow: 4px 4px 4px rgba(0,0,0,0.30);\n}\n\n.span2 div.sidebar-nav {\n\tmargin-top: 12px;\n}\n\n.nav-header {\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 16px;\n  color: #555;\n  text-shadow: none;\n  text-transform: none;\n}\n\n.nav-list .muted {\n  font-size: 12px;\n  line-height: 14px;\n}\n\n.nav>li.muted>a {\n  display: inline;\n}\n\n.nav>li.muted>a:hover,\n.nav>li.muted>a:focus {\n  background-color: transparent;\n}\n\npre strong {\n  color: black;\n  font-weight: normal;\n}\n\nhr.black {\n  margin: 30px 0;\n  border: 0;\n  border-top: 1px solid #eee;\n  border-bottom: 1px solid #ccc;\n}\n\n.sidebar-nav hr {\n  border: 0;\n  border-top: 1px dotted #777;\n}\n\n.row-outer-details h4.first-header {\n  margin-top: 15px;\n}\n\n.table {\n  margin-top: 20px;\n}\n\n.centered,\n.text-centered th,\n.text-centered td {\n  text-align: center;\n}\n\n.details {\n  width: 900px;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.row-outer .details h3 {\n  font-weight: bold;\n}\n\n.details h4,\n.details h5 {\n  margin-top: 40px;\n}\n\n.row-outer-details h4,\n.row-outer-details h5 {\n  color: #333333;\n}\n\n.row-outer-details h4,\n.row-outer-details h5,\n.row-outer-details p,\n.row-outer-details a {\n  text-align: left;\n}\n\n.row-outer-details dt {\n  font-size: 14px;\n  color: #333333;\n  margin-bottom: 4px;\n}\n\n.row-outer-details dd {\n  margin-bottom: 16px;\n}\n\n.row-fluid .span9.sub {\n  border: none;\n  -webkit-border-radius: none;\n  -moz-border-radius: none;\n  border-radius: none;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  -o-box-shadow: none;\n  -ms-box-shadow: none;\n  box-shadow: none;\n}\n\n.links-container h5 {\n  margin-top: 0;\n}\n\n.plasma-charts {\n  text-align: center;\n}\n\n.resources-and-comments {\n  margin-top: 20px;\n}\n\n.comments {\n  clear: both;\n}\n\n.empty-spacer {\n  height: 30px;\n}\n\n#tooltip {\n  font-size: .85em;\n}\n\nbody .tooltip {\n  text-shadow: none;\n  text-transform: none;\n  font-size: .9em;\n  font-weight: normal;\n}\n\nh3 div.tooltip {\n  text-shadow: none;\n  text-transform: none;\n  font-size: .6em;\n  font-weight: normal;\n}\n\n.icon-exclamation-sign,\n#response_curves_info_icon,\n#repeatability_info_icon {\n  cursor: pointer;\n}\n\n#response_curves_info_icon,\n#repeatability_info_icon {\n  font-size: .9em;\n}\n\n.modal-image {\n  width: 500px;\n  height: auto;\n  margin: 0 auto;\n  padding: 10px;\n  text-align: center;\n}\n.modal-image p {\n  margin-top: 6px;\n  font-size: .9em;\n}\n\n#modal2 form {\n  margin: 0;\n}\n\n#modal2 label {\n  font-weight: bold;\n}\n\n#modal2 textarea {\n  width: 97%;\n  height: 80px;\n}\n\n.amino-acid {\n  margin-left: 13px;\n}\n\n.local-icon-helix {\n  display: inline-block;\n  width: 29px;\n  height: 29px;\n  margin-top: 1px;\n  line-height: 14px;\n  vertical-align: text-top;\n  background-image: url(\"../images/icon-helix.png\");\n  background-repeat: no-repeat;\n}\n\n.assay-details-wrapper,\n.preloader_loading,\n#preloader_loading_assay_details {\n  display: none;\n}\n\n.preloader_loading,\n.loc_lloq_preloader_loading {\n  width: 100px;\n  height: 100px;\n  margin: 20px auto 0 auto;\n  text-align: center;\n}\n\n#preloader_loading_assay_details {\n  width: 100px;\n  height: 100px;\n  margin: 40px auto 1000px auto;\n  text-align: center;\n}\n\n.preloader_loading p,\n#preloader_loading_assay_details p {\n  text-align: center;\n}\n\n.collapse-button,\n#collapse-button-assay-details,\n#collapse-button-assay-parameters {\n  font-size: 14px;\n  margin-left: 10px;\n}\n\n#collapse-button-assay-parameters {\n  margin-bottom: 16px;\n}\n\n.overview-details .table th,\n.overview-details .table td {\n  width: 50%;\n}\n\ntable.assay-details th,\ntable.assay-details td {\n  width: 20%;\n}\n\n.un-bold {\n  font-weight: normal;\n}\n\n/* Bordered Containers */\n\n.row-outer-details .row-fluid .span3,\n.row-outer-details .row-fluid .span4,\n.row-outer-details .row-fluid .span5,\n.row-outer-details .row-fluid .span6,\n.row-outer-details .row-fluid .span7,\n.row-outer-details .row-fluid .span8,\n.row-outer-details .row-fluid .span9,\n.row-outer-details .row-fluid .span12 {\n  padding: 14px 14px;\n  background-color: #fff;\n  border-top: 1px solid #ddd;\n  border-bottom: 1px solid #ddd;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px;\n  -webkit-box-shadow: 1px 1px 1px rgba(0,0,0,0.10);\n  -moz-box-shadow: 1px 1px 1px rgba(0,0,0,0.10);\n  -o-box-shadow: 1px 1px 1px rgba(0,0,0,0.10);\n  -ms-box-shadow: 1px 1px 1px rgba(0,0,0,0.10);\n  box-shadow: 1px 1px 1px rgba(0,0,0,0.10);\n}\n\n.row-outer-details .row-fluid.header-split .span12 {\n  margin: 0 0 0 0;\n  padding: 0;\n  background-color: transparent;\n  border-top: none;\n  border-bottom: none;\n  -webkit-border-radius: none;\n  -moz-border-radius: none;\n  border-radius: none;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  -o-box-shadow: none;\n  -ms-box-shadow: none;\n  box-shadow: none;\n}\n\n.row-outer-details .row-fluid.header-split {\n  margin-top: 14px;\n}\n\n.row-outer-details .row-fluid .span6.image {\n  min-height: 10px;\n}\n\n.row-outer-details .row-fluid .span12 {\n  margin: 20px 0;\n}\n\n.row-outer-details .row-fluid .details {\n  margin: 0;\n}\n\n.row-outer-details .row-fluid .span12.image {\n  margin: 0;\n}\n\n/*.row-outer-details .row-fluid .span6.sequence {\n  min-width: 530px;\n}*/\n\n/*.row-outer-details .row-fluid div[class*='image'] {\n  min-height: 334px;\n}*/\n\n.row-outer-details .row-fluid div[class*='image'] p,\n.loc_lloq_preloader_loading p {\n  text-align: center;\n}\n\n.row-outer-details .row-fluid .span3.empty {\n  background-color: transparent;\n  border: none;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  -o-box-shadow: none;\n  -ms-box-shadow: none;\n  box-shadow: none;\n}\n\n#assay_details .span12 {\n  margin-top: 0;\n}\n\n#assay_details .span6 {\n  background-color: transparent;\n  border: none;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  -o-box-shadow: none;\n  -ms-box-shadow: none;\n  box-shadow: none;\n}\n\n#sops .sop-downloads li {\n  margin-bottom: 12px;\n}\n\n/* Protein Sequence Container */\n\n.protein-sequence,\n.splice-junction-sequence {\n  height: 340px;\n\toverflow: hidden;\n  position: relative;\n  margin: 10px 0;\n  padding: 10px;\n  background-color: #fff;\n  border: 1px solid #eee;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px;\n  z-index: 100;\n}\n\n.sequence a {\n  color: red;\n}\n\n\n/* Ratings */\n\n/*.rating,#code .rating{unicode-bidi:bidi-override;direction:rtl;font-size:30px}\n.rating span.star,#code .rating span.star{font-family:FontAwesome;font-weight:normal;font-style:normal;display:inline-block}\n.rating span.star:hover,#code .rating span.star:hover{cursor:pointer}\n.rating span.star:before,#code .rating span.star:before{content:\"\\f006\";padding-right:5px;color:#999}\n\n.rating span.star:hover:before,\n.rating span.star:hover:before,\n.rating span.star:hover ~ span.star:before,\n#code .rating span.star:hover ~ span.star:before{content:\"\\f005\";color:#e3cf7a}*/\n\n.rating {\n    float:left;\n    margin-bottom: 20px;\n}\n\n/* :not(:checked) is a filter, so that browsers that don’t support :checked don’t\n   follow these rules. Every browser that supports :checked also supports :not(), so\n   it doesn’t make the test unnecessarily selective */\n.rating:not(:checked) > input {\n    position:absolute;\n    top:-9999px;\n    clip:rect(0,0,0,0);\n}\n\n.rating:not(:checked) > label {\n    float:right;\n    width:1em;\n    padding:0 .1em;\n    overflow:hidden;\n    white-space:nowrap;\n    cursor:pointer;\n    font-size:200%;\n    line-height:1.2;\n    color:#ddd;\n    text-shadow:1px 1px #bbb, 2px 2px #666, .1em .1em .2em rgba(0,0,0,.5);\n}\n\n.rating:not(:checked) > label:before {\n    content: '★ ';\n}\n\n.rating > input:checked ~ label {\n    color: #f70;\n    text-shadow:1px 1px #c60, 2px 2px #940, .1em .1em .2em rgba(0,0,0,.5);\n}\n\n.rating:not(:checked) > label:hover,\n.rating:not(:checked) > label:hover ~ label {\n    color: gold;\n    text-shadow:1px 1px goldenrod, 2px 2px #B57340, .1em .1em .2em rgba(0,0,0,.5);\n}\n\n.rating > input:checked + label:hover,\n.rating > input:checked + label:hover ~ label,\n.rating > input:checked ~ label:hover,\n.rating > input:checked ~ label:hover ~ label,\n.rating > label:hover ~ input:checked ~ label {\n    color: #ea0;\n    text-shadow:1px 1px goldenrod, 2px 2px #B57340, .1em .1em .2em rgba(0,0,0,.5);\n}\n\n.rating > label:active {\n    position:relative;\n    top:2px;\n    left:2px;\n}\n\n/* Bar Chart */\n\n/*#assay_details_graph div {\n  font: 10px sans-serif;\n  background-color: steelblue;\n  text-align: right;\n  padding: 3px;\n  margin: 0;\n  color: white;\n  clear: none;\n  cursor: pointer;\n}*/\n\n#assay_details_graph rect:hover {\n  fill: #ccc;\n}\n\n#isoforms_graph,\n#mrm_details_graph {\n  height: 150px;\n  padding: 20px 0;\n}\n\n#snps_graph {\n  height: 220px;\n  padding: 20px 0;\n}\n\n#all_in_one_graph {\n  width: 795px;\n  height: 300px;\n  margin: 0 auto 0 auto;\n  padding: 20px 0;\n}\n\n#all_in_one_graph .button {\n  position: absolute;\n  cursor: pointer;\n}\n\n#all_in_one_graph div.button {\n  font-size: smaller;\n  color: #999;\n  background-color: #EEE;\n  padding: 2px 6px;\n}\n\n#amino_acid_graph {\n  height: 60px;\n  padding: 20px 0;\n}\n\n.main text {\n  font: 10px sans-serif;\n}\n\n.axis line, .axis path {\n  shape-rendering: crispEdges;\n  stroke: black;\n  fill: none;\n}\n\n.caption-link {\n  margin: 10px 0 0 0;\n}\n\n.graph-instructions {\n  font-weight:normal;\n  font-size:75%;\n  margin-left: 10px;\n}\n\n.mrm-block-symbol {\n  width: 14px;\n  height: 6px;\n  background-color: #0066cc;\n  display: inline-block;\n}\n\n.mrm-points,\n.all-other-points {\n  margin: 14px 0;\n}\n\n.chart-legend {\n  position:absolute;\n  top:10px;\n  width:4px;\n  height:0;\n  overflow:hidden;\n  cursor:pointer;\n}\n\n.chart-legend-text {\n  position:absolute;\n  top:5px;\n  color:#777;\n  font-size:smaller;\n  cursor:pointer;\n}\n\n.sequence-domains-chart-legend {\n  left:20px;\n  border:5px solid green;\n}\n\n.sequence-domains-chart-legend-text {\n  left:40px;\n}\n\n.isoforms-chart-legend {\n  left:162px;\n  border:5px solid #EDC240;\n}\n\n.isoforms-chart-legend-text {\n  left:182px;\n}\n\n.snps-chart-legend {\n  left:240px;\n  border:5px solid #EC0000;\n}\n\n.snps-chart-legend-text {\n  left:260px;\n}\n\n.mrm-assays-chart-legend {\n  left:300px;\n  border:5px solid #0066cc;\n  cursor:default;\n}\n\n.mrm-assays-chart-legend-text {\n  left:320px;\n  cursor:default;\n}\n\n.group-item td:first-child {\n  padding-left: 20px;\n}\n\n.row-fluid .repeatability-data-table {\n  min-height: 460px;\n}\n\n/*@media (max-width: 1170px) {\n  .row-fluid .span6.sequence {\n    margin-left: 0;\n  }\n}\n*/\n/* Hansontables */\n\n.handsontable .currentRow {\n  background-color: #E7E8EF;\n}\n\n.handsontable .currentCol {\n  background-color: #F9F9FB;\n}\n\n#proteins_container,\n#species_container,\n#peptide_container,\n#laboratories_container,\n#peptide_stds_container,\n#protein_stds_container,\n#assay_parameters_container,\n#instruments_container,\n#analytical_validation_of_assay_container {\n  display: none;\n  margin-bottom: 50px;\n}\n\n#proteins_container {\n  display: block;\n}\n\n.data-entry-form button {\n  margin-top: 10px;\n}\n\ntd a {\n  white-space: nowrap;\n}\n\n#output {\n  margin-top: 20px;\n}\n\n\n/* Sidebar Filters */\n\n#sidebar_nav .icon-question-sign {\n  cursor: pointer;\n  color: black;\n}\n\ninput[type=\"text\"].select_cromosomal_location,\nul.tagit input[type=\"text\"] {\n  margin: 2px 0;\n  padding: 2px;\n  width: 86px;\n}\n\nul.tagit li.tagit-choice-editable {\n  padding: .2em 16px .2em .5em;\n  border: 1px dotted #555;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px;\n  background-color: #fff;\n  clear: both;\n}\n\nul.tagit li.tagit-choice .tagit-close {\n  right: 0.3em;\n}\n\nul.tagit li {\n  margin-bottom: 6px;\n}\n\nbutton.multiselect {\n  overflow: hidden;\n}\n\n.btn-group>.btn {\n  font-size: 12px;\n}\n\n.filter-button-text {\n  padding: 0 4px;\n}\n\n.btn-group,\nul.tagit,\n#cromosomal_location_start,\n#cromosomal_location_stop {\n  margin-left: 10px;\n}\n\n#sidebar_nav h4 {\n  font-size: 1.2em;\n}\n\n.sop-downloads li {\n  margin-bottom: 10px;\n}\n\n\n/* Show/Hide Columns Menu */\n\n.ColVis_Button {\n  height: auto;\n}\n\ndiv.ColVis_collection button.ColVis_Button {\n  width: 100% !important;\n}\n\ndiv.ColVis_collection {\n  width: 162px !important;\n}\n\n/* Splice Junctions (Ensemble Sequence) */\n\n.splice-junction-sequence pre {\n  text-align: left;\n  background-color: #fff;\n  border: none;\n  font-size: 9pt;\n  letter-spacing: 1px;\n}\n\n.splice-junctions-legend {\n  margin-left: 10px;\n}\n\n.splice-junctions-legend div {\n  display: inline-block;\n  padding: 0 4px;\n  border: 1px dotted #333;\n  font-size: .9em;\n}\n\n.splice-junction-blue {\n  color: #1044ee;\n}\n\n.splice-junction-red {\n  color: #dd0000;\n}\n\n/* Chosen (JS library) Overrides */\n\n.chosen-container,\n#cromosomal_location_stop {\n  margin-bottom: 12px;\n}\n\n.chosen-container .chosen-drop {\n  width: 350px;\n}\n\n.chosen-container-multi .chosen-choices li.search-choice {\n  padding: 2px 18px 2px 2px;\n  font-size: .9em;\n  width: 97px;\n}\n\n.chosen-container .chosen-results li.disabled-result.parent {\n  font-weight: bold;\n  color: #000;\n}\n\n/* jQuery Tour */\n\n.popover-title {\n  background-color: #0079A8;\n  color: #FFF;\n}\n\n#tour_button_container button {\n  width: 100%;\n  margin: 6px auto 0 auto;\n}\n\n/* Download CSV Button on Browse Page */\n\n.custom_csv_button_styles {\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif !important;\n  font-size: 14px !important;\n  font-weight: normal !important;\n  line-height: 20px !important;\n  padding: 3px 5px !important;\n  -webkit-border-radius: none !important;\n  -moz-border-radius: none !important;\n  -ms-border-radius: none !important;\n  -o-border-radius: none !important;\n  border: 1px solid #D0D0D0 !important;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  background: inherit !important;\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#f9f9f9',GradientType=0 );\n}\n\n#browse_table_wrapper .DTTT_container a {\n  display: block !important;\n}\n\n/* Flot Chart Tweaks */\n\n/*.xAxis > .tickLabel \n{\n  margin-top:0;\n  -moz-transform:rotate(-90deg);\n  -o-transform:rotate(-90deg);\n  -webkit-transform:rotate(-90deg);\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\n}*/\n\n/*@media (max-width: 1170px) {\n\n  #all_in_one_graph {\n    margin-left: 40px\n  }\n\n}*/\n\n.alert-preview {\n  font-weight: bold;\n  text-align: center;\n  font-size: 1.1em;\n}\n\nspan.crude-header {\n  color: red;\n}\n\n\n.peptide_detail_link {\n  color: #08c;\n  text-decoration: underline;\n  font-family: \"courier\";  \n}\n\n .peptide_detail_link:hover {\n  cursor: pointer;\n}\n\n\n.detail-modal {\n  margin-left: -4px;\n  position: absolute;\n  z-index: 10000;\n  min-height: 15px;\n  min-width: 50px;\n  background-color: white;\n  border-radius: 4px;\n  padding: 15px;\n  font-size: .8em;    \n}\n\n.detail-modal .close {\n  margin-top: -17px;\n  margin-right: -9px;\n}\n\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":715,"column":11},"end":{"row":715,"column":11}},"properties":{"type":"selection","autoscroll":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/css/styles.css","digestWhenLastPersisted":"5d8102e8c952d133c1f95c001841a02344ab5fab","preferredLineEnding":null,"nextMarkerId":177,"deserializer":"TextBuffer","version":5},{"id":"40cc4da16fe9cdbb911c9193e5e20d63","text":"/*\n * The MIT License\n\nCopyright (c) 2012 by Matt Burland\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n/*\nThis plugin will draw labels next to the plotted points on your graph. Tested on\na scatter graph, may or may not work with other graph types. Best suited to\nsituations involving a smaller number of points.\n\nusage -\n    <style type=\"text/css\">\n    .myCSSClass\n    {\n        font-size: 9px;\n        color: #AD8200;\n        padding: 2px;\n        opacity: 0.80;\n    }\n    </style>\n\n    <script type=\"text/javascript\">\n    var names = [\n        \"foo\",\n        \"bar\"\n    ];\n    var data = { data: [[1,1],[2,2]], showLabels: true, labels: names, labelPlacement: \"left\", labelClass: \"myCSSClass\" };\n    $.plot($(\"#placeholder), [data], options);\n    </script>\n\nFor each series that you want labeled you need to set showLabels to true, set labels to an array of label names (strings),\nset the labelClass to a css class you have defined for your labels and optionally set labelPlacement to one of \"left\", \"right\",\n\"above\" or \"below\" (below by default if not specified). Placement can be fine tuned by setting the margins in your label class.\nNote: if the labelClass is not explicitly supplied in the development version of flot (> v0.7), the plugin will auto generate\na label class as \"seriesLabelx\" where x is the 1-based index of the data series. I.e. the first dataseries will be seriesLabel1,\nthe second seriesLabel2, etc.\nFor the names, the array should be the same length as the data. If any are missing (null) then the label for that point will\nbe skipped. For example, to label only the 1st and 3rd points:\n\n    var names = [\"foo\", null, \"bar\"];\n\nUpdate: Version 0.2\n\nAdded support for drawing labels using canvas.fillText. The advantages are that, in theory, drawing to the canvas should be\nfaster, but the primary reason is that in some browsers, the labels added as absolutely positioned div elements won't show up\nif you print the page. So if you want to print your graphs, you should probably use canvasRender.\nThe disadvantage is that you lose the flexibility of defining the label with a CSS class.\n\nOptions added to series (with defaults):\n\n            canvasRender: false,                // false will add divs to the DOM rather than use canvas.fillText\n            cColor: \"#000\",                     // color for the text if using canvasRender\n            cFont: \"9px, san-serif\",            // font for the text if using canvasRender\n            cPadding: 4                         // Padding to add when using canvasRender (where padding is added depends on\n                                                // labelPlacement)\n\nAlso, version 0.2 takes into account the radius of the data points when placing the labels.\n*/\n\n(function ($) {\n\n    function init(plot) {\n        plot.hooks.drawSeries.push(drawSeries);\n        plot.hooks.shutdown.push(shutdown);\n        if (plot.hooks.processOffset) {         // skip if we're using 0.7 - just add the labelClass explicitly.\n            plot.hooks.processOffset.push(processOffset);\n        }\n    }\n\n    function processOffset(plot, offset) {\n        // Check to see if each series has a labelClass defined. If not, add a default one.\n        // processOptions gets called before the data is loaded, so we can't do this there.\n        var series = plot.getData();\n        for (var i = 0; i < series.length; i++) {\n            if (!series[i].canvasRender && series[i].showLabels && !series[i].labelClass) {\n                series[i].labelClass = \"seriesLabel\" + (i + 1);\n            }\n        }\n    }\n\n    function drawSeries(plot, ctx, series) {\n        if (!series.showLabels || !(series.labelClass || series.canvasRender) || !series.labels || series.labels.length == 0) {\n            return;\n        }\n        ctx.save();\n        if (series.canvasRender) {\n            ctx.fillStyle = series.cColor;\n            ctx.font = series.cFont;\n        }\n\n        for (i = 0; i < series.data.length; i++) {\n            if (series.labels[i]) {\n                var loc = plot.pointOffset({ x: series.data[i][0], y: series.data[i][1] });\n                var offset = plot.getPlotOffset();\n                if (loc.left > 0 && loc.left < plot.width() && loc.top > 0 && loc.top < plot.height())\n                    drawLabel(series.labels[i], loc.left, loc.top);\n            }\n        }\n        ctx.restore();\n\n        function drawLabel(contents, x, y) {\n            var radius = series.points.radius;\n            if (!series.canvasRender) {\n                var elem = $('<div class=\"' + series.labelClass + '\">' + contents + '</div>').css({ position: 'absolute' }).appendTo(plot.getPlaceholder());\n                switch (series.labelPlacement) {\n                    case \"above\":\n                        elem.css({\n                            top: y - (elem.height() + radius),\n                            left: x - elem.width() / 2\n                        });\n                        break;\n                    case \"left\":\n                        elem.css({\n                            top: y - elem.height() / 2,\n                            left: x - (elem.width() + radius)\n                        });\n                        break;\n                    case \"right\":\n                        elem.css({\n                            top: y - elem.height() / 2,\n                            left: x + radius /*+ 15 */\n                        });\n                        break;\n                    default:\n                        elem.css({\n                            top: y + radius/*+ 10*/,\n                            left: x - elem.width() / 2\n                        });\n                }\n            }\n            else {\n                //TODO: check boundaries\n                var tWidth = ctx.measureText(contents).width;\n                switch (series.labelPlacement) {\n                    case \"above\":\n                        x = x - tWidth / 2;\n                        y -= (series.cPadding + radius);\n                        ctx.textBaseline = \"bottom\";\n                        break;\n                    case \"left\":\n                        x -= tWidth + series.cPadding + radius;\n                        ctx.textBaseline = \"middle\";\n                        break;\n                    case \"right\":\n                        x += series.cPadding + radius;\n                        ctx.textBaseline = \"middle\";\n                        break;\n                    default:\n                        ctx.textBaseline = \"top\";\n                        y += series.cPadding + radius;\n                        x = x - tWidth / 2;\n\n                }\n                ctx.fillText(contents, x, y);\n            }\n        }\n\n    }\n\n    function shutdown(plot, eventHolder) {\n        var series = plot.getData();\n        for (var i = 0; i < series.length; i++) {\n            if (!series[i].canvasRender && series[i].labelClass) {\n                $(\".\" + series[i].labelClass).remove();\n            }\n        }\n    }\n\n    // labelPlacement options: below, above, left, right\n    var options = {\n        series: {\n            showLabels: false,\n            labels: [],\n            labelClass: null,\n            labelPlacement: \"below\",\n            canvasRender: false,\n            cColor: \"#000\",\n            cFont: \"9px, san-serif\",\n            cPadding: 4\n        }\n    };\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: \"seriesLabels\",\n        version: \"0.2\"\n    });\n})(jQuery);","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":17,"column":7},"end":{"row":17,"column":7}},"properties":{"type":"selection","preserveFolds":true,"autoscroll":false,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/jquery.flot.labels.js","digestWhenLastPersisted":"b64966550d525c38ba4a8844fc74649c5c6984f6","preferredLineEnding":null,"nextMarkerId":7,"deserializer":"TextBuffer","version":5},{"id":"1b540c8d79bf9d93dd9f3228c30f4fa2","text":"$(document).ready(function() {\n  var site_name = $('.page-header h3').text();\n  $('.page-header h3').remove();\n  $('.page-header').append('<a href=\"/\" title=\"'+site_name+'\"></a>');\n});","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/javascript.js","digestWhenLastPersisted":"281428982572e56119b31db5a0b75c6f8fa60ad8","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"cbfdb188119c42eda2b7f0df455e7a19","text":"// Copyright 2006 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n// Known Issues:\n//\n// * Patterns are not implemented.\n// * Radial gradient are not implemented. The VML version of these look very\n//   different from the canvas one.\n// * Clipping paths are not implemented.\n// * Coordsize. The width and height attribute have higher priority than the\n//   width and height style values which isn't correct.\n// * Painting mode isn't implemented.\n// * Canvas width/height should is using content-box by default. IE in\n//   Quirks mode will draw the canvas using border-box. Either change your\n//   doctype to HTML5\n//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)\n//   or use Box Sizing Behavior from WebFX\n//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)\n// * Non uniform scaling does not correctly scale strokes.\n// * Optimize. There is always room for speed improvements.\n\n// Only add this code if we do not already have a canvas implementation\nif (!document.createElement('canvas').getContext) {\n\n(function() {\n\n  // alias some functions to make (compiled) code shorter\n  var m = Math;\n  var mr = m.round;\n  var ms = m.sin;\n  var mc = m.cos;\n  var abs = m.abs;\n  var sqrt = m.sqrt;\n\n  // this is used for sub pixel precision\n  var Z = 10;\n  var Z2 = Z / 2;\n\n  /**\n   * This funtion is assigned to the <canvas> elements as element.getContext().\n   * @this {HTMLElement}\n   * @return {CanvasRenderingContext2D_}\n   */\n  function getContext() {\n    return this.context_ ||\n        (this.context_ = new CanvasRenderingContext2D_(this));\n  }\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Binds a function to an object. The returned function will always use the\n   * passed in {@code obj} as {@code this}.\n   *\n   * Example:\n   *\n   *   g = bind(f, obj, a, b)\n   *   g(c, d) // will do f.call(obj, a, b, c, d)\n   *\n   * @param {Function} f The function to bind the object to\n   * @param {Object} obj The object that should act as this when the function\n   *     is called\n   * @param {*} var_args Rest arguments that will be used as the initial\n   *     arguments when the function is called\n   * @return {Function} A new function that has bound this\n   */\n  function bind(f, obj, var_args) {\n    var a = slice.call(arguments, 2);\n    return function() {\n      return f.apply(obj, a.concat(slice.call(arguments)));\n    };\n  }\n\n  var G_vmlCanvasManager_ = {\n    init: function(opt_doc) {\n      if (/MSIE/.test(navigator.userAgent) && !window.opera) {\n        var doc = opt_doc || document;\n        // Create a dummy element so that IE will allow canvas elements to be\n        // recognized.\n        doc.createElement('canvas');\n        doc.attachEvent('onreadystatechange', bind(this.init_, this, doc));\n      }\n    },\n\n    init_: function(doc) {\n      // create xmlns\n      if (!doc.namespaces['g_vml_']) {\n        doc.namespaces.add('g_vml_', 'urn:schemas-microsoft-com:vml',\n                           '#default#VML');\n\n      }\n      if (!doc.namespaces['g_o_']) {\n        doc.namespaces.add('g_o_', 'urn:schemas-microsoft-com:office:office',\n                           '#default#VML');\n      }\n\n      // Setup default CSS.  Only add one style sheet per document\n      if (!doc.styleSheets['ex_canvas_']) {\n        var ss = doc.createStyleSheet();\n        ss.owningElement.id = 'ex_canvas_';\n        ss.cssText = 'canvas{display:inline-block;overflow:hidden;' +\n            // default size is 300x150 in Gecko and Opera\n            'text-align:left;width:300px;height:150px}' +\n            'g_vml_\\\\:*{behavior:url(#default#VML)}' +\n            'g_o_\\\\:*{behavior:url(#default#VML)}';\n\n      }\n\n      // find all canvas elements\n      var els = doc.getElementsByTagName('canvas');\n      for (var i = 0; i < els.length; i++) {\n        this.initElement(els[i]);\n      }\n    },\n\n    /**\n     * Public initializes a canvas element so that it can be used as canvas\n     * element from now on. This is called automatically before the page is\n     * loaded but if you are creating elements using createElement you need to\n     * make sure this is called on the element.\n     * @param {HTMLElement} el The canvas element to initialize.\n     * @return {HTMLElement} the element that was created.\n     */\n    initElement: function(el) {\n      if (!el.getContext) {\n\n        el.getContext = getContext;\n\n        // Remove fallback content. There is no way to hide text nodes so we\n        // just remove all childNodes. We could hide all elements and remove\n        // text nodes but who really cares about the fallback content.\n        el.innerHTML = '';\n\n        // do not use inline function because that will leak memory\n        el.attachEvent('onpropertychange', onPropertyChange);\n        el.attachEvent('onresize', onResize);\n\n        var attrs = el.attributes;\n        if (attrs.width && attrs.width.specified) {\n          // TODO: use runtimeStyle and coordsize\n          // el.getContext().setWidth_(attrs.width.nodeValue);\n          el.style.width = attrs.width.nodeValue + 'px';\n        } else {\n          el.width = el.clientWidth;\n        }\n        if (attrs.height && attrs.height.specified) {\n          // TODO: use runtimeStyle and coordsize\n          // el.getContext().setHeight_(attrs.height.nodeValue);\n          el.style.height = attrs.height.nodeValue + 'px';\n        } else {\n          el.height = el.clientHeight;\n        }\n        //el.getContext().setCoordsize_()\n      }\n      return el;\n    }\n  };\n\n  function onPropertyChange(e) {\n    var el = e.srcElement;\n\n    switch (e.propertyName) {\n      case 'width':\n        el.style.width = el.attributes.width.nodeValue + 'px';\n        el.getContext().clearRect();\n        break;\n      case 'height':\n        el.style.height = el.attributes.height.nodeValue + 'px';\n        el.getContext().clearRect();\n        break;\n    }\n  }\n\n  function onResize(e) {\n    var el = e.srcElement;\n    if (el.firstChild) {\n      el.firstChild.style.width =  el.clientWidth + 'px';\n      el.firstChild.style.height = el.clientHeight + 'px';\n    }\n  }\n\n  G_vmlCanvasManager_.init();\n\n  // precompute \"00\" to \"FF\"\n  var dec2hex = [];\n  for (var i = 0; i < 16; i++) {\n    for (var j = 0; j < 16; j++) {\n      dec2hex[i * 16 + j] = i.toString(16) + j.toString(16);\n    }\n  }\n\n  function createMatrixIdentity() {\n    return [\n      [1, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1]\n    ];\n  }\n\n  function matrixMultiply(m1, m2) {\n    var result = createMatrixIdentity();\n\n    for (var x = 0; x < 3; x++) {\n      for (var y = 0; y < 3; y++) {\n        var sum = 0;\n\n        for (var z = 0; z < 3; z++) {\n          sum += m1[x][z] * m2[z][y];\n        }\n\n        result[x][y] = sum;\n      }\n    }\n    return result;\n  }\n\n  function copyState(o1, o2) {\n    o2.fillStyle     = o1.fillStyle;\n    o2.lineCap       = o1.lineCap;\n    o2.lineJoin      = o1.lineJoin;\n    o2.lineWidth     = o1.lineWidth;\n    o2.miterLimit    = o1.miterLimit;\n    o2.shadowBlur    = o1.shadowBlur;\n    o2.shadowColor   = o1.shadowColor;\n    o2.shadowOffsetX = o1.shadowOffsetX;\n    o2.shadowOffsetY = o1.shadowOffsetY;\n    o2.strokeStyle   = o1.strokeStyle;\n    o2.globalAlpha   = o1.globalAlpha;\n    o2.arcScaleX_    = o1.arcScaleX_;\n    o2.arcScaleY_    = o1.arcScaleY_;\n    o2.lineScale_    = o1.lineScale_;\n  }\n\n  function processStyle(styleString) {\n    var str, alpha = 1;\n\n    styleString = String(styleString);\n    if (styleString.substring(0, 3) == 'rgb') {\n      var start = styleString.indexOf('(', 3);\n      var end = styleString.indexOf(')', start + 1);\n      var guts = styleString.substring(start + 1, end).split(',');\n\n      str = '#';\n      for (var i = 0; i < 3; i++) {\n        str += dec2hex[Number(guts[i])];\n      }\n\n      if (guts.length == 4 && styleString.substr(3, 1) == 'a') {\n        alpha = guts[3];\n      }\n    } else {\n      str = styleString;\n    }\n\n    return {color: str, alpha: alpha};\n  }\n\n  function processLineCap(lineCap) {\n    switch (lineCap) {\n      case 'butt':\n        return 'flat';\n      case 'round':\n        return 'round';\n      case 'square':\n      default:\n        return 'square';\n    }\n  }\n\n  /**\n   * This class implements CanvasRenderingContext2D interface as described by\n   * the WHATWG.\n   * @param {HTMLElement} surfaceElement The element that the 2D context should\n   * be associated with\n   */\n  function CanvasRenderingContext2D_(surfaceElement) {\n    this.m_ = createMatrixIdentity();\n\n    this.mStack_ = [];\n    this.aStack_ = [];\n    this.currentPath_ = [];\n\n    // Canvas context properties\n    this.strokeStyle = '#000';\n    this.fillStyle = '#000';\n\n    this.lineWidth = 1;\n    this.lineJoin = 'miter';\n    this.lineCap = 'butt';\n    this.miterLimit = Z * 1;\n    this.globalAlpha = 1;\n    this.canvas = surfaceElement;\n\n    var el = surfaceElement.ownerDocument.createElement('div');\n    el.style.width =  surfaceElement.clientWidth + 'px';\n    el.style.height = surfaceElement.clientHeight + 'px';\n    el.style.overflow = 'hidden';\n    el.style.position = 'absolute';\n    surfaceElement.appendChild(el);\n\n    this.element_ = el;\n    this.arcScaleX_ = 1;\n    this.arcScaleY_ = 1;\n    this.lineScale_ = 1;\n  }\n\n  var contextPrototype = CanvasRenderingContext2D_.prototype;\n  contextPrototype.clearRect = function() {\n    this.element_.innerHTML = '';\n  };\n\n  contextPrototype.beginPath = function() {\n    // TODO: Branch current matrix so that save/restore has no effect\n    //       as per safari docs.\n    this.currentPath_ = [];\n  };\n\n  contextPrototype.moveTo = function(aX, aY) {\n    var p = this.getCoords_(aX, aY);\n    this.currentPath_.push({type: 'moveTo', x: p.x, y: p.y});\n    this.currentX_ = p.x;\n    this.currentY_ = p.y;\n  };\n\n  contextPrototype.lineTo = function(aX, aY) {\n    var p = this.getCoords_(aX, aY);\n    this.currentPath_.push({type: 'lineTo', x: p.x, y: p.y});\n\n    this.currentX_ = p.x;\n    this.currentY_ = p.y;\n  };\n\n  contextPrototype.bezierCurveTo = function(aCP1x, aCP1y,\n                                            aCP2x, aCP2y,\n                                            aX, aY) {\n    var p = this.getCoords_(aX, aY);\n    var cp1 = this.getCoords_(aCP1x, aCP1y);\n    var cp2 = this.getCoords_(aCP2x, aCP2y);\n    bezierCurveTo(this, cp1, cp2, p);\n  };\n\n  // Helper function that takes the already fixed cordinates.\n  function bezierCurveTo(self, cp1, cp2, p) {\n    self.currentPath_.push({\n      type: 'bezierCurveTo',\n      cp1x: cp1.x,\n      cp1y: cp1.y,\n      cp2x: cp2.x,\n      cp2y: cp2.y,\n      x: p.x,\n      y: p.y\n    });\n    self.currentX_ = p.x;\n    self.currentY_ = p.y;\n  }\n\n  contextPrototype.quadraticCurveTo = function(aCPx, aCPy, aX, aY) {\n    // the following is lifted almost directly from\n    // http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes\n\n    var cp = this.getCoords_(aCPx, aCPy);\n    var p = this.getCoords_(aX, aY);\n\n    var cp1 = {\n      x: this.currentX_ + 2.0 / 3.0 * (cp.x - this.currentX_),\n      y: this.currentY_ + 2.0 / 3.0 * (cp.y - this.currentY_)\n    };\n    var cp2 = {\n      x: cp1.x + (p.x - this.currentX_) / 3.0,\n      y: cp1.y + (p.y - this.currentY_) / 3.0\n    };\n\n    bezierCurveTo(this, cp1, cp2, p);\n  };\n\n  contextPrototype.arc = function(aX, aY, aRadius,\n                                  aStartAngle, aEndAngle, aClockwise) {\n    aRadius *= Z;\n    var arcType = aClockwise ? 'at' : 'wa';\n\n    var xStart = aX + mc(aStartAngle) * aRadius - Z2;\n    var yStart = aY + ms(aStartAngle) * aRadius - Z2;\n\n    var xEnd = aX + mc(aEndAngle) * aRadius - Z2;\n    var yEnd = aY + ms(aEndAngle) * aRadius - Z2;\n\n    // IE won't render arches drawn counter clockwise if xStart == xEnd.\n    if (xStart == xEnd && !aClockwise) {\n      xStart += 0.125; // Offset xStart by 1/80 of a pixel. Use something\n                       // that can be represented in binary\n    }\n\n    var p = this.getCoords_(aX, aY);\n    var pStart = this.getCoords_(xStart, yStart);\n    var pEnd = this.getCoords_(xEnd, yEnd);\n\n    this.currentPath_.push({type: arcType,\n                           x: p.x,\n                           y: p.y,\n                           radius: aRadius,\n                           xStart: pStart.x,\n                           yStart: pStart.y,\n                           xEnd: pEnd.x,\n                           yEnd: pEnd.y});\n\n  };\n\n  contextPrototype.rect = function(aX, aY, aWidth, aHeight) {\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n  };\n\n  contextPrototype.strokeRect = function(aX, aY, aWidth, aHeight) {\n    var oldPath = this.currentPath_;\n    this.beginPath();\n\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n    this.stroke();\n\n    this.currentPath_ = oldPath;\n  };\n\n  contextPrototype.fillRect = function(aX, aY, aWidth, aHeight) {\n    var oldPath = this.currentPath_;\n    this.beginPath();\n\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n    this.fill();\n\n    this.currentPath_ = oldPath;\n  };\n\n  contextPrototype.createLinearGradient = function(aX0, aY0, aX1, aY1) {\n    var gradient = new CanvasGradient_('gradient');\n    gradient.x0_ = aX0;\n    gradient.y0_ = aY0;\n    gradient.x1_ = aX1;\n    gradient.y1_ = aY1;\n    return gradient;\n  };\n\n  contextPrototype.createRadialGradient = function(aX0, aY0, aR0,\n                                                   aX1, aY1, aR1) {\n    var gradient = new CanvasGradient_('gradientradial');\n    gradient.x0_ = aX0;\n    gradient.y0_ = aY0;\n    gradient.r0_ = aR0;\n    gradient.x1_ = aX1;\n    gradient.y1_ = aY1;\n    gradient.r1_ = aR1;\n    return gradient;\n  };\n\n  contextPrototype.drawImage = function(image, var_args) {\n    var dx, dy, dw, dh, sx, sy, sw, sh;\n\n    // to find the original width we overide the width and height\n    var oldRuntimeWidth = image.runtimeStyle.width;\n    var oldRuntimeHeight = image.runtimeStyle.height;\n    image.runtimeStyle.width = 'auto';\n    image.runtimeStyle.height = 'auto';\n\n    // get the original size\n    var w = image.width;\n    var h = image.height;\n\n    // and remove overides\n    image.runtimeStyle.width = oldRuntimeWidth;\n    image.runtimeStyle.height = oldRuntimeHeight;\n\n    if (arguments.length == 3) {\n      dx = arguments[1];\n      dy = arguments[2];\n      sx = sy = 0;\n      sw = dw = w;\n      sh = dh = h;\n    } else if (arguments.length == 5) {\n      dx = arguments[1];\n      dy = arguments[2];\n      dw = arguments[3];\n      dh = arguments[4];\n      sx = sy = 0;\n      sw = w;\n      sh = h;\n    } else if (arguments.length == 9) {\n      sx = arguments[1];\n      sy = arguments[2];\n      sw = arguments[3];\n      sh = arguments[4];\n      dx = arguments[5];\n      dy = arguments[6];\n      dw = arguments[7];\n      dh = arguments[8];\n    } else {\n      throw Error('Invalid number of arguments');\n    }\n\n    var d = this.getCoords_(dx, dy);\n\n    var w2 = sw / 2;\n    var h2 = sh / 2;\n\n    var vmlStr = [];\n\n    var W = 10;\n    var H = 10;\n\n    // For some reason that I've now forgotten, using divs didn't work\n    vmlStr.push(' <g_vml_:group',\n                ' coordsize=\"', Z * W, ',', Z * H, '\"',\n                ' coordorigin=\"0,0\"' ,\n                ' style=\"width:', W, 'px;height:', H, 'px;position:absolute;');\n\n    // If filters are necessary (rotation exists), create them\n    // filters are bog-slow, so only create them if abbsolutely necessary\n    // The following check doesn't account for skews (which don't exist\n    // in the canvas spec (yet) anyway.\n\n    if (this.m_[0][0] != 1 || this.m_[0][1]) {\n      var filter = [];\n\n      // Note the 12/21 reversal\n      filter.push('M11=', this.m_[0][0], ',',\n                  'M12=', this.m_[1][0], ',',\n                  'M21=', this.m_[0][1], ',',\n                  'M22=', this.m_[1][1], ',',\n                  'Dx=', mr(d.x / Z), ',',\n                  'Dy=', mr(d.y / Z), '');\n\n      // Bounding box calculation (need to minimize displayed area so that\n      // filters don't waste time on unused pixels.\n      var max = d;\n      var c2 = this.getCoords_(dx + dw, dy);\n      var c3 = this.getCoords_(dx, dy + dh);\n      var c4 = this.getCoords_(dx + dw, dy + dh);\n\n      max.x = m.max(max.x, c2.x, c3.x, c4.x);\n      max.y = m.max(max.y, c2.y, c3.y, c4.y);\n\n      vmlStr.push('padding:0 ', mr(max.x / Z), 'px ', mr(max.y / Z),\n                  'px 0;filter:progid:DXImageTransform.Microsoft.Matrix(',\n                  filter.join(''), \", sizingmethod='clip');\")\n    } else {\n      vmlStr.push('top:', mr(d.y / Z), 'px;left:', mr(d.x / Z), 'px;');\n    }\n\n    vmlStr.push(' \">' ,\n                '<g_vml_:image src=\"', image.src, '\"',\n                ' style=\"width:', Z * dw, 'px;',\n                ' height:', Z * dh, 'px;\"',\n                ' cropleft=\"', sx / w, '\"',\n                ' croptop=\"', sy / h, '\"',\n                ' cropright=\"', (w - sx - sw) / w, '\"',\n                ' cropbottom=\"', (h - sy - sh) / h, '\"',\n                ' />',\n                '</g_vml_:group>');\n\n    this.element_.insertAdjacentHTML('BeforeEnd',\n                                    vmlStr.join(''));\n  };\n\n  contextPrototype.stroke = function(aFill) {\n    var lineStr = [];\n    var lineOpen = false;\n    var a = processStyle(aFill ? this.fillStyle : this.strokeStyle);\n    var color = a.color;\n    var opacity = a.alpha * this.globalAlpha;\n\n    var W = 10;\n    var H = 10;\n\n    lineStr.push('<g_vml_:shape',\n                 ' filled=\"', !!aFill, '\"',\n                 ' style=\"position:absolute;width:', W, 'px;height:', H, 'px;\"',\n                 ' coordorigin=\"0 0\" coordsize=\"', Z * W, ' ', Z * H, '\"',\n                 ' stroked=\"', !aFill, '\"',\n                 ' path=\"');\n\n    var newSeq = false;\n    var min = {x: null, y: null};\n    var max = {x: null, y: null};\n\n    for (var i = 0; i < this.currentPath_.length; i++) {\n      var p = this.currentPath_[i];\n      var c;\n\n      switch (p.type) {\n        case 'moveTo':\n          c = p;\n          lineStr.push(' m ', mr(p.x), ',', mr(p.y));\n          break;\n        case 'lineTo':\n          lineStr.push(' l ', mr(p.x), ',', mr(p.y));\n          break;\n        case 'close':\n          lineStr.push(' x ');\n          p = null;\n          break;\n        case 'bezierCurveTo':\n          lineStr.push(' c ',\n                       mr(p.cp1x), ',', mr(p.cp1y), ',',\n                       mr(p.cp2x), ',', mr(p.cp2y), ',',\n                       mr(p.x), ',', mr(p.y));\n          break;\n        case 'at':\n        case 'wa':\n          lineStr.push(' ', p.type, ' ',\n                       mr(p.x - this.arcScaleX_ * p.radius), ',',\n                       mr(p.y - this.arcScaleY_ * p.radius), ' ',\n                       mr(p.x + this.arcScaleX_ * p.radius), ',',\n                       mr(p.y + this.arcScaleY_ * p.radius), ' ',\n                       mr(p.xStart), ',', mr(p.yStart), ' ',\n                       mr(p.xEnd), ',', mr(p.yEnd));\n          break;\n      }\n\n\n      // TODO: Following is broken for curves due to\n      //       move to proper paths.\n\n      // Figure out dimensions so we can do gradient fills\n      // properly\n      if (p) {\n        if (min.x == null || p.x < min.x) {\n          min.x = p.x;\n        }\n        if (max.x == null || p.x > max.x) {\n          max.x = p.x;\n        }\n        if (min.y == null || p.y < min.y) {\n          min.y = p.y;\n        }\n        if (max.y == null || p.y > max.y) {\n          max.y = p.y;\n        }\n      }\n    }\n    lineStr.push(' \">');\n\n    if (!aFill) {\n      var lineWidth = this.lineScale_ * this.lineWidth;\n\n      // VML cannot correctly render a line if the width is less than 1px.\n      // In that case, we dilute the color to make the line look thinner.\n      if (lineWidth < 1) {\n        opacity *= lineWidth;\n      }\n\n      lineStr.push(\n        '<g_vml_:stroke',\n        ' opacity=\"', opacity, '\"',\n        ' joinstyle=\"', this.lineJoin, '\"',\n        ' miterlimit=\"', this.miterLimit, '\"',\n        ' endcap=\"', processLineCap(this.lineCap), '\"',\n        ' weight=\"', lineWidth, 'px\"',\n        ' color=\"', color, '\" />'\n      );\n    } else if (typeof this.fillStyle == 'object') {\n      var fillStyle = this.fillStyle;\n      var angle = 0;\n      var focus = {x: 0, y: 0};\n\n      // additional offset\n      var shift = 0;\n      // scale factor for offset\n      var expansion = 1;\n\n      if (fillStyle.type_ == 'gradient') {\n        var x0 = fillStyle.x0_ / this.arcScaleX_;\n        var y0 = fillStyle.y0_ / this.arcScaleY_;\n        var x1 = fillStyle.x1_ / this.arcScaleX_;\n        var y1 = fillStyle.y1_ / this.arcScaleY_;\n        var p0 = this.getCoords_(x0, y0);\n        var p1 = this.getCoords_(x1, y1);\n        var dx = p1.x - p0.x;\n        var dy = p1.y - p0.y;\n        angle = Math.atan2(dx, dy) * 180 / Math.PI;\n\n        // The angle should be a non-negative number.\n        if (angle < 0) {\n          angle += 360;\n        }\n\n        // Very small angles produce an unexpected result because they are\n        // converted to a scientific notation string.\n        if (angle < 1e-6) {\n          angle = 0;\n        }\n      } else {\n        var p0 = this.getCoords_(fillStyle.x0_, fillStyle.y0_);\n        var width  = max.x - min.x;\n        var height = max.y - min.y;\n        focus = {\n          x: (p0.x - min.x) / width,\n          y: (p0.y - min.y) / height\n        };\n\n        width  /= this.arcScaleX_ * Z;\n        height /= this.arcScaleY_ * Z;\n        var dimension = m.max(width, height);\n        shift = 2 * fillStyle.r0_ / dimension;\n        expansion = 2 * fillStyle.r1_ / dimension - shift;\n      }\n\n      // We need to sort the color stops in ascending order by offset,\n      // otherwise IE won't interpret it correctly.\n      var stops = fillStyle.colors_;\n      stops.sort(function(cs1, cs2) {\n        return cs1.offset - cs2.offset;\n      });\n\n      var length = stops.length;\n      var color1 = stops[0].color;\n      var color2 = stops[length - 1].color;\n      var opacity1 = stops[0].alpha * this.globalAlpha;\n      var opacity2 = stops[length - 1].alpha * this.globalAlpha;\n\n      var colors = [];\n      for (var i = 0; i < length; i++) {\n        var stop = stops[i];\n        colors.push(stop.offset * expansion + shift + ' ' + stop.color);\n      }\n\n      // When colors attribute is used, the meanings of opacity and o:opacity2\n      // are reversed.\n      lineStr.push('<g_vml_:fill type=\"', fillStyle.type_, '\"',\n                   ' method=\"none\" focus=\"100%\"',\n                   ' color=\"', color1, '\"',\n                   ' color2=\"', color2, '\"',\n                   ' colors=\"', colors.join(','), '\"',\n                   ' opacity=\"', opacity2, '\"',\n                   ' g_o_:opacity2=\"', opacity1, '\"',\n                   ' angle=\"', angle, '\"',\n                   ' focusposition=\"', focus.x, ',', focus.y, '\" />');\n    } else {\n      lineStr.push('<g_vml_:fill color=\"', color, '\" opacity=\"', opacity,\n                   '\" />');\n    }\n\n    lineStr.push('</g_vml_:shape>');\n\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\n  };\n\n  contextPrototype.fill = function() {\n    this.stroke(true);\n  }\n\n  contextPrototype.closePath = function() {\n    this.currentPath_.push({type: 'close'});\n  };\n\n  /**\n   * @private\n   */\n  contextPrototype.getCoords_ = function(aX, aY) {\n    var m = this.m_;\n    return {\n      x: Z * (aX * m[0][0] + aY * m[1][0] + m[2][0]) - Z2,\n      y: Z * (aX * m[0][1] + aY * m[1][1] + m[2][1]) - Z2\n    }\n  };\n\n  contextPrototype.save = function() {\n    var o = {};\n    copyState(this, o);\n    this.aStack_.push(o);\n    this.mStack_.push(this.m_);\n    this.m_ = matrixMultiply(createMatrixIdentity(), this.m_);\n  };\n\n  contextPrototype.restore = function() {\n    copyState(this.aStack_.pop(), this);\n    this.m_ = this.mStack_.pop();\n  };\n\n  function matrixIsFinite(m) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 2; k++) {\n        if (!isFinite(m[j][k]) || isNaN(m[j][k])) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  function setM(ctx, m, updateLineScale) {\n    if (!matrixIsFinite(m)) {\n      return;\n    }\n    ctx.m_ = m;\n\n    if (updateLineScale) {\n      // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n      var det = m[0][0] * m[1][1] - m[0][1] * m[1][0];\n      ctx.lineScale_ = sqrt(abs(det));\n    }\n  }\n\n  contextPrototype.translate = function(aX, aY) {\n    var m1 = [\n      [1,  0,  0],\n      [0,  1,  0],\n      [aX, aY, 1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), false);\n  };\n\n  contextPrototype.rotate = function(aRot) {\n    var c = mc(aRot);\n    var s = ms(aRot);\n\n    var m1 = [\n      [c,  s, 0],\n      [-s, c, 0],\n      [0,  0, 1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), false);\n  };\n\n  contextPrototype.scale = function(aX, aY) {\n    this.arcScaleX_ *= aX;\n    this.arcScaleY_ *= aY;\n    var m1 = [\n      [aX, 0,  0],\n      [0,  aY, 0],\n      [0,  0,  1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), true);\n  };\n\n  contextPrototype.transform = function(m11, m12, m21, m22, dx, dy) {\n    var m1 = [\n      [m11, m12, 0],\n      [m21, m22, 0],\n      [dx,  dy,  1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), true);\n  };\n\n  contextPrototype.setTransform = function(m11, m12, m21, m22, dx, dy) {\n    var m = [\n      [m11, m12, 0],\n      [m21, m22, 0],\n      [dx,  dy,  1]\n    ];\n\n    setM(this, m, true);\n  };\n\n  /******** STUBS ********/\n  contextPrototype.clip = function() {\n    // TODO: Implement\n  };\n\n  contextPrototype.arcTo = function() {\n    // TODO: Implement\n  };\n\n  contextPrototype.createPattern = function() {\n    return new CanvasPattern_;\n  };\n\n  // Gradient / Pattern Stubs\n  function CanvasGradient_(aType) {\n    this.type_ = aType;\n    this.x0_ = 0;\n    this.y0_ = 0;\n    this.r0_ = 0;\n    this.x1_ = 0;\n    this.y1_ = 0;\n    this.r1_ = 0;\n    this.colors_ = [];\n  }\n\n  CanvasGradient_.prototype.addColorStop = function(aOffset, aColor) {\n    aColor = processStyle(aColor);\n    this.colors_.push({offset: aOffset,\n                       color: aColor.color,\n                       alpha: aColor.alpha});\n  };\n\n  function CanvasPattern_() {}\n\n  // set up externs\n  G_vmlCanvasManager = G_vmlCanvasManager_;\n  CanvasRenderingContext2D = CanvasRenderingContext2D_;\n  CanvasGradient = CanvasGradient_;\n  CanvasPattern = CanvasPattern_;\n\n})();\n\n} // if\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/excanvas.js","digestWhenLastPersisted":"f0e4d90b4b7b5ce7a48c24f1252a06a35a3bcc84","preferredLineEnding":null,"nextMarkerId":136,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferId":"5f7e8c251eed8932397338423c3ee394","largeFileMode":false,"grammarScopeName":"text.plain.null-grammar"},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":84,"softTabs":true,"firstVisibleScreenRow":713,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":85,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/css/styles.css","bufferId":"8f9d3ac62fad83b696cf0f3835e4e7ea","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":88,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":89,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/jquery.flot.labels.js","bufferId":"40cc4da16fe9cdbb911c9193e5e20d63","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":92,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":93,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/javascript.js","bufferId":"1b540c8d79bf9d93dd9f3228c30f4fa2","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":96,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":97,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/excanvas.js","bufferId":"cbfdb188119c42eda2b7f0df455e7a19","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":80,"softTabs":true,"firstVisibleScreenRow":489,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":81,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/templates/browse_assays.php","bufferId":"8a361f9d232dc061b8cabd503f5574f9","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":60,"softTabs":true,"firstVisibleScreenRow":99,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":61,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/swpg_global_settings.php","bufferId":"a240c006bee77d3e1fbe61deddf0921a","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":56,"softTabs":true,"firstVisibleScreenRow":38,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":57,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/core/slim_framework/SWPG/models/XML2Array.php","bufferId":"58b471eb91059732c63d6067e5d15ca4","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":52,"softTabs":true,"firstVisibleScreenRow":52,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":53,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/library/google-api-php-client/src/contrib/Google_PlusService.php","bufferId":"71f8854ddb4b79ef6e756595dcae6eee","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":48,"softTabs":true,"firstVisibleScreenRow":25,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":49,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays_preview/config/settings.php","bufferId":"a98fc86b9f01cdad2044f54adee792f0","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":44,"softTabs":true,"firstVisibleScreenRow":847,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":45,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/templates/show_assay_details.php","bufferId":"09523def22951121d151acebffed2ea2","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":64,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":65,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/js/admin.js","bufferId":"9266ccd76b2990192bef5b365720fd4d","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":68,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":69,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/js/javascript.js","bufferId":"f82ac86c6386ad27bb1f6a5086c46c42","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":72,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":73,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/css/admin.css","bufferId":"86a70ebeac8e77b62c47ddfe98d9816c","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":76,"softTabs":false,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":77,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/site/library/functions/functions.php","bufferId":"4869e055bd0f872afad703098baa5c3f","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":40,"softTabs":true,"firstVisibleScreenRow":446,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":41,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays_import/controllers/import_panorama_protein_peptide.php","bufferId":"38f1ffdf716f6d4ac1b9acb13889138d","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":36,"softTabs":true,"firstVisibleScreenRow":170,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":37,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays_import/controllers/execute_import.php","bufferId":"5bfebd3aa920541a4d68429595e138ba","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":32,"softTabs":true,"firstVisibleScreenRow":1228,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":33,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/models/assays.class.php","bufferId":"a1a9deadf1837d7ace2d1833cef6b80a","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":28,"softTabs":true,"firstVisibleScreenRow":59,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":29,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/controllers/assay_details.php","bufferId":"a9d31d89868d6242758fc56098041fbf","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/kristennice/Desktop/cptac_assays/code/assays/models/assays.class.php","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-css","language-javascript","language-php","language-html","language-sql","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"find-and-replace":{"findOptions":{"findPattern":"uniprot_isoform","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["$data","get_details(","get_uniprot_isoforms","search","function search","search()","uniprot_api","createArray","all_in_one_data","DataTables(",".DataTable();",".dataTable();","flot-tick","tickLabel","chart","chart.js","Chart.js","Chart","excanvas.js","points","symbol:","points","all_in_one_graph","points","uniprot_isoform"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/kristennice/Desktop/cptac_assays/code/assays/library/css/styles.css":1459856836292,"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/jquery.flot.labels.js":1459856754612,"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/javascript.js":1459856755582,"/Users/kristennice/Desktop/cptac_assays/code/assays/library/js/excanvas.js":1459856757050,"/Users/kristennice/Desktop/cptac_assays/code/assays/templates/browse_assays.php":1459799376945,"/Users/kristennice/Desktop/cptac_assays/code/swpg_global_settings.php":1459793742094,"/Users/kristennice/Desktop/cptac_assays/code/core/slim_framework/SWPG/models/XML2Array.php":1459793511921,"/Users/kristennice/Desktop/cptac_assays/code/assays/library/google-api-php-client/src/contrib/Google_PlusService.php":1459764635968,"/Users/kristennice/Desktop/cptac_assays/code/assays_preview/config/settings.php":1459764620650,"/Users/kristennice/Desktop/cptac_assays/code/assays/templates/show_assay_details.php":1459907083985,"/Users/kristennice/Desktop/cptac_assays/code/site/library/js/admin.js":1459799117840,"/Users/kristennice/Desktop/cptac_assays/code/site/library/js/javascript.js":1459799120647,"/Users/kristennice/Desktop/cptac_assays/code/site/library/css/admin.css":1459799125656,"/Users/kristennice/Desktop/cptac_assays/code/site/library/functions/functions.php":1459799127424,"/Users/kristennice/Desktop/cptac_assays/code/assays_import/controllers/import_panorama_protein_peptide.php":1459762424150,"/Users/kristennice/Desktop/cptac_assays/code/assays_import/controllers/execute_import.php":1459479156049,"/Users/kristennice/Desktop/cptac_assays/code/assays/models/assays.class.php":1459980611993,"/Users/kristennice/Desktop/cptac_assays/code/assays/controllers/assay_details.php":1459761259476},"metrics":{"sessionLength":526120761},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/kristennice/Desktop/cptac_assays/code":{"isExpanded":true,"entries":{"assays":{"isExpanded":true,"entries":{"config":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":false,"entries":{}},"library":{"isExpanded":true,"entries":{"css":{"isExpanded":false,"entries":{}},"flashcanvas":{"isExpanded":false,"entries":{}},"google-api-php-client":{"isExpanded":false,"entries":{}},"images":{"isExpanded":false,"entries":{}},"js":{"isExpanded":true,"entries":{"TableTools-2.1.4":{"isExpanded":false,"entries":{}}}}}},"models":{"isExpanded":false,"entries":{}},"templates":{"isExpanded":false,"entries":{}}}},"assays_import":{"isExpanded":true,"entries":{"config":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":false,"entries":{}},"library":{"isExpanded":false,"entries":{}},"models":{"isExpanded":true,"entries":{}},"templates":{"isExpanded":true,"entries":{}}}},"assays_manage":{"isExpanded":false,"entries":{}},"assays_preview":{"isExpanded":true,"entries":{"config":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":false,"entries":{}},"library":{"isExpanded":false,"entries":{}},"models":{"isExpanded":true,"entries":{}},"templates":{"isExpanded":true,"entries":{}}}},"authenticate":{"isExpanded":false,"entries":{}},"cms":{"isExpanded":false,"entries":{}},"core":{"isExpanded":true,"entries":{"javascripts":{"isExpanded":true,"entries":{"aloha-editor":{"isExpanded":false,"entries":{}},"DataTables-1.9.0":{"isExpanded":true,"entries":{"docs":{"isExpanded":false,"entries":{}},"examples":{"isExpanded":false,"entries":{}},"extras":{"isExpanded":false,"entries":{}},"media":{"isExpanded":false,"entries":{}},"scripts":{"isExpanded":false,"entries":{}}}},"DataTables-SWPG":{"isExpanded":false,"entries":{}},"jquery-cookie":{"isExpanded":false,"entries":{}},"jquery-handsontable":{"isExpanded":false,"entries":{}}}},"slim_framework":{"isExpanded":false,"entries":{}}}},"group":{"isExpanded":false,"entries":{}},"modules":{"isExpanded":false,"entries":{}},"site":{"isExpanded":true,"entries":{"config":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":true,"entries":{}},"library":{"isExpanded":true,"entries":{"css":{"isExpanded":true,"entries":{}},"functions":{"isExpanded":true,"entries":{}},"images":{"isExpanded":false,"entries":{}},"js":{"isExpanded":true,"entries":{"jQuery-File-Upload":{"isExpanded":false,"entries":{}}}}}},"templates":{"isExpanded":true,"entries":{}}}},"support":{"isExpanded":false,"entries":{}},"swpg_files":{"isExpanded":true,"entries":{"cptac":{"isExpanded":true,"entries":{"database_backups":{"isExpanded":false,"entries":{}},"fontawesome":{"isExpanded":false,"entries":{}},"ga_key_file":{"isExpanded":false,"entries":{}},"maintenance":{"isExpanded":false,"entries":{}},"panorama":{"isExpanded":false,"entries":{}},"panorama_test":{"isExpanded":false,"entries":{}},"sop_files":{"isExpanded":false,"entries":{}},"temp":{"isExpanded":false,"entries":{}}}}}},"tutorials":{"isExpanded":false,"entries":{}},"user_account":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/kristennice/Desktop/cptac_assays/code/assays/models","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":483}},"fullScreen":false}